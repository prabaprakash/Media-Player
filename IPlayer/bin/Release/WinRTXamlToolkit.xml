<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinRTXamlToolkit</name>
    </assembly>
    <members>
        <member name="T:WinRTXamlToolkit.Async.AsyncAutoResetEvent">
            <summary>
            Notifies one or more waiting awaiters that an event has occurred
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncAutoResetEvent.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AsyncAutoResetEvent class,
            specifying whether the wait handle is initially signaled.
            </summary>
            <param name="initialState">true to set the initial state to signaled; false to set it to nonsignaled.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncAutoResetEvent.WaitAsync">
            <summary>
            Blocks the current task until the current AsyncAutoResetEvent receives a signal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncAutoResetEvent.Reset">
            <summary>
            Sets the state of the event to nonsignaled, causing task returned by the next WaitAsync call to block.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncAutoResetEvent.Set">
            <summary>
            Sets the state of the event to signaled, allowing one or more waiting threads to proceed.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncBarrier">
            <summary>
            Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncBarrier.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Async.AsyncBarrier"/> class.
            </summary>
            <param name="participantCount">The participant count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">participantCount</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncBarrier.SignalAndWait">
            <summary>
            Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncCountdownEvent">
            <summary>
            Represents a synchronization primitive that is signaled when its count reaches zero.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncCountdownEvent.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Async.AsyncCountdownEvent"/> class.
            </summary>
            <param name="initialCount">The initial count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">initialCount</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncCountdownEvent.WaitAsync">
            <summary>
            Waits for the countdown completion signal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncCountdownEvent.Signal">
            <summary>
            Registers a signal, decrementing the current count.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncCountdownEvent.SignalAndWait">
            <summary>
            Registers a signal, then waits for countdown completion.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncLock">
            <summary>
            Defines a critical section with a mutual-exclusion lock.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Async.AsyncLock"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncLock.LockAsync">
            <summary>
            Waits for an open slot, then returns a disposable Releaser struct to be used in a using block marking the critical section.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncLock.Releaser">
            <summary>
            Disposable Releaser to make it easy to use the AsyncLock in a scoped manner with a using block.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncLock.Releaser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncManualResetEvent">
            <summary>
            Notifies one or more waiting awaiters that an event has occurred
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncManualResetEvent.WaitAsync">
            <summary>
            Waits the async.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncManualResetEvent.Set">
            <summary>
            Sets the state of the event to signaled, allowing one or more waiting awaiters to proceed.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncManualResetEvent.Reset">
            <summary>
            Sets the state of the event to nonsignaled, causing awaiters to block.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncReaderWriterLock">
            <summary>
            Defines a lock that supports single writers and multiple readers.
            </summary>
            <remarks>
            See <a href="http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/building-async-coordination-primitives-part-7-asyncreaderwriterlock.aspx">
            http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/building-async-coordination-primitives-part-7-asyncreaderwriterlock.aspx </a>
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncReaderWriterLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Async.AsyncReaderWriterLock"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncReaderWriterLock.ReaderLockAsync">
            <summary>
            ReaderLockAsync is used when a new reader wants in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncReaderWriterLock.WriterLockAsync">
            <summary>
            WriterLockAsync is used when a new writer wants in.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncReaderWriterLock.ReaderRelease">
            <summary>
            Called when an active reader completes its work.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncReaderWriterLock.WriterRelease">
            <summary>
            Called when an active writer completes its work.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncReaderWriterLock.Releaser">
            <summary>
            Disposable Releaser to make it easy to use AsyncReaderWriterLock in a scoped manner with a using block.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Async.AsyncSemaphore">
            <summary>
            Limits the number of awaiters that can access a resource or pool of resources concurrently.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncSemaphore.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Async.AsyncSemaphore"/> class, reserving some concurrent entries.
            </summary>
            <param name="initialCount">The initial count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">initialCount</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncSemaphore.WaitAsync">
            <summary>
            Blocks the current awaiter until the semaphore receives a signal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Async.AsyncSemaphore.Release">
            <summary>
            Exits the semaphore and returns the previous count.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.BitmapImageExtensions">
            <summary>
            Extension methods for awaiting BitmapImage state changes.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.BitmapImageExtensions.WaitForLoadedAsync(Windows.UI.Xaml.Media.Imaging.BitmapImage,System.Int32)">
            <summary>
            Waits for the BitmapImage to load.
            </summary>
            <param name="bitmapImage">The bitmap image.</param>
            <param name="timeoutInMs">The timeout in ms.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.ButtonExtensions">
            <summary>
            Extension methods for waiting for button clicks
            on one or one of a collection of buttons.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.ButtonExtensions.WaitForClickAsync(Windows.UI.Xaml.Controls.Primitives.ButtonBase)">
            <summary>
            Waits for the button Click event.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.ButtonExtensions.WaitForClickAsync(System.Collections.Generic.IEnumerable{Windows.UI.Xaml.Controls.Primitives.ButtonBase})">
            <summary>
            Waits for the Click event from any of the buttons and returns the first button clicked.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.ButtonExtensions.WaitForClickAsync(Windows.UI.Xaml.Controls.Primitives.ButtonBase[])">
            <summary>
            Waits for the Click event from any of the buttons and returns the first button clicked.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.ControlExtensions">
            <summary>
            Extension methods for Control class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.ControlExtensions.GoToVisualStateAsync(Windows.UI.Xaml.Controls.Control,Windows.UI.Xaml.FrameworkElement,System.String,System.String)">
            <summary>
            Goes to specified visual state, waiting for the transition to complete.
            </summary>
            <param name="control">
            Control to transition.
            </param>
            <param name="visualStatesHost">
            FrameworkElement that defines the visual states
            (usually the root of the control's template).
            </param>
            <param name="stateGroupName">
            Name of the state group
            (speeds up the search for the state transition storyboard).
            </param>
            <param name="stateName">
            State to transition to.
            </param>
            <returns>
            Awaitable task that completes when the transition storyboard completes.
            </returns>
            <remarks>
            If a state transition storyboard is not found - the task
            completes immediately.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.ControlExtensions.GetStoryboardForVisualState(Windows.UI.Xaml.FrameworkElement,System.String,System.String)">
            <summary>
            Gets the state transition storyboard for the specified state.
            </summary>
            <param name="visualStatesHost">
            FrameworkElement that defines the visual states
            (usually the root of the control's template).
            </param>
            <param name="stateGroupName">
            Name of the state group
            (speeds up the search for the state transition storyboard).
            </param>
            <param name="stateName">
            State to transition to.
            </param>
            <returns>The state transition storyboard.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.EventAsync">
            <summary>
            Contains helper methods used to generate Tasks for waiting for event occurrence.
            Based on: <a href="http://social.msdn.microsoft.com/Forums/sk/async/thread/30f3339c-5e04-4aa8-9a09-9be72d9d9a1b">http://social.msdn.microsoft.com/Forums/sk/async/thread/30f3339c-5e04-4aa8-9a09-9be72d9d9a1b</a>.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.EventAsync.FromEvent``1(System.Action{System.EventHandler{``0}},System.Action{System.EventHandler{``0}},System.Action)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/>
            that waits for an event to occur.
            </summary>
            <example>
            <![CDATA[
            await EventAsync.FromEvent(
                eh => storyboard.Completed += eh,
                eh => storyboard.Completed -= eh,
                storyboard.Begin);
            ]]>
            </example>
            <param name="addEventHandler">
            The action that subscribes to the event.
            </param>
            <param name="removeEventHandler">
            The action that unsubscribes from the event when it first occurs.
            </param>
            <param name="beginAction">
            The action to call after subscribing to the event.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that
            completes when the event registered in
            <paramref name="addEventHandler"/> occurs.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.EventAsync.FromRoutedEvent(System.Action{Windows.UI.Xaml.RoutedEventHandler},System.Action{Windows.UI.Xaml.RoutedEventHandler},System.Action)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/>
            that waits for an event to occur.
            </summary>
            <example>
            <![CDATA[
            await EventAsync.FromEvent(
                eh => button.Click += eh,
                eh => button.Click -= eh);
            ]]>
            </example>
            <param name="addEventHandler">
            The action that subscribes to the event.
            </param>
            <param name="removeEventHandler">
            The action that unsubscribes from the event when it first occurs.
            </param>
            <param name="beginAction">
            The action to call after subscribing to the event.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that
            completes when the event registered in
            <paramref name="addEventHandler"/> occurs.
            </returns>
        </member>
        <member name="P:WinRTXamlToolkit.AwaitableUI.EventAsync.EventHandlerTaskSource`1.Task">
            <summary>
            Returns a task that waits for the event to occur.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.AwaitableUI.EventAsync.RoutedEventHandlerTaskSource.Task">
            <summary>
            Returns a task that waits for the routed to occur.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions">
            <summary>
            Contains extension methods to wait for FrameworkElement events.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions.WaitForLoadedAsync(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Waits for the element to load (construct and add to the main object tree).
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions.WaitForUnloadedAsync(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Waits for the element to unload (disconnect from the main object tree).
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions.WaitForLayoutUpdateAsync(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Waits for the next layout update event.
            </summary>
            <param name="frameworkElement">The framework element.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions.WaitForNonZeroSizeAsync(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Waits for the size of the element to become non-zero.
            </summary>
            <param name="frameworkElement">The framework element.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.FrameworkElementExtensions.WaitForImagesToLoad(Windows.UI.Xaml.FrameworkElement,System.Int32)">
            <summary>
            Waits for all the image sources in the visual tree to complete loading (useful to call before a page transition).
            </summary>
            <remarks>
            Note that it does not take popups into account.
            </remarks>
            <param name="frameworkElement">The framework element.</param>
            <param name="millisecondsTimeout">The timeout in milliseconds.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.MediaElementExtensions">
            <summary>
            Extension methods for awaiting MediaElement state changes.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.MediaElementExtensions.WaitForStateAsync(Windows.UI.Xaml.Controls.MediaElement,System.Nullable{Windows.UI.Xaml.Media.MediaElementState})">
            <summary>
            Waits for the MediaElement.CurrentState to change to any (default) or specific MediaElementState value.
            </summary>
            <param name="mediaElement"></param>
            <param name="newState">The MediaElementState value to wait for. Null by default causes the metod to wait for a change to any other state.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.MediaElementExtensions.PlayToEndAsync(Windows.UI.Xaml.Controls.MediaElement,System.Uri)">
            <summary>
            Plays to end and waits asynchronously.
            </summary>
            <param name="mediaElement">The media element.</param>
            <param name="source">The source to play.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.MediaElementExtensions.WaitToCompleteAsync(Windows.UI.Xaml.Controls.MediaElement)">
            <summary>
            Waits for the MediaElement to complete playback.
            </summary>
            <param name="mediaElement">The media element.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.SelectorExtensions">
            <summary>
            Contains an extension method for awaiting selection changes on a Selector control, such as a ListBox.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.SelectorExtensions.WaitForSelectionChangedAsync(Windows.UI.Xaml.Controls.Primitives.Selector)">
            <summary>
            Waits for a selection change event in a Selector (eg. a ListBox).
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.StoryboardExtensions">
            <summary>
            Contains an extension method for waiting for Storyboard to complete.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.StoryboardExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)">
            <summary>
            Begins a storyboard and waits for it to complete.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.WebViewExtensions">
            <summary>
            Extension methods for WebView class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.WebViewExtensions.NavigateAsync(Windows.UI.Xaml.Controls.WebView,System.Uri)">
            <summary>
            Navigates to the given source URI and waits for the loading to complete or fail.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.AwaitableUI.WriteableBitmapExtensions">
            <summary>
            Extension methods for awaiting WriteableBitmap events.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.AwaitableUI.WriteableBitmapExtensions.WaitForLoadedAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>
            Waits for the given WriteableBitmap to be loaded (non-zero size).
            </summary>
            <param name="wb">The WriteableBitmap to wait for.</param>
            <param name="timeoutInMs">The timeout in ms after which the wait will be cancelled. Use 0 to wait without a timeout.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Common.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:WinRTXamlToolkit.Common.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Common.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Common.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Common.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Common.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Common.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativeFrame">
            <summary>
            Alternative to the Frame control.
            Supports page transition animations, page preloading and asynchronous navigate event handlers.
            Requires using AlternativePage instead of Page though.
            Its API surface is similar enough to the Frame control that it is pretty easy to swap it in.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.CacheSizeProperty">
            <summary>
            CacheSize Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.OnCacheSizeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CacheSize property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.OnCacheSizeChanged(System.Int32,System.Int32)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CacheSize property.
            </summary>
            <param name="oldCacheSize">The old CacheSize value</param>
            <param name="newCacheSize">The new CacheSize value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.PagePresenterStyleProperty">
            <summary>
            PagePresenterStyle Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.OnPagePresenterStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PagePresenterStyle property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.OnPagePresenterStyleChanged(Windows.UI.Xaml.Style,Windows.UI.Xaml.Style)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PagePresenterStyle property.
            </summary>
            <param name="oldPagePresenterStyle">The old PagePresenterStyle value</param>
            <param name="newPagePresenterStyle">The new PagePresenterStyle value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.PageTransitionProperty">
            <summary>
            PageTransition Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.CanGoBackProperty">
            <summary>
            CanGoBack Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.CanGoForwardProperty">
            <summary>
            CanGoForward Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.CanNavigateProperty">
            <summary>
            CanNavigate Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativeFrame.ShouldWaitForImagesToLoadProperty">
            <summary>
            ShouldWaitForImagesToLoad Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.Preload(System.Type,System.Object)">
            <summary>
            Preloads a page of the specified source page type.
            </summary>
            <remarks>
            Allows to preload a page before user navigates to it, so if it does get navigated to - shows up quickly.
            If another page gets navigated to - the preloaded page will be released or cached depending on its NavigationCacheMode property.
            </remarks>
            <param name="sourcePageType">Type of the source page.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.UnloadPreloaded(System.Type,System.Object)">
            <summary>
            Unloads the preloaded page of a given type and parameter.
            </summary>
            <remarks>
            A page might have been preloaded in the anticipation of the user navigating to it,
            then a state change might invalidate or reduce the possibility of a navigation request and
            it might be worth unloading the preloaded page to release resources that it consumed.
            The preloaded page will be released or cached depending on its NavigationCacheMode property.
            </remarks>
            <param name="sourcePageType">Type of the source page.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.UnloadAllPreloaded">
            <summary>
            Unloads all preloaded pages.
            </summary>
            <remarks>
            Pages might have been preloaded in the anticipation of the user navigating to them,
            then a state change might invalidate or reduce the possibility of a navigation request and
            it might be worth unloading the preloaded pages to release resources that they consumed.
            The preloaded page will be released or cached depending on its NavigationCacheMode property.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.SetNavigationState(System.String)">
            <summary>
            Reads and restores the navigation history of a Frame from a provided serialization string.
            </summary>
            <param name="navigationState">
            The serialization string that supplies the restore point for navigation history.
            </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.GetNavigationState">
            <summary>
            Serializes the Frame navigation history into a string.
            </summary>
            <remarks>
            Serialization is similar to the one used in the matching Frame class method:
            1,TotalPages,BackStackDepth[,SourcePageType_Length,SourcePageType,Parameter_TypeCode,Parameter_Length,Parameter…]
            </remarks>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeFrame.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.AlternativeFrame.Navigated">
            <summary>
            Occurs when navigation completes.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.AlternativeFrame.Navigating">
            <summary>
            Occurs when navigation starts.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.BackStack">
            <summary>
            Gets the back stack.
            </summary>
            <value>
            The back stack.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CurrentJournalEntry">
            <summary>
            Gets the current journal entry.
            </summary>
            <value>
            The current journal entry.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.ForwardStack">
            <summary>
            Gets the forward stack.
            </summary>
            <value>
            The forward stack.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CurrentSourcePageType">
            <summary>
            Gets the type of the current source page.
            </summary>
            <value>
            The type of the current source page.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CacheSize">
            <summary>
            Gets or sets the CacheSize property. This dependency property 
            indicates the number of pages in the navigation history
            that can be cached for the frame.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.PagePresenterStyle">
            <summary>
            Gets or sets the PagePresenterStyle property. This dependency property 
            indicates the style of the ContentPresenters used to host the pages.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.PageTransition">
            <summary>
            Gets or sets the PageTransition property. This dependency property 
            indicates the PageTransition to use to transition between pages.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CanGoBack">
            <summary>
            Gets or sets the CanGoBack property. This dependency property 
            indicates whether you can go back in the navigation history.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CanGoForward">
            <summary>
            Gets or sets the CanGoForward property. This dependency property 
            indicates whether you can go forward in the navigation history.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.CanNavigate">
            <summary>
            Gets or sets the CanNavigate property. This dependency property 
            indicates whether the frame is in a state where a navigation call will be accepted.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeFrame.ShouldWaitForImagesToLoad">
            <summary>
            Gets or sets the ShouldWaitForImagesToLoad property. This dependency property 
            indicates whether the frame should wait for all images in a page to load
            before transitioning to the next page.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventHandler">
            <summary>
            EventHandler delegate for AlternativeFrame cancellable navigation events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs">
            <summary>
            Provides event data for the OnNavigatingFrom callback that can be used
            to cancel a navigation request from origination.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs.#ctor(Windows.UI.Xaml.Navigation.NavigationMode,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs"/> class.
            </summary>
            <param name="navigationMode">The navigation mode.</param>
            <param name="sourcePageType">Type of the source page.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs.Cancel">
            <summary>
            Specifies whether a pending navigation should be canceled.
            </summary>
            <value>
              <c>true</c> to cancel the pending cancelable navigation; <c>false</c> to continue with navigation.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs.NavigationMode">
            <summary>
            Gets the value of the mode parameter from the originating Navigate call.
            </summary>
            <value>
            The value of the mode parameter from the originating Navigate call.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigatingCancelEventArgs.SourcePageType">
            <summary>
            Gets the value of the SourcePageType parameter from the originating Navigate call.
            </summary>
            <value>
            The value of the SourcePageType parameter from the originating Navigate call.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativeNavigationEventHandler">
            <summary>
            EventHandler delegate for AlternativeFrame navigation events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs">
            <summary>
            Provides data for navigation methods and event handlers that cannot cancel the navigation request.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs.#ctor(System.Object,Windows.UI.Xaml.Navigation.NavigationMode,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs"/> class.
            </summary>
            <param name="content">The content.</param>
            <param name="navigationMode">The navigation mode.</param>
            <param name="parameter">The parameter.</param>
            <param name="sourcePageType">Type of the source page.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs.Content">
            <summary>
            Gets the root node of the target page's content.
            </summary>
            <value>
            The root node of the target page's content.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs.NavigationMode">
            <summary>
            Gets a value that indicates the direction of page navigation.
            </summary>
            <value>
            A value of the enumeration.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs.Parameter">
            <summary>
            Gets any Parameter object passed to the target page for the navigation.
            </summary>
            <value>
            An object that potentially passes parameters to the navigation target. May be null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs.SourcePageType">
            <summary>
            Gets the data type of the target page.
            </summary>
            <value>
            The data type of the target page, represented as namespace.type or simply type.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AlternativePage">
            <summary>
            Alternative to the standard Page control, with a similar API,
            for use with the AlternativeFrame control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativePage.FrameProperty">
            <summary>
            Frame Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativePage.OnFrameChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Frame property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativePage.OnFrameChanged(WinRTXamlToolkit.Controls.AlternativeFrame,WinRTXamlToolkit.Controls.AlternativeFrame)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Frame property.
            </summary>
            <param name="oldFrame">The old Frame value</param>
            <param name="newFrame">The new Frame value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativePage.ShouldWaitForImagesToLoadProperty">
            <summary>
            ShouldWaitForImagesToLoad Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativePage.NavigationCacheModeProperty">
            <summary>
            NavigationCacheMode Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativePage.NavigationStateProperty">
            <summary>
            NavigationState Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AlternativePage.PageTransitionProperty">
            <summary>
            PageTransition Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativePage.OnNavigatingToInternal(WinRTXamlToolkit.Controls.AlternativeNavigationEventArgs)">
            <summary>
            The last call before page transition occurs, but after the page has been added to visual tree.
            An opportunity to wait for some limited loading to complete before the transition animation is played.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AlternativePage.Preload(System.Object)">
            <summary>
            Preloads page content if the page gets preloaded using AlternativeFrame.Preload() call.
            Child classes can override this method to provide additional behavior, e.g. initializing page view model based on the parameter.
            </summary>
            <remarks>
            If another page gets navigated to - the preloaded page will be released or cached depending on its NavigationCacheMode property.
            </remarks>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativePage.Frame">
            <summary>
            Gets or sets the Frame property. This dependency property 
            indicates the frame the page is hosted in.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativePage.ShouldWaitForImagesToLoad">
            <summary>
            Gets or sets the ShouldWaitForImagesToLoad property. This dependency property 
            indicates whether the frame should wait for all images in a page to load
            before transitioning to the next page.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativePage.NavigationCacheMode">
            <summary>
            Gets or sets the NavigationCacheMode property. This dependency property 
            indicates whether this Page is cached, and the period of time
            that the cache entry should persist.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativePage.NavigationState">
            <summary>
            Gets or sets the NavigationState property. This dependency property 
            indicates the state of the page in the navigation sequence.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AlternativePage.PageTransition">
            <summary>
            Gets or sets the PageTransition property. This dependency property 
            indicates the PageTransition to use to transition to this page.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PageTransition">
            <summary>
            Abstract base class for page transitions used with AlternativeFrame control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.ForwardOutAnimationProperty">
            <summary>
            ForwardOutAnimation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.ForwardInAnimationProperty">
            <summary>
            ForwardInAnimation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.BackwardOutAnimationProperty">
            <summary>
            BackwardOutAnimation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.BackwardInAnimationProperty">
            <summary>
            BackwardInAnimation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.DurationProperty">
            <summary>
            Duration Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransition.EasingFunctionProperty">
            <summary>
            EasingFunction Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.Mode">
            <summary>
            Gets the page transition mode.
            </summary>
            <value>
            The page transition mode.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.ForwardOutAnimation">
            <summary>
            Gets or sets the ForwardOutAnimation property. This dependency property 
            indicates the animation to use during forward navigation to remove the previous page from view.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.ForwardInAnimation">
            <summary>
            Gets or sets the ForwardInAnimation property. This dependency property 
            indicates the animation to use during forward navigation to bring the new page into view.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.BackwardOutAnimation">
            <summary>
            Gets or sets the BackwardOutAnimation property. This dependency property 
            indicates the animation to use during backward navigation to remove the previous page from view.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.BackwardInAnimation">
            <summary>
            Gets or sets the BackwardInAnimation property. This dependency property 
            indicates the animation to use during backward navigation to bring the new page into view.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.Duration">
            <summary>
            Gets or sets the Duration property. This dependency property 
            indicates the length of time for which the transition plays.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransition.EasingFunction">
            <summary>
            Gets or sets the EasingFunction property. This dependency property 
            indicates the easing function applied to the transition animation.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.DissolveTransition">
            <summary>
            Transition in which the new page fades in on top of the old page.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.DissolveTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.DissolveTransition"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.DissolveTransition.Mode">
            <summary>
            Gets the page transition mode.
            </summary>
            <value>
            The page transition mode.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.FadeAnimation">
            <summary>
            Page transition animation used to fade the target page in or out.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PageTransitionAnimation">
            <summary>
            Base class for page transition animations used with an AlternativeFrame control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransitionAnimation.ModeProperty">
            <summary>
            Mode Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransitionAnimation.DurationProperty">
            <summary>
            Duration Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransitionAnimation.EasingFunctionProperty">
            <summary>
            EasingFunction Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransitionAnimation.Animation">
            <summary>
            Gets the generated animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransitionAnimation.Mode">
            <summary>
            Gets or sets the Mode property. This dependency property 
            indicates whether this is an animation to slide in or out.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransitionAnimation.Duration">
            <summary>
            Gets or sets the Duration property. This dependency property 
            indicates the length of time for which this timeline plays, not counting repetitions.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PageTransitionAnimation.EasingFunction">
            <summary>
            Gets or sets the EasingFunction property. This dependency property 
            indicates the easing function applied to the transition animation.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FadeAnimation.Animation">
            <summary>
            Gets the generated animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.FlipAnimation">
            <summary>
            Animation used in FlipTransition for a 3D flip of a page element.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.FlipAnimation.DirectionProperty">
            <summary>
            Direction Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.FlipAnimation.AxisOfFlipProperty">
            <summary>
            AxisOfFlip Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipAnimation.Direction">
            <summary>
            Gets or sets the Direction property. This dependency property 
            indicates the slide direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipAnimation.AxisOfFlip">
            <summary>
            Gets or sets the AxisOfFlip property. This dependency property 
            indicates the position of the axis to flip around.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.FlipTransition">
            <summary>
            3D flip transition
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.FlipTransition.ForwardDirectionProperty">
            <summary>
            ForwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnForwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ForwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnForwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ForwardDirection property.
            </summary>
            <param name="oldForwardDirection">The old ForwardDirection value</param>
            <param name="newForwardDirection">The new ForwardDirection value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.FlipTransition.BackwardDirectionProperty">
            <summary>
            BackwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnBackwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BackwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnBackwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the BackwardDirection property.
            </summary>
            <param name="oldBackwardDirection">The old BackwardDirection value</param>
            <param name="newBackwardDirection">The new BackwardDirection value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.FlipTransition.AxisOfFlipProperty">
            <summary>
            AxisOfFlip Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnAxisOfFlipChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AxisOfFlip property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FlipTransition.OnAxisOfFlipChanged(WinRTXamlToolkit.Controls.AxisOfFlip,WinRTXamlToolkit.Controls.AxisOfFlip)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the AxisOfFlip property.
            </summary>
            <param name="oldAxisOfFlip">The old AxisOfFlip value</param>
            <param name="newAxisOfFlip">The new AxisOfFlip value</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipTransition.Mode">
            <summary>
            Gets the page transition mode.
            </summary>
            <value>
            The page transition mode.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipTransition.ForwardDirection">
            <summary>
            Gets or sets the ForwardDirection property. This dependency property 
            indicates the forward transition direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipTransition.BackwardDirection">
            <summary>
            Gets or sets the BackwardDirection property. This dependency property 
            indicates the backward transition direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.FlipTransition.AxisOfFlip">
            <summary>
            Gets or sets the AxisOfFlip property. This dependency property 
            indicates the position of the axis to flip around.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.FrameCache">
            <summary>
            Manages instantiation, retrieval and caching of AlternativePage instances used in AlternativeFrame
            in a manner similar to the original Frame class in the framework.
            AlternativeFrame should always get page instances by calling FrameCache.Get()
            when navigating to a page or preloading one
            and store a page by calling FrameCache.Store() when navigating away from it.
            FrameCache decides whether a page should actually be cached when calling Store() or whether to ignore the call.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FrameCache.Get(System.Type)">
            <summary>
            Gets the page of specified type.
            If one is already cached - it removes it from the cache and returns it.
            If one isn't cached - it returns a new instance.
            </summary>
            <remarks>
            There is no guarantee of returning a specific page from the cache
            if there are multiple pages of the same type stored.
            </remarks>
            <param name="type">The type.</param>
            <returns>An AlternativePage of a given type.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.FrameCache.Store(WinRTXamlToolkit.Controls.AlternativePage)">
            <summary>
            Stores the specified page in cache.
            </summary>
            <remarks>
            Multiple pages of same type may be stored.
            </remarks>
            <param name="page">The page.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.JournalEntry">
            <summary>
            Represents an entry in either back or forward navigation history.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.JournalEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.JournalEntry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.JournalEntry.SourcePageType">
            <summary>
            Gets the type of the page that was navigated to.
            </summary>
            <value>
            The type of the page that was navigated to.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.JournalEntry.Parameter">
            <summary>
            Gets the parameter passed to the page when it was navigated to.
            </summary>
            <value>
            The parameter passed to the page when it was navigated to.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NavigationCacheMode">
            <summary>
            Specifies how the page is cached when used within a frame.
            </summary>
            <remarks>
            You use the NavigationCacheMode enumeration when setting the NavigationCacheMode property
            of the <see cref="T:WinRTXamlToolkit.Controls.AlternativePage"/> class.
            You specify whether a new instance of the page is created for each visit to the page or whether
            a previously constructed instance of the page that has been saved in the cache is used for each visit.
            <p/>
            The default value for the NavigationCacheMode property is Disabled.
            Set the NavigationCacheMode property to Enabled or Required when a new instance of the page is not essential for each visit.
            By using a cached instance of the page, you can improve the performance of your application and
            reduce the load on your server. Set the NavigationCacheMode property to Disabled
            if a new instance must be created for each visit. For example, you should not cache a page that
            displays information that is unique to each customer.
            <p/>
            The OnNavigatedTo method is called for each request, even when the page is retrieved from the cache.
            You should include in this method code that must be executed for each request rather than placing
            that code in the Page constructor.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationCacheMode.Disabled">
            <summary>
            The page is never cached and a new instance of the page is created on each visit.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationCacheMode.Required">
            <summary>
            The page is cached and the cached instance is reused for every visit regardless of the cache size for the frame.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationCacheMode.Enabled">
            <summary>
            The page is cached, but the cached instance is discarded when the size of the cache for the frame is exceeded.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PushTransition">
            <summary>
            Transition in which the old page is pushed off the screen by the new page moving into the screen
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PushTransition.ForwardDirectionProperty">
            <summary>
            ForwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PushTransition.OnForwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ForwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PushTransition.OnForwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ForwardDirection property.
            </summary>
            <param name="oldForwardDirection">The old ForwardDirection value</param>
            <param name="newForwardDirection">The new ForwardDirection value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PushTransition.BackwardDirectionProperty">
            <summary>
            BackwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PushTransition.OnBackwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BackwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PushTransition.OnBackwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the BackwardDirection property.
            </summary>
            <param name="oldBackwardDirection">The old BackwardDirection value</param>
            <param name="newBackwardDirection">The new BackwardDirection value</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PushTransition.Mode">
            <summary>
            Gets the page transition mode.
            </summary>
            <value>
            The page transition mode.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PushTransition.ForwardDirection">
            <summary>
            Gets or sets the ForwardDirection property. This dependency property 
            indicates the forward transition direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PushTransition.BackwardDirection">
            <summary>
            Gets or sets the BackwardDirection property. This dependency property 
            indicates the backward transition direction.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.SlideAnimation">
            <summary>
            The transition where the new page slides on top of the old page.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.SlideAnimation.DirectionProperty">
            <summary>
            Direction Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.SlideAnimation.Direction">
            <summary>
            Gets or sets the Direction property. This dependency property 
            indicates the slide direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.SlideAnimation.Animation">
            <summary>
            Gets the generated animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AnimationMode">
            <summary>
            Animation mode.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.In">
            <summary>
            Animation used to show target.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.Out">
            <summary>
            Animation used to hide target.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.ForwardIn">
            <summary>
            Animation used to show target during forward navigation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.ForwardOut">
            <summary>
            Animation used to hide target during forward navigation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.BackwardIn">
            <summary>
            Animation used to show target during backward navigation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimationMode.BackwardOut">
            <summary>
            Animation used to hide target during backward navigation.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AxisOfFlip">
            <summary>
            Axis position for flip transition.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AxisOfFlip.LeftOrTop">
            <summary>
            Left or top edge axis.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AxisOfFlip.Center">
            <summary>
            Axis that goes through the center of the animation target.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AxisOfFlip.RightOrBottom">
            <summary>
            Right or bottom axis.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AxisOfFlip.Random">
            <summary>
            Randomly selected axis.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.DirectionOfMotion">
            <summary>
            Direction of motion for animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DirectionOfMotion.RightToLeft">
            <summary>
            Right to left transition animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DirectionOfMotion.LeftToRight">
            <summary>
            left to right transition animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DirectionOfMotion.TopToBottom">
            <summary>
            Top to bottom transition animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DirectionOfMotion.BottomToTop">
            <summary>
            Bottom to top transition animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DirectionOfMotion.Random">
            <summary>
            Randomly selected transition animation direction of motion.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NavigationState">
            <summary>
            State of the state machine of AlternativeFrame/AlternativePage.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.Initializing">
            <summary>
            The page is initializing.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.Preloading">
            <summary>
            The page is preloading content
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.Preloaded">
            <summary>
            The page has preloaded content
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.UnloadingPreloaded">
            <summary>
            The page is unloading preloaded content
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.UnloadedPreloaded">
            <summary>
            The page has unloaded preloaded content
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.NavigatingTo">
            <summary>
            The page is being navigated to
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.TransitioningTo">
            <summary>
            The page is being transitioned to
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.NavigatedTo">
            <summary>
            The page has been navigated to
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.TransitionedTo">
            <summary>
            The page has been transitioned to
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.NavigatingFrom">
            <summary>
            The page is being navigating from
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.NavigatedFrom">
            <summary>
            The page has been navigated from
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.TransitioningFrom">
            <summary>
            The page is being transitioned from
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NavigationState.TransitionedFrom">
            <summary>
            The page has been transitioned from
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PageTransitionMode">
            <summary>
            Determines whether page transition animations should occur sequentially or parallel/concurrently on both pages.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransitionMode.Sequential">
            <summary>
            Out animation runs first, then in animation runs.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PageTransitionMode.Parallel">
            <summary>
            Both in and out animations start at the same time.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.WipeAnimation">
            <summary>
            Animation used in WipeTransition that reveals the page using a clip rectangle animation.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WipeAnimation.DirectionProperty">
            <summary>
            Direction Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WipeAnimation.Direction">
            <summary>
            Gets or sets the Direction property. This dependency property 
            indicates the slide direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WipeAnimation.Animation">
            <summary>
            Gets the generated animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.WipeTransition">
            <summary>
            The transition where the new page gets revealed with a moving rectangular clip rectangle.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WipeTransition.ForwardDirectionProperty">
            <summary>
            ForwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WipeTransition.OnForwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ForwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WipeTransition.OnForwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ForwardDirection property.
            </summary>
            <param name="oldForwardDirection">The old ForwardDirection value</param>
            <param name="newForwardDirection">The new ForwardDirection value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WipeTransition.BackwardDirectionProperty">
            <summary>
            BackwardDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WipeTransition.OnBackwardDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BackwardDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WipeTransition.OnBackwardDirectionChanged(WinRTXamlToolkit.Controls.DirectionOfMotion,WinRTXamlToolkit.Controls.DirectionOfMotion)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the BackwardDirection property.
            </summary>
            <param name="oldBackwardDirection">The old BackwardDirection value</param>
            <param name="newBackwardDirection">The new BackwardDirection value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WipeTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.WipeTransition"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WipeTransition.Mode">
            <summary>
            Gets the page transition mode.
            </summary>
            <value>
            The page transition mode.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WipeTransition.ForwardDirection">
            <summary>
            Gets or sets the ForwardDirection property. This dependency property 
            indicates the forward transition direction.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WipeTransition.BackwardDirection">
            <summary>
            Gets or sets the BackwardDirection property. This dependency property 
            indicates the backward transition direction.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.AnimatingContainer">
            <summary>
            A UserControl that applies animation to its content.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.RotatingContentProperty">
            <summary>
            RotatingContent Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRotatingContentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RotatingContent property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRotatingContentChanged(System.Object,System.Object)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RotatingContent property.
            </summary>
            <param name="oldRotatingContent">The old RotatingContent value</param>
            <param name="newRotatingContent">The new RotatingContent value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.RadiusXProperty">
            <summary>
            RadiusX Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRadiusXChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RadiusX property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRadiusXChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RadiusX property.
            </summary>
            <param name="oldRadiusX">The old RadiusX value</param>
            <param name="newRadiusX">The new RadiusX value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.RadiusYProperty">
            <summary>
            RadiusY Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRadiusYChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RadiusY property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnRadiusYChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RadiusY property.
            </summary>
            <param name="oldRadiusY">The old RadiusY value</param>
            <param name="newRadiusY">The new RadiusY value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.DurationProperty">
            <summary>
            Duration Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnDurationChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Duration property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnDurationChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Duration property.
            </summary>
            <param name="oldDuration">The old Duration value</param>
            <param name="newDuration">The new Duration value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.PulseScaleProperty">
            <summary>
            PulseScale Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnPulseScaleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PulseScale property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnPulseScaleChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PulseScale property.
            </summary>
            <param name="oldPulseScale">The old PulseScale value</param>
            <param name="newPulseScale">The new PulseScale value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.AutoPlayProperty">
            <summary>
            AutoPlay Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.AnimatingContainer.IsAnimatingProperty">
            <summary>
            IsAnimating Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnIsAnimatingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsAnimating property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.AnimatingContainer.OnIsAnimatingChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsAnimating property.
            </summary>
            <param name="oldIsAnimating">The old IsAnimating value</param>
            <param name="newIsAnimating">The new IsAnimating value</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.RotatingContent">
            <summary>
            Gets or sets the RotatingContent property. This dependency property 
            indicates the RotatingContent of this control.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.RadiusX">
            <summary>
            Gets or sets the RadiusX property. This dependency property 
            indicates the rotation RadiusX.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.RadiusY">
            <summary>
            Gets or sets the RadiusY property. This dependency property 
            indicates the rotation RadiusY.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.Duration">
            <summary>
            Gets or sets the Duration property. This dependency property 
            indicates the duration of the animation.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.PulseScale">
            <summary>
            Gets or sets the PulseScale property. This dependency property 
            indicates the rotation PulseScale.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.AutoPlay">
            <summary>
            Gets or sets the AutoPlay property. This dependency property 
            indicates whether animation playback will begin automatically when the control loads.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.AnimatingContainer.IsAnimating">
            <summary>
            Gets or sets the IsAnimating property. This dependency property 
            indicates whether the animation is playing.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Behaviors.ParallaxBackgroundBehavior">
            <summary>
            Allows to define a parallax background for use with a ScrollViewer.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Interactivity.Behavior`1">
            <summary>
            Encapsulates state information and zero or more ICommands into an attachable object.
            </summary>
            <typeparam name="T">
            The type the <see cref="T:WinRTXamlToolkit.Interactivity.Behavior`1"/> can be attached to.
            </typeparam>
            <remarks>
            Behavior is the base class for providing attachable state and commands to
            an object. The types the Behavior can be attached to can be controlled by
            the generic parameter. Override OnAttached() and OnDetaching() methods to
            hook and unhook any necessary handlers from the AssociatedObject.
            </remarks>
        </member>
        <member name="T:WinRTXamlToolkit.Interactivity.Behavior">
            <summary>
            Encapsulates state information and zero or more ICommands into an attachable object.
            </summary>
            <remarks>
            This is an infrastructure class. Behavior authors should derive
            from <see cref="T:WinRTXamlToolkit.Interactivity.Behavior`1"/> instead of from this class.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Interactivity.Behavior._associatedObject">
            <summary>
            The backing field for AssociatedObject.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Interactivity.Behavior._associatedType">
            <summary>
            The backing field for AssociatedType property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.Attach(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="dependencyObject">
            The object to attach to.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The Behavior is already hosted on a different element.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            dependencyObject does not satisfy the Behavior type constraint.
            </exception>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but
            before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.OnLoaded">
            <summary>
            Called after the AssociatedObject is loaded (added to visual tree).
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior.OnUnloaded">
            <summary>
            Called after the AssociatedObject is unloaded (removed from visual tree).
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Interactivity.Behavior.AssociatedObject">
            <summary>
            Gets the object to which this behavior is attached.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Interactivity.Behavior.AssociatedType">
            <summary>
            The type to which this behavior can be attached.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Behavior`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Interactivity.Behavior`1"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Interactivity.Behavior`1.AssociatedObject">
            <summary>
            Gets the object to which this <see cref="T:WinRTXamlToolkit.Interactivity.Behavior`1"/> is attached.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Behaviors.ParallaxBackgroundBehavior.BackgroundElementTemplateProperty">
            <summary>
            BackgroundElementTemplate Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Behaviors.ParallaxBackgroundBehavior.BackgroundElementTemplate">
            <summary>
            Gets or sets the BackgroundElementTemplate property. This dependency property 
            indicates the template of the element to place in the background of the associated ScrollViewer.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Behaviors.FlickBehavior">
            <summary>
            When applied to an element placed in a Canvas - allows the element to be dragged or flicked.
            </summary>
            <remarks>
            Works by changing the Canvas.Top/Left properties.
            Changes Manipulation mode of the associated element to translate with inertia.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.FlickBehavior.OnLoaded">
            <summary>
            Called after the AssociatedObject is loaded (added to visual tree).
            </summary>
            <exception cref="T:System.InvalidOperationException">FlickBehavior can only be used on elements hosted inside of a Canvas.</exception>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.FlickBehavior.OnUnloaded">
            <summary>
            Called after the AssociatedObject is unloaded (removed from visual tree).
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior">
            <summary>
            An attached behavior used to highlight instances of the SearchString in a TextBlock.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.SearchStringProperty">
            <summary>
            SearchString Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnSearchStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the SearchString property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnSearchStringChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the SearchString property.
            </summary>
            <param name="oldSearchString">The old SearchString value</param>
            <param name="newSearchString">The new SearchString value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.IsCaseSensitiveProperty">
            <summary>
            IsCaseSensitive Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnIsCaseSensitiveChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsCaseSensitive property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnIsCaseSensitiveChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsCaseSensitive property.
            </summary>
            <param name="oldIsCaseSensitive">The old IsCaseSensitive value</param>
            <param name="newIsCaseSensitive">The new IsCaseSensitive value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.HighlightTemplateProperty">
            <summary>
            HighlightTemplate Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnHighlightTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HighlightTemplate property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnHighlightTemplateChanged(Windows.UI.Xaml.DataTemplate,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HighlightTemplate property.
            </summary>
            <param name="oldHighlightTemplate">The old HighlightTemplate value</param>
            <param name="newHighlightTemplate">The new HighlightTemplate value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.HighlightBrushProperty">
            <summary>
            HighlightBrush Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnHighlightBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HighlightBrush property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.OnHighlightBrushChanged(Windows.UI.Xaml.Media.Brush,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HighlightBrush property.
            </summary>
            <param name="oldHighlightBrush">The old HighlightBrush value</param>
            <param name="newHighlightBrush">The new HighlightBrush value</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.SearchString">
            <summary>
            Gets or sets the SearchString property. This dependency property 
            indicates the search string to highlight in the associated TextBlock.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.IsCaseSensitive">
            <summary>
            Gets or sets the IsCaseSensitive property. This dependency property 
            indicates whether the highlight behavior is case sensitive.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.HighlightTemplate">
            <summary>
            Gets or sets the HighlightTemplate property. This dependency property 
            indicates the template to use to generate the highlight Run inlines.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Behaviors.HighlightBehavior.HighlightBrush">
            <summary>
            Gets or sets the HighlightBrush property. This dependency property 
            indicates the brush to use to highlight the found instances of the search string.
            </summary>
            <remarks>
            Note that the brush is ignored if HighlightTemplate is specified
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadeSequence.EndTogether">
            <summary>
            The tile cascade animations end at the same time
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadeSequence.EqualDuration">
            <summary>
            The tile cascade animations are equal duration
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.ColumnsProperty">
            <summary>
            Columns Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnColumnsChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Columns property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnColumnsChanged(System.Int32,System.Int32)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Columns property.
            </summary>
            <param name="oldColumns">The old Columns value</param>
            <param name="newColumns">The new Columns value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.RowsProperty">
            <summary>
            Rows Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnRowsChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Rows property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnRowsChanged(System.Int32,System.Int32)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Rows property.
            </summary>
            <param name="oldRows">The old Rows value</param>
            <param name="newRows">The new Rows value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.ImageSourceProperty">
            <summary>
            ImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ImageSource property.
            </summary>
            <param name="oldImageSource">The old ImageSource value</param>
            <param name="newImageSource">The new ImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.ColumnDelayProperty">
            <summary>
            ColumnDelay Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnColumnDelayChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ColumnDelay property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnColumnDelayChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ColumnDelay property.
            </summary>
            <param name="oldColumnDelay">The old ColumnDelay value</param>
            <param name="newColumnDelay">The new ColumnDelay value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.RowDelayProperty">
            <summary>
            RowDelay Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnRowDelayChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RowDelay property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnRowDelayChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RowDelay property.
            </summary>
            <param name="oldRowDelay">The old RowDelay value</param>
            <param name="newRowDelay">The new RowDelay value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.TileDurationProperty">
            <summary>
            TileDuration Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnTileDurationChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TileDuration property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingImageControl.OnTileDurationChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the TileDuration property.
            </summary>
            <param name="oldTileDuration">The old TileDuration value</param>
            <param name="newTileDuration">The new TileDuration value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeDirectionProperty">
            <summary>
            CascadeDirection Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeInEasingFunctionProperty">
            <summary>
            CascadeInEasingFunction Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeSequenceProperty">
            <summary>
            CascadeSequence Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.Columns">
            <summary>
            Gets or sets the Columns property. This dependency property 
            indicates the number of columns.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.Rows">
            <summary>
            Gets or sets the Rows property. This dependency property 
            indicates the number of rows.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.ImageSource">
            <summary>
            Gets or sets the ImageSource property. This dependency property 
            indicates the image to display in a cascade.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.ColumnDelay">
            <summary>
            Gets or sets the ColumnDelay property. This dependency property 
            indicates the delay of the cascade for each column.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.RowDelay">
            <summary>
            Gets or sets the RowDelay property. This dependency property 
            indicates the delay of the cascade for each row.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.TileDuration">
            <summary>
            Gets or sets the TileDuration property. This dependency property 
            indicates the duration of an item's animation.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeDirection">
            <summary>
            Gets or sets the CascadeDirection property. This dependency property 
            indicates the direction of the cascade animation.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeInEasingFunction">
            <summary>
            Gets or sets the CascadeInEasingFunction property. This dependency property 
            indicates the easing function to use in the cascade in transition.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingImageControl.CascadeSequence">
            <summary>
            Gets or sets the CascadeSequence property. This dependency property 
            indicates how cascade animations are sequenced.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ColorPicker">
            <summary>
            Control for selecting a color.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.ColorPicker"/> class.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.HueRingPicker">
            <summary>
            The Value is the 0..360deg range hue.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HueRingPicker.RingThicknessProperty">
            <summary>
            RingThickness Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnRingThicknessChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RingThickness property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnRingThicknessChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RingThickness property.
            </summary>
            <param name="oldRingThickness">The old RingThickness value</param>
            <param name="newRingThickness">The new RingThickness value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HueRingPicker.ThumbArcAngleProperty">
            <summary>
            ThumbArcAngle Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbArcAngleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ThumbArcAngle property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbArcAngleChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ThumbArcAngle property.
            </summary>
            <param name="oldThumbArcAngle">The old ThumbArcAngle value</param>
            <param name="newThumbArcAngle">The new ThumbArcAngle value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBorderBrushProperty">
            <summary>
            ThumbBorderBrush Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBorderBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ThumbBorderBrush property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBorderBrushChanged(Windows.UI.Xaml.Media.Brush,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ThumbBorderBrush property.
            </summary>
            <param name="oldThumbBorderBrush">The old ThumbBorderBrush value</param>
            <param name="newThumbBorderBrush">The new ThumbBorderBrush value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBorderThicknessProperty">
            <summary>
            ThumbBorderThickness Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBorderThicknessChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ThumbBorderThickness property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBorderThicknessChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ThumbBorderThickness property.
            </summary>
            <param name="oldThumbBorderThickness">The old ThumbBorderThickness value</param>
            <param name="newThumbBorderThickness">The new ThumbBorderThickness value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBackgroundProperty">
            <summary>
            ThumbBackground Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ThumbBackground property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.OnThumbBackgroundChanged(Windows.UI.Xaml.Media.Brush,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ThumbBackground property.
            </summary>
            <param name="oldThumbBackground">The old ThumbBackground value</param>
            <param name="newThumbBackground">The new ThumbBackground value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HueRingPicker.InitializeMinMaxCoercion">
            <summary>
            Initializes event handling to coerce Minimum and Maximum properties to the 0..360 range.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HueRingPicker.RingThickness">
            <summary>
            Gets or sets the RingThickness property. This dependency property 
            indicates the thickness of the hue ring.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HueRingPicker.ThumbArcAngle">
            <summary>
            Gets or sets the ThumbArcAngle property. This dependency property 
            indicates the angle between the ring thumb ring slice start and end angles.
            </summary>
            <remarks>
            Depending on the size if the control - smaller or larger angles might work better.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBorderBrush">
            <summary>
            Gets or sets the ThumbBorderBrush property. This dependency property 
            indicates the brush used to render the ring thumb's border.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBorderThickness">
            <summary>
            Gets or sets the ThumbBorderThickness property. This dependency property 
            indicates the thickness of the thumb border.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HueRingPicker.ThumbBackground">
            <summary>
            Gets or sets the ThumbBackground property. This dependency property 
            indicates the brush used to fill the ring thumb.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.TrianglePicker">
            <summary>
            Triangle shaped picker control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TrianglePicker.XProperty">
            <summary>
            X Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TrianglePicker.OnXChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the X property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TrianglePicker.OnXChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the X property.
            </summary>
            <param name="oldX">The old X value</param>
            <param name="newX">The new X value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TrianglePicker.YProperty">
            <summary>
            Y Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TrianglePicker.OnYChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Y property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TrianglePicker.OnYChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Y property.
            </summary>
            <param name="oldY">The old Y value</param>
            <param name="newY">The new Y value</param>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TrianglePicker.ValueChanged">
            <summary>
            Occurs when the value changes.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TrianglePicker.X">
            <summary>
            Gets or sets the X property. This dependency property 
            indicates the X coordinate of the selected point in the triangle.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TrianglePicker.Y">
            <summary>
            Gets or sets the Y property. This dependency property 
            indicates the Y coordinate of the selected point in the triangle.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Data.DataTemplateExtensions.HierarchyProperty">
            <summary>
            Hierarchy Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Data.DataTemplateExtensions.GetHierarchy(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Hierarchy property. This dependency property 
            indicates the hierarchical template extensions to use for data-bound hierarchical controls.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Data.DataTemplateExtensions.SetHierarchy(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate)">
            <summary>
            Sets the Hierarchy property. This dependency property 
            indicates the hierarchical template extensions to use for data-bound hierarchical controls.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Data.DataTemplateExtensions.OnHierarchyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Hierarchy property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.DelayedLoadControl">
            <summary>
            A control that loads the ContentTemplate
            after specified Delay elapses from the time the control itself loads.
            </summary>
            <remarks>
            If the IsEnabled property is false - the content does not load.
            Instead it only starts loading after the given Delay from the time
            IsEnabled is set to true again.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DelayedLoadControl.DelayProperty">
            <summary>
            The delay property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.DelayedLoadControl.ContentTemplateProperty">
            <summary>
            The content template property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.DelayedLoadControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.DelayedLoadControl"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.DelayedLoadControl.Delay">
            <summary>
            Gets or sets the delay after which the ContentTemplate should be loaded.
            </summary>
            <remarks>
            If the IsEnabled property is false - the content does not load.
            Instead it only starts loading after the given Delay from the time
            IsEnabled is set to true again.
            </remarks>
            <value>
            The delay.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.DelayedLoadControl.ContentTemplate">
            <summary>
            Gets or sets the content template that should be loaded
            after the specified Delay.
            </summary>
            <value>
            The content template.
            </value>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonBaseExtensions.ButtonStateEventBehaviorProperty">
            <summary>
            ButtonStateEventBehavior Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ButtonBaseExtensions.GetButtonStateEventBehavior(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ButtonStateEventBehavior property. This dependency property 
            indicates the behavior that allows to handle button Up/Down event handling.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ButtonBaseExtensions.SetButtonStateEventBehavior(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior)">
            <summary>
            Sets the ButtonStateEventBehavior property. This dependency property 
            indicates the behavior that allows to handle button Up/Down event handling.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ButtonBaseExtensions.OnButtonStateEventBehaviorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ButtonStateEventBehavior property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.IsPressedProperty">
            <summary>
            IsPressed Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.OnIsPressedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsPressed property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.OnIsPressedChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsPressed property.
            </summary>
            <param name="oldIsPressed">The old IsPressed value</param>
            <param name="newIsPressed">The new IsPressed value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.UpCommandProperty">
            <summary>
            UpCommand Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.UpCommandParameterProperty">
            <summary>
            UpCommandParameter Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.DownCommandProperty">
            <summary>
            DownCommand Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.DownCommandParameterProperty">
            <summary>
            DownCommandParameter Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.IsPressed">
            <summary>
            Gets or sets the IsPressed property. This dependency property 
            indicates whether the button is up or down.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.UpCommand">
            <summary>
            Gets or sets the UpCommand property. This dependency property 
            indicates the command to execute when the button gets released.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.UpCommandParameter">
            <summary>
            Gets or sets the UpCommandParameter property. This dependency property 
            indicates the parameter for UpCommand.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.DownCommand">
            <summary>
            Gets or sets the DownCommand property. This dependency property 
            indicates the command to execute when the button gets pressed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Extensions.ButtonStateEventBehavior.DownCommandParameter">
            <summary>
            Gets or sets the DownCommandParameter property. This dependency property 
            indicates the parameter to use with DownCommand.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFormatValidationHandler">
            <summary>
            Handles validation of PasswordBox.Text whenever TextChanged property is raised.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ValidationChecks">
            <summary>
            Defines basic formats accepted by TextBox Text.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.Any">
            <summary>
            Any content is valid.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.NonEmpty">
            <summary>
            Field value can't be empty.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.Numeric">
            <summary>
            Field value needs to be numeric (parse to a double).
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.SpecificLength">
            <summary>
            Field value needs to be as long as MaxLength.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.MinLength">
            <summary>
            Field value needs to be at least as long as FieldValidationExtensions.MinLength.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.MatchesRegexPattern">
            <summary>
            Field value needs to match Pattern treated as a regular expression.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.EqualsPattern">
            <summary>
            Field value equals value specified by the FieldValidationExtensions.Pattern property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.IncludesLowercase">
            <summary>
            The field value needs to include lowercase characters.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.IncludesUppercase">
            <summary>
            The field value needs to include uppercase characters.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.IncludesDigits">
            <summary>
            The field value needs to include digits.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.IncludesSymbol">
            <summary>
            The field value needs to include symbols (non-alphabetic, non-numeric, non-space characters - includes punctuation characters).
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.NoDoubles">
            <summary>
            The field value can't include doubled substrings (e.g. "BB" or "ABAB").
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.NonEmptyNumeric">
            <summary>
            Field value needs to be numeric (parse to a double) and non-empty.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ValidationChecks.IsStrongPassword">
            <summary>
            The field value needs to be a strong password -
            match minimum length requirement,
            include upper and lowercase characters,
            numbers,
            symbols
            and can't have doubled substrings.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions">
            <summary>
            Attached properties for use with a ListBoxItem.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListBox and not the ListBoxItem itself.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.IsEnabledProperty">
            <summary>
            IsEnabled Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.GetIsEnabled(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsEnabled property. This dependency property 
            indicates whether the first ListBoxItem found in ancestors is enabled.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListBox and not the ListBoxItem itself.
            Setting this property will update the IsEnabled property of the ListBoxItem making it easier to
            disable selection of ListBoxItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.SetIsEnabled(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsEnabled property. This dependency property 
            indicates whether the first ListBoxItem found in ancestors is enabled.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListBox and not the ListBoxItem itself.
            Setting this property will update the IsEnabled property of the ListBoxItem making it easier to
            disable selection of ListBoxItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.OnIsEnabledChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsEnabled property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.IsSelectedProperty">
            <summary>
            IsSelected Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.GetIsSelected(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsSelected property. This dependency property 
            indicates whether the first ListBoxItem found in ancestors is selected.
            </summary>
            <remarks>
            Note that the IsSelected property is to be used on an element inside of a ListBox and not the ListBoxItem itself.
            Setting this property will update the IsSelected property of the ListBoxItem making it easier to
            disable selection of ListBoxItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.SetIsSelected(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsSelected property. This dependency property 
            indicates whether the first ListBoxItem found in ancestors is selected.
            </summary>
            <remarks>
            Note that the IsSelected property is to be used on an element inside of a ListBox and not the ListBoxItem itself.
            Setting this property will update the IsSelected property of the ListBoxItem making it easier to
            disable selection of ListBoxItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxItemExtensions.OnIsSelectedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsSelected property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.MessageDialogExtensions">
            <summary>
            MessageDialog extension methods
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.MessageDialogExtensions.ShowTwoOptionsDialog(System.String,System.String,System.String,System.Action,System.Action)">
            <summary>
            Shows a dialog with two options to choose from
            </summary>
            <param name="text"></param>
            <param name="leftButtonText"></param>
            <param name="rightButtonText"></param>
            <param name="leftButtonAction"></param>
            <param name="rightButtonAction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.MessageDialogExtensions.AddButton(Windows.UI.Popups.MessageDialog,System.String,System.Action)">
            <summary>
            Adds a button to the MessageDialog with given caption and action.
            </summary>
            <param name="dialog"></param>
            <param name="caption"></param>
            <param name="action"></param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.MessageDialogExtensions.ShowAsyncQueue(Windows.UI.Popups.MessageDialog)">
            <summary>
            Begins an asynchronous operation showing a dialog.
            If another dialog is already shown using
            ShowAsyncQueue or ShowAsyncIfPossible method - it will wait
            for that previous dialog to be dismissed before showing the new one.
            </summary>
            <param name="dialog">The dialog.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">This method can only be invoked from UI thread.</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.MessageDialogExtensions.ShowAsyncIfPossible(Windows.UI.Popups.MessageDialog)">
            <summary>
            Begins an asynchronous operation showing a dialog.
            If another dialog is already shown using
            ShowAsyncQueue or ShowAsyncIfPossible method - it will wait
            return immediately and the new dialog won't be displayed.
            </summary>
            <param name="dialog">The dialog.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">This method can only be invoked from UI thread.</exception>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions">
            <summary>
            Contains an extension for automatically switching focus to next field when the cursor reaches the MexLength position.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.AutoTabOnMaxLengthProperty">
            <summary>
            AutoTabOnMaxLength Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.GetAutoTabOnMaxLength(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoTabOnMaxLength property. This dependency property 
            indicates whether the focus should switch to next element 
            when the cursor moves to the position at maximum length of the field..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.SetAutoTabOnMaxLength(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoTabOnMaxLength property. This dependency property 
            indicates whether the focus should switch to next element 
            when the cursor moves to the position at maximum length of the field..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.OnAutoTabOnMaxLengthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AutoTabOnMaxLength property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.PasswordAutoTabOnMaxLengthHandlerProperty">
            <summary>
            PasswordAutoTabOnMaxLengthHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.GetPasswordAutoTabOnMaxLengthHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the PasswordAutoTabOnMaxLengthHandler property. This dependency property 
            indicates the handler object for the AutoTabOnMaxLength property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoTabOnMaxLengthChanged method.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.SetPasswordAutoTabOnMaxLengthHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.PasswordAutoTabOnMaxLengthHandler)">
            <summary>
            Sets the PasswordAutoTabOnMaxLengthHandler property. This dependency property 
            indicates the handler object for the AutoTabOnMaxLength property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoTabOnMaxLengthChanged method.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.AutoSelectOnFocusProperty">
            <summary>
            AutoSelectOnFocus Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.GetAutoSelectOnFocus(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoSelectOnFocus property. This dependency property 
            indicates whether the content should be selected when the control receives focus.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.SetAutoSelectOnFocus(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoSelectOnFocus property. This dependency property 
            indicates whether the content should be selected when the control receives focus.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.OnAutoSelectOnFocusChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AutoSelectOnFocus property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.PasswordAutoSelectOnFocusHandlerProperty">
            <summary>
            PasswordAutoSelectOnFocusHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.GetPasswordAutoSelectOnFocusHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the PasswordAutoSelectOnFocusHandler property. This dependency property 
            indicates the handler for the AutoSelectOnFocus property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoSelectOnFocusChanged method..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordBoxFocusExtensions.SetPasswordAutoSelectOnFocusHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.PasswordAutoSelectOnFocusHandler)">
            <summary>
            Sets the PasswordAutoSelectOnFocusHandler property. This dependency property 
            indicates the handler for the AutoSelectOnFocus property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoSelectOnFocusChanged method..
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.PasswordAutoTabOnMaxLengthHandler">
            <summary>
            Handler object type for the AutoTabOnMaxLength property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordAutoTabOnMaxLengthHandler.#ctor(Windows.UI.Xaml.Controls.PasswordBox)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.PasswordAutoTabOnMaxLengthHandler"/> class.
            </summary>
            <param name="associatedObject">The associated object.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordAutoTabOnMaxLengthHandler.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.PasswordAutoSelectOnFocusHandler">
            <summary>
            Handler object type for the AutoSelectOnFocus property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordAutoSelectOnFocusHandler.#ctor(Windows.UI.Xaml.Controls.PasswordBox)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.PasswordAutoSelectOnFocusHandler"/> class.
            </summary>
            <param name="associatedObject">The associated object.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.PasswordAutoSelectOnFocusHandler.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.StyleExtensions">
            <summary>
            Style type extension methods.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.StyleExtensions.GetPropertyValue(Windows.UI.Xaml.Style,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the property value for the given property in the given style.
            </summary>
            <param name="style">The style.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions">
            <summary>
            Contains an extension for automatically switching focus to next field when the cursor reaches the MexLength position.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.AutoTabOnMaxLengthProperty">
            <summary>
            AutoTabOnMaxLength Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.GetAutoTabOnMaxLength(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoTabOnMaxLength property. This dependency property 
            indicates whether the focus should switch to next element 
            when the cursor moves to the position at maximum length of the field..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.SetAutoTabOnMaxLength(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoTabOnMaxLength property. This dependency property 
            indicates whether the focus should switch to next element 
            when the cursor moves to the position at maximum length of the field..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.OnAutoTabOnMaxLengthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AutoTabOnMaxLength property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.AutoTabOnMaxLengthHandlerProperty">
            <summary>
            AutoTabOnMaxLengthHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.GetAutoTabOnMaxLengthHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoTabOnMaxLengthHandler property. This dependency property 
            indicates the handler object for the AutoTabOnMaxLength property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoTabOnMaxLengthChanged method.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.SetAutoTabOnMaxLengthHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler)">
            <summary>
            Sets the AutoTabOnMaxLengthHandler property. This dependency property 
            indicates the handler object for the AutoTabOnMaxLength property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoTabOnMaxLengthChanged method.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.AutoSelectOnFocusProperty">
            <summary>
            AutoSelectOnFocus Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.GetAutoSelectOnFocus(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoSelectOnFocus property. This dependency property 
            indicates whether the content should be selected when the control receives focus.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.SetAutoSelectOnFocus(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the AutoSelectOnFocus property. This dependency property 
            indicates whether the content should be selected when the control receives focus.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.OnAutoSelectOnFocusChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AutoSelectOnFocus property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.AutoSelectOnFocusHandlerProperty">
            <summary>
            AutoSelectOnFocusHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.GetAutoSelectOnFocusHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AutoSelectOnFocusHandler property. This dependency property 
            indicates the handler for the AutoSelectOnFocus property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoSelectOnFocusChanged method..
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBoxFocusExtensions.SetAutoSelectOnFocusHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.AutoSelectOnFocusHandler)">
            <summary>
            Sets the AutoSelectOnFocusHandler property. This dependency property 
            indicates the handler for the AutoSelectOnFocus property.
            There needs to be a separate attached object to avoid memory leaks.
            This property should not be set manually - only in the OnAutoSelectOnFocusChanged method..
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler">
            <summary>
            Handler object type for the AutoTabOnMaxLength property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.#ctor(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler"/> class.
            </summary>
            <param name="associatedObject">The associated object.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.AutoSelectOnFocusHandler">
            <summary>
            Handler object type for the AutoSelectOnFocus property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.AutoSelectOnFocusHandler.#ctor(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.AutoSelectOnFocusHandler"/> class.
            </summary>
            <param name="associatedObject">The associated object.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoTabOnMaxLengthHandler.AutoSelectOnFocusHandler.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.AutoSelectOnFocusHandler">
            <summary>
            Handler object type for the AutoSelectOnFocus property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoSelectOnFocusHandler.#ctor(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.AutoSelectOnFocusHandler"/> class.
            </summary>
            <param name="associatedObject">The associated object.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AutoSelectOnFocusHandler.Detach">
            <summary>
            Detaches this instance.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.VisualStateExtensions">
            <summary>
            Defines an attached property that controls the visual state of the element based on the value.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.VisualStateExtensions.StateProperty">
            <summary>
            State Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualStateExtensions.GetState(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the State property. This dependency property 
            indicates the VisualState that the associated control should be set to.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualStateExtensions.SetState(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the State property. This dependency property 
            indicates the VisualState that the associated control should be set to.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualStateExtensions.OnStateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the State property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.LayoutTransformControl">
            <summary>
            Control that implements support for transformations as if applied by
            LayoutTransform (which does not exist in Silverlight).
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl.AcceptableDelta">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl.DecimalsAfterRound">
            <summary>
            Value used to work around double arithmetic rounding issues in 
            Silverlight.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl.ContentProperty">
            <summary>
            Identifies the ContentProperty.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.ChildChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the child dependency property.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.OnChildChanged(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Updates content when the child property is changed.
            </summary>
            <param name="newContent">The new child.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl.TransformProperty">
            <summary>
            Identifies the TransformProperty dependency property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.TransformChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Transform DependencyProperty.
            </summary>
            <param name="o">The source of the event.</param>
            <param name="e">Information about the event.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.OnTransformChanged(Windows.UI.Xaml.Media.Transform,Windows.UI.Xaml.Media.Transform)">
            <summary>
            Processes the transform when the transform is changed.
            </summary>
            <param name="oldValue">The old transform</param>
            <param name="newValue">The transform to process.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl._layoutRoot">
            <summary>
            Host panel for Child element.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl._matrixTransform">
            <summary>
            RenderTransform/MatrixTransform applied to layout root.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl._transformation">
            <summary>
            Transformation matrix corresponding to matrix transform.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl._childActualSize">
            <summary>
            Actual DesiredSize of Child element.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.LayoutTransformControl._transformPropertyChangeEventSources">
            <summary>
            List of property change event sources for events when properties of the Transform tree change
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the LayoutTransformControl class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.OnApplyTemplate">
            <summary>
            Called whenever the control's template changes.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.OnTransformPropertyChanged(System.Object,System.Double)">
            <summary>
            Called when a property of a Transform changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.TransformUpdated">
            <summary>
            Notifies the LayoutTransformControl that some aspect of its 
            Transform property has changed.
            </summary>
            <remarks>
            Call this to update the LayoutTransform in cases where 
            LayoutTransformControl wouldn't otherwise know to do so.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.ProcessTransform">
            <summary>
            Processes the current transform to determine the corresponding 
            matrix.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.GetTransformMatrix(Windows.UI.Xaml.Media.Transform)">
            <summary>
            Walks the Transform and returns the corresponding matrix.
            </summary>
            <param name="transform">The transform to create a matrix for.
            </param>
            <returns>The matrix calculated from the transform.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "Measure" pass of layout.
            </summary>
            <param name="availableSize">The available size that this element can
            give to child elements. Infinity can be specified as a value to 
            indicate that the element will size to whatever content is 
            available.</param>
            <returns>The size that this element determines it needs during 
            layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of layout.
            </summary>
            <param name="finalSize">The final area within the parent that this 
            element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
            <remarks>
            Using the WPF paramater name finalSize instead of Silverlight's 
            finalSize for clarity.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.ComputeLargestTransformedSize(Windows.Foundation.Size)">
            <summary>
            Computes the largest usable size after applying the transformation 
            to the specified bounds.
            </summary>
            <param name="arrangeBounds">The size to arrange within.</param>
            <returns>The size required.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.IsSizeSmaller(Windows.Foundation.Size,Windows.Foundation.Size)">
            <summary>
            Return true if Size a is smaller than Size b in either dimension.
            </summary>
            <param name="a">The left size.</param>
            <param name="b">The right size.</param>
            <returns>A value indicating whether the left size is smaller than
            the right.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.RoundMatrix(Windows.UI.Xaml.Media.Matrix,System.Int32)">
            <summary>
            Rounds the non-offset elements of a matrix to avoid issues due to 
            floating point imprecision.
            </summary>
            <param name="matrix">The matrix to round.</param>
            <param name="decimalsAfterRound">The number of decimals after the
            round.</param>
            <returns>The rounded matrix.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.RectTransform(Windows.Foundation.Rect,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implement Windows Presentation Foundation's Rect.Transform on 
            Silverlight.
            </summary>
            <param name="rectangle">The rectangle to transform.</param>
            <param name="matrix">The matrix to use to transform the rectangle.
            </param>
            <returns>The transformed rectangle.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.MatrixMultiply(Windows.UI.Xaml.Media.Matrix,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.Multiply on 
            Silverlight.
            </summary>
            <param name="matrix1">The left matrix.</param>
            <param name="matrix2">The right matrix.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.LayoutTransformControl.MatrixHasInverse(Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Implements Windows Presentation Foundation's Matrix.HasInverse on
            Silverlight.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>True if matrix has an inverse.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.LayoutTransformControl.Child">
            <summary>
            Gets or sets the single child of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to Windows Presentation Foundation's Decorator.Child 
            property.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.LayoutTransformControl.Transform">
            <summary>
            Gets or sets the Transform of the LayoutTransformControl.
            </summary>
            <remarks>
            Corresponds to UIElement.RenderTransform.
            </remarks>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate">
            <summary>
            Represents a <see cref="T:System.Windows.DataTemplate" /> that supports
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> objects,
            such as <see cref="T:System.Windows.Controls.TreeViewItem" />.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate._itemTemplate">
            <summary>
            The DataTemplate to apply to the ItemTemplate property on a
            generated HeaderedItemsControl (such as a MenuItem or a
            TreeViewItem), to indicate how to display items from the next level
            in the data hierarchy.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate._itemContainerStyle">
            <summary>
            The Style to apply to the ItemContainerStyle property on a generated
            HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to
            indicate how to style items from the next level in the data
            hierarchy.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate.ItemsSource">
            <summary>
            Gets or sets the collection that is used to generate content for the
            next sublevel in the data hierarchy.
            </summary>
            <value>
            The collection that is used to generate content for the next
            sublevel in the data hierarchy.  The default value is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate.IsItemTemplateSet">
            <summary>
            Gets a value indicating whether the ItemTemplate property was set on
            the template.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate.ItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate" /> to
            apply to the
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
            property on a generated
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to
            indicate how to display items from the next sublevel in the data
            hierarchy.
            </summary>
            <value>
            The <see cref="T:System.Windows.DataTemplate" /> to apply to the
            <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
            property on a generated
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, such
            as a <see cref="T:System.Windows.Controls.TreeViewItem" />, to
            indicate how to display items from the next sublevel in the data
            hierarchy.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate.IsItemContainerStyleSet">
            <summary>
            Gets a value indicating whether the ItemContainerStyle property was
            set on the template.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.Data.HierarchicalDataTemplate.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the item container for each child item.
            </summary>
            <value>
            The style that is applied to the item container for each child item.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.AnimationHelper">
            <summary>
            A simple pair of helper attached dependency properties
            that allows to configure a single Storyboard to run on an element.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.StoryboardProperty">
            <summary>
            Storyboard Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.GetStoryboard(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Storyboard property. This dependency property 
            indicates the storyboard to play.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.SetStoryboard(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Media.Animation.Storyboard)">
            <summary>
            Sets the Storyboard property. This dependency property 
            indicates the storyboard to play.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.OnStoryboardChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Storyboard property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.IsPlayingProperty">
            <summary>
            IsPlaying Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.GetIsPlaying(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsPlaying property. This dependency property 
            indicates whether the storyboard is playing.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.SetIsPlaying(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsPlaying property. This dependency property 
            indicates whether the storyboard is playing.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AnimationHelper.OnIsPlayingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsPlaying property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions">
            <summary>
            Extensions for the AppBar class
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.HideWhenSnappedProperty">
            <summary>
            HideWhenSnapped Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.GetHideWhenSnapped(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the HideWhenSnapped property. This dependency property 
            indicates whether the AppBar should be hidden if the current view is Snapped.
            </summary>
            <remarks>
            Note that it will still invisibly open/close on regular gestures,
            so wheh the app gets unsnapped - it might be opened or closed depending on what happens in between.
            The CustomAppBar might be a better choice for more control with its CanOpenInSnappedView property.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.SetHideWhenSnapped(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the HideWhenSnapped property. This dependency property 
            indicates whether the AppBar should be hidden if the current view is Snapped.
            </summary>
            <remarks>
            Note that it will still invisibly open/close on regular gestures,
            so wheh the app gets unsnapped - it might be opened or closed depending on what happens in between.
            The CustomAppBar might be a better choice for more control with its CanOpenInSnappedView property.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.OnHideWhenSnappedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HideWhenSnapped property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.HideWhenSnappedHandlerProperty">
            <summary>
            HideWhenSnappedHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.GetHideWhenSnappedHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the HideWhenSnappedHandler property. This dependency property 
            indicates the handler for HideWhenSnapped behavior.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.AppBarExtensions.SetHideWhenSnappedHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.HideWhenSnappedHandler)">
            <summary>
            Sets the HideWhenSnappedHandler property. This dependency property 
            indicates the handler for HideWhenSnapped behavior.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.HideWhenSnappedHandler">
            <summary>
            Handles hiding an AppBar when the app goes to a snapped view.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CameraCaptureControl">
            <summary>
            A camera capture control that looks similar to the CameraCaptureUI,
            but works as an embeddable control that you can blend into your app's UI.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl._audioCaptureDevices">
            <summary>
            List of audio devices found.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl._videoCaptureDevices">
            <summary>
            List of video devices found.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl._currentAudioCaptureDeviceIndex">
            <summary>
            Index of the currently used device in the _audioCaptureDevices list.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl._currentVideoCaptureDeviceIndex">
            <summary>
            Index of the currently used video device in the _videoCaptureDevices list.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl._preferredVideoCaptureDevice">
            <summary>
            Video device found to be of preferred kind.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.ShowOnLoadProperty">
            <summary>
            The ShowOnLoadProperty.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.PreferredCameraTypeProperty">
            <summary>
            The preferred camera type property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceProperty">
            <summary>
            VideoDevice Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDeviceProperty">
            <summary>
            AudioDevice Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceIdProperty">
            <summary>
            VideoDeviceId Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnVideoDeviceIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the VideoDeviceId property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnVideoDeviceIdChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the VideoDeviceId property.
            </summary>
            <param name="oldVideoDeviceId">The old VideoDeviceId value</param>
            <param name="newVideoDeviceId">The new VideoDeviceId value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDeviceIdProperty">
            <summary>
            AudioDeviceId Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnAudioDeviceIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AudioDeviceId property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnAudioDeviceIdChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the AudioDeviceId property.
            </summary>
            <param name="oldAudioDeviceId">The old AudioDeviceId value</param>
            <param name="newAudioDeviceId">The new AudioDeviceId value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceNameProperty">
            <summary>
            VideoDeviceName Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDeviceNameProperty">
            <summary>
            AudioDeviceName Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.PickVideoDeviceAutomaticallyProperty">
            <summary>
            PickVideoDeviceAutomatically Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.PickAudioDeviceAutomaticallyProperty">
            <summary>
            PickAudioDeviceAutomatically Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.StreamingCaptureModeProperty">
            <summary>
            StreamingCaptureMode Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnStreamingCaptureModeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the StreamingCaptureMode property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnStreamingCaptureModeChanged(Windows.Media.Capture.StreamingCaptureMode,Windows.Media.Capture.StreamingCaptureMode)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the StreamingCaptureMode property.
            </summary>
            <param name="oldStreamingCaptureMode">The old StreamingCaptureMode value</param>
            <param name="newStreamingCaptureMode">The new StreamingCaptureMode value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoEncodingQualityProperty">
            <summary>
            VideoEncodingQuality Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceEnclosureLocationProperty">
            <summary>
            VideoDeviceEnclosureLocation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CameraCaptureControl.PhotoCaptureCountdownSecondsProperty">
            <summary>
            PhotoCaptureCountdownSeconds Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.CameraCaptureControl"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.InitializeAsync">
            <summary>
            Performs the one time initialization and shows the preview (if video).
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.ShowAsync">
            <summary>
            Shows the preview asynchronously (completes when the camera is initialized)..
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.HideAsync">
            <summary>
            Hides the camera preview asynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.CapturePhotoToStorageFileAsync(Windows.Storage.StorageFolder,System.String,System.String)">
            <summary>
            Captures the photo to storage file asynchronously.
            </summary>
            <param name="folder">The folder.</param>
            <param name="fileName">Name of the file.</param>
            <param name="defaultExtension">The default extension.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.CapturePhotoToStreamAsync(Windows.Storage.Streams.IRandomAccessStream,Windows.Media.MediaProperties.ImageEncodingProperties)">
            <summary>
            Captures a photo to a stream asynchronously.
            </summary>
            <param name="stream">The stream.</param>
            <param name="imageEncodingProperties">The image encoding properties.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.StartVideoCaptureAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Starts the video capture asynchronously.
            </summary>
            <param name="folder">The folder.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.StopCapture">
            <summary>
            Stops the video capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.CycleCamerasAsync">
            <summary>
            Cycles the cameras asynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraCaptureControl.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate.
            In simplest terms, this means the method is called just before a UI element displays in your app.
            Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.MediaCapture">
            <summary>
            Media capture class associated with current capture.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.CameraCaptureControl.CameraFailed">
            <summary>
            Occurs when there is a problem working with the camera.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.ShowOnLoad">
            <summary>
            Gets or sets a value indicating whether the camera preview
            should show when the control is loaded.
            </summary>
            <value>
              <c>true</c> if it should show on load; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.PreferredCameraType">
            <summary>
            Gets or sets the preferred type (panel location) of the default camera.
            </summary>
            <value>
            The type of the preferred camera.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDevice">
            <summary>
            Gets the VideoDevice property. This dependency property 
            indicates the currently used video capture device.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDevice">
            <summary>
            Gets or sets the AudioDevice property. This dependency property 
            indicates the currently used audio capture device..
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceId">
            <summary>
            Gets or sets the VideoDeviceId property. This dependency property 
            indicates the ID of the video device.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDeviceId">
            <summary>
            Gets or sets the AudioDeviceId property. This dependency property 
            indicates the ID of the audio device used for recording.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceName">
            <summary>
            Gets the VideoDeviceName property. This dependency property 
            indicates the name of the currently used video device.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.AudioDeviceName">
            <summary>
            Gets the AudioDeviceName property. This dependency property 
            indicates the name of the audio device name.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.PickVideoDeviceAutomatically">
            <summary>
            Gets or sets the PickVideoDeviceAutomatically property. This dependency property 
            indicates whether the video device should be selected automatically.
            A selection UI shows up if false.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.PickAudioDeviceAutomatically">
            <summary>
            Gets or sets the PickAudioDeviceAutomatically property. This dependency property 
            indicates whether the video device should be selected automatically.
            A selection UI shows up if false.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.StreamingCaptureMode">
            <summary>
            Gets or sets the StreamingCaptureMode property. This dependency property 
            indicates the streaming mode.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoEncodingQuality">
            <summary>
            Gets or sets the VideoEncodingQuality property. This dependency property 
            indicates the quality of the video recording.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.VideoDeviceEnclosureLocation">
            <summary>
            Gets the VideoDeviceEnclosureLocation property. This dependency property 
            indicates the location of the video capture device.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraCaptureControl.PhotoCaptureCountdownSeconds">
            <summary>
            Gets or sets the PhotoCaptureCountdownSeconds property. This dependency property 
            indicates the number of countdown seconds before a photo gets captured.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CameraCaptureControl.CameraFailedHandler">
            <summary>
            Handles CameraFailed events occuring when there is a problem working with the camera
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.Media.Capture.MediaCaptureFailedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CameraInitializationResult">
            <summary>
            The result of camera initialization.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CameraInitializationResult.#ctor(System.Boolean,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.CameraInitializationResult"/> class.
            </summary>
            <param name="success">if set to <c>true</c> if initialization was successful.</param>
            <param name="error">The error.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraInitializationResult.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraInitializationResult.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CameraInitializationResult.Success">
            <summary>
            Gets a value indicating whether this <see cref="T:WinRTXamlToolkit.Controls.CameraInitializationResult"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CascadingTextBlock">
            <summary>
            A TextBlock-like control with unique 3D transitions.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.AnimateOnLoadedProperty">
            <summary>
            AnimateOnLoaded Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.TextProperty">
            <summary>
            Text Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnTextChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Text property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnTextChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Text property.
            </summary>
            <param name="oldText">The old Text value</param>
            <param name="newText">The new Text value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.TextBlockTemplateProperty">
            <summary>
            TextBlockTemplate Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.StartDelayProperty">
            <summary>
            StartDelay Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInProperty">
            <summary>
            CascadeIn Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutProperty">
            <summary>
            CascadeOut Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.HoldDurationProperty">
            <summary>
            HoldDuration Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.HoldDurationStringProperty">
            <summary>
            HoldDurationString Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnHoldDurationStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HoldDurationString property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnHoldDurationStringChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the HoldDurationString property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInDurationProperty">
            <summary>
            CascadeInDuration Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInDurationStringProperty">
            <summary>
            CascadeInDurationString Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeInDurationStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CascadeInDurationString property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeInDurationStringChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the CascadeInDurationString property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutDurationProperty">
            <summary>
            CascadeOutDuration Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutDurationStringProperty">
            <summary>
            CascadeOutDurationString Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeOutDurationStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CascadeOutDurationString property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeOutDurationStringChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the CascadeOutDurationString property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeIntervalProperty">
            <summary>
            CascadeInterval Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeIntervalStringProperty">
            <summary>
            CascadeIntervalString Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeIntervalStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CascadeIntervalString property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.OnCascadeIntervalStringChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the CascadeIntervalString property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInEasingFunctionProperty">
            <summary>
            CascadeInEasingFunction Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutEasingFunctionProperty">
            <summary>
            CascadeOutEasingFunction Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.FromVerticalOffsetProperty">
            <summary>
            FromVerticalOffset Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.ToVerticalOffsetProperty">
            <summary>
            ToVerticalOffset Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.FromRotationProperty">
            <summary>
            FromRotation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.ToRotationProperty">
            <summary>
            ToRotation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.UseFadeProperty">
            <summary>
            UseFade Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.UseRotationProperty">
            <summary>
            UseRotation Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.FadeInEasingFunctionProperty">
            <summary>
            FadeInEasingFunction Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CascadingTextBlock.FadeOutEasingFunctionProperty">
            <summary>
            FadeOutEasingFunction Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.CascadingTextBlock"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CascadingTextBlock.BeginCascadingTransitionAsync">
            <summary>
            Begins the cascading transition asynchronously (waits for it to complete).
            </summary>
            <returns></returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.AnimateOnLoaded">
            <summary>
            Gets or sets the AnimateOnLoaded property. This dependency property 
            indicates whether the cascading transitions should start when the control loads.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.Text">
            <summary>
            Gets or sets the Text property. This dependency property 
            indicates the Text to display.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.TextBlockTemplate">
            <summary>
            Gets or sets the TextBlockTemplate property. This dependency property 
            indicates the template of a TextBlock to use for the animated letter TextBlocks.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.StartDelay">
            <summary>
            Gets or sets the StartDelay property. This dependency property 
            indicates the delay in ms after which the cascading animation should start.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeIn">
            <summary>
            Gets or sets the CascadeIn property. This dependency property 
            indicates whether the letters should cascade in.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOut">
            <summary>
            Gets or sets the CascadeOut property. This dependency property 
            indicates whether the letters should cascade out.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.HoldDuration">
            <summary>
            Gets or sets the HoldDuration property. This dependency property 
            indicates the duration that the letters should stay between cascades.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.HoldDurationString">
            <summary>
            Gets or sets the HoldDurationString property. This dependency property 
            indicates the interval of the cascade out animation as a string.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInDuration">
            <summary>
            Gets or sets the CascadeInDuration property. This dependency property 
            indicates the duration that each of the letters should spend cascading in.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInDurationString">
            <summary>
            Gets or sets the CascadeInDurationString property. This dependency property 
            indicates the duration of the cascade in animation as a string.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutDuration">
            <summary>
            Gets or sets the CascadeOutDuration property. This dependency property 
            indicates the duration that each of the letters should spend cascading out.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutDurationString">
            <summary>
            Gets or sets the CascadeOutDurationString property. This dependency property 
            indicates the duration of the cascade out animation as a string.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInterval">
            <summary>
            Gets or sets the CascadeInterval property. This dependency property 
            indicates the interval between when each letter starts cascading.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeIntervalString">
            <summary>
            Gets or sets the CascadeIntervalString property. This dependency property 
            indicates the interval of the cascade out animation as a string.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeInEasingFunction">
            <summary>
            Gets or sets the CascadeInEasingFunction property. This dependency property 
            indicates the easing function to use in the cascade in transition.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeOutEasingFunction">
            <summary>
            Gets or sets the CascadeOutEasingFunction property. This dependency property 
            indicates the easing function to use in the cascade out transition.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.FromVerticalOffset">
            <summary>
            Gets or sets the FromVerticalOffset property. This dependency property 
            indicates the offset from which the letters cascade in.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.ToVerticalOffset">
            <summary>
            Gets or sets the ToVerticalOffset property. This dependency property 
            indicates the offset to which the letters cascade out.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.FromRotation">
            <summary>
            Gets or sets the FromRotation property. This dependency property 
            indicates the rotation from which the letters will cascade in.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.ToRotation">
            <summary>
            Gets or sets the ToRotation property. This dependency property 
            indicates the rotation to which the letters cascade out.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.UseFade">
            <summary>
            Gets or sets the UseFade property. This dependency property 
            indicates whether the letters should fade in and out during cascading transitions.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.UseRotation">
            <summary>
            Gets or sets the UseRotation property. This dependency property 
            indicates whether the letters should rotate around Y axis when cascading.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.FadeInEasingFunction">
            <summary>
            Gets or sets the FadeInEasingFunction property. This dependency property 
            indicates the easing function to use for fading in the cascade in transition.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CascadingTextBlock.FadeOutEasingFunction">
            <summary>
            Gets or sets the FadeOutEasingFunction property. This dependency property 
            indicates the easing function to use for fading out the cascade out transition.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.CascadingTextBlock.CascadeCompleted">
            <summary>
            Occurs when cascade animation completes.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions">
            <summary>
            Extensions/attached properties for a ContentControl
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.FadeTransitioningContentTemplateProperty">
            <summary>
            FadeTransitioningContentTemplate Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.GetFadeTransitioningContentTemplate(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the FadeTransitioningContentTemplate property. This dependency property 
            indicates the value to set the ContentTemplate to between fade out/fade in transitions.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.SetFadeTransitioningContentTemplate(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Sets the FadeTransitioningContentTemplate property. This dependency property 
            indicates the value to set the ContentTemplate to between fade out/fade in transitions.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.OnFadeTransitioningContentTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the FadeTransitioningContentTemplate property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.FadeInTransitioningContentTemplateProperty">
            <summary>
            FadeInTransitioningContentTemplate Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.GetFadeInTransitioningContentTemplate(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the FadeInTransitioningContentTemplate property. This dependency property 
            indicates the value to set the ContentTemplate to between fade out/fade in transitions.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.SetFadeInTransitioningContentTemplate(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Sets the FadeInTransitioningContentTemplate property. This dependency property 
            indicates the value to set the ContentTemplate to between fade out/fade in transitions.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ContentControlExtensions.OnFadeInTransitioningContentTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the FadeInTransitioningContentTemplate property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ControlExtensions">
            <summary>
            Extensions that apply to Control classes.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ControlExtensions.MoveFocusForward(Windows.UI.Xaml.Controls.Control)">
            <summary>
            Moves the focus forward (to next control that can get focus).
            </summary>
            <remarks>
            This method ignores TabIndex and TabNavigation properties.
            </remarks>
            <param name="control">The control.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions">
            <remarks>
            Note: ListViewExtensions can be used for GridViews as well, since the extensions actually work on ListViewBase
            which both ListView and GridView derive from.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.BindableSelectionProperty">
            <summary>
            BindableSelection Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.GetBindableSelection(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the GridView.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.SetBindableSelection(Windows.UI.Xaml.DependencyObject,System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Sets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the GridView.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.OnBindableSelectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BindableSelection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.BindableSelectionHandlerProperty">
            <summary>
            BindableSelectionHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.GetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a GridView - used
            to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.SetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.GridViewBindableSelectionHandler)">
            <summary>
            Sets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a GridView - used to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.ItemToBringIntoViewProperty">
            <summary>
            ItemToBringIntoView Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.GetItemToBringIntoView(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.SetItemToBringIntoView(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view when first set.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.OnItemToBringIntoViewChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemToBringIntoView property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewExtensions.ScrollToBottom(Windows.UI.Xaml.Controls.GridView)">
            <summary>
            Scrolls a vertical GridView to the bottom.
            </summary>
            <param name="GridView"></param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions">
            <summary>
            Extensions for the FrameworkElement class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.ClipToBoundsProperty">
            <summary>
            ClipToBounds Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.GetClipToBounds(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ClipToBounds property. This dependency property 
            indicates whether the element should be clipped to its bounds.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SetClipToBounds(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the ClipToBounds property. This dependency property 
            indicates whether the element should be clipped to its bounds.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.OnClipToBoundsChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ClipToBounds property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.ClipToBoundsHandlerProperty">
            <summary>
            ClipToBoundsHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.GetClipToBoundsHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ClipToBoundsHandler property. This dependency property 
            indicates the handler that handles the updates to the clipping geometry when ClipToBounds is set to true.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SetClipToBoundsHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ClipToBoundsHandler)">
            <summary>
            Sets the ClipToBoundsHandler property. This dependency property 
            indicates the handler that handles the updates to the clipping geometry when ClipToBounds is set to true.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.OnClipToBoundsHandlerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ClipToBoundsHandler property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.CursorProperty">
            <summary>
            Cursor Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.GetCursor(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Cursor property. This dependency property 
            indicates the cursor to use when a mouse cursor is moved over the control.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SetCursor(Windows.UI.Xaml.DependencyObject,Windows.UI.Core.CoreCursor)">
            <summary>
            Sets the Cursor property. This dependency property 
            indicates the cursor to use when a mouse cursor is moved over the control.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.OnCursorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Cursor property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SystemCursorProperty">
            <summary>
            SystemCursor Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.GetSystemCursor(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the SystemCursor property. This dependency property 
            indicates the system CoreCursorType to use for the control's mouse cursor.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SetSystemCursor(Windows.UI.Xaml.DependencyObject,Windows.UI.Core.CoreCursorType)">
            <summary>
            Sets the SystemCursor property. This dependency property 
            indicates the system CoreCursorType to use for the control's mouse cursor.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.OnSystemCursorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the SystemCursor property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.CursorDisplayHandlerProperty">
            <summary>
            CursorDisplayHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.GetCursorDisplayHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the CursorDisplayHandler property. This dependency property 
            indicates the handler for displaying the Cursor when a mouse is moved over the control.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FrameworkElementExtensions.SetCursorDisplayHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.CursorDisplayHandler)">
            <summary>
            Sets the CursorDisplayHandler property. This dependency property 
            indicates the handler for displaying the Cursor when a mouse is moved over the control.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions">
            <summary>
            Extension methods for the ScrollViewer class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.AnimatedScrollHandlerProperty">
            <summary>
            AnimatedScrollHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.GetAnimatedScrollHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AnimatedScrollHandler property. This dependency property 
            indicates the handler object that handles animated scrolling of the ScrollViewer.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.SetAnimatedScrollHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ScrollViewerAnimatedScrollHandler)">
            <summary>
            Sets the AnimatedScrollHandler property. This dependency property 
            indicates the handler object that handles animated scrolling of the ScrollViewer.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.OnAnimatedScrollHandlerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AnimatedScrollHandler property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToHorizontalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToHorizontalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToHorizontalOffset() does not update HorizontalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToHorizontalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToHorizontalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToHorizontalOffset() does not update HorizontalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="durationInSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToHorizontalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToHorizontalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToHorizontalOffset() does not update HorizontalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="durationInSeconds"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToHorizontalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToHorizontalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToHorizontalOffset() does not update HorizontalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToHorizontalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToHorizontalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToHorizontalOffset() does not update HorizontalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="duration"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToVerticalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToVerticalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToVerticalOffset() does not update VerticalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToVerticalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToVerticalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToVerticalOffset() does not update VerticalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="durationInSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToVerticalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToVerticalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToVerticalOffset() does not update VerticalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="durationInSeconds"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToVerticalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToVerticalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToVerticalOffset() does not update VerticalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ScrollToVerticalOffsetWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Scrolls to the specified offset using an animation instead of
            immediately jumping to that offset as with ScrollToVerticalOffset().
            </summary>
            <remarks>
            Note that calling ScrollToVerticalOffset() does not update VerticalOffset immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="offset"></param>
            <param name="duration"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ZoomToFactorWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double)">
            <summary>
            Zooms to the specified factor using an animation instead of
            immediately jumping to that value as with ZoomToFactor().
            </summary>
            <remarks>
            Note that calling ZoomToFactor() does not update ZoomFactor immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="factor"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ZoomToFactorWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double)">
            <summary>
            Zooms to the specified factor using an animation instead of
            immediately jumping to that value as with ZoomToFactor().
            </summary>
            <remarks>
            Note that calling ZoomToFactor() does not update ZoomFactor immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="factor"></param>
            <param name="durationInSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ZoomToFactorWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Zooms to the specified factor using an animation instead of
            immediately jumping to that value as with ZoomToFactor().
            </summary>
            <remarks>
            Note that calling ZoomToFactor() does not update ZoomFactor immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="factor"></param>
            <param name="durationInSeconds"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ZoomToFactorWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan)">
            <summary>
            Zooms to the specified factor using an animation instead of
            immediately jumping to that value as with ZoomToFactor().
            </summary>
            <remarks>
            Note that calling ZoomToFactor() does not update ZoomFactor immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="factor"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ScrollViewerExtensions.ZoomToFactorWithAnimation(Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.TimeSpan,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Zooms to the specified factor using an animation instead of
            immediately jumping to that value as with ZoomToFactor().
            </summary>
            <remarks>
            Note that calling ZoomToFactor() does not update ZoomFactor immediately,
            so it is important to wait for it to change before calling this method.
            </remarks>
            <param name="scrollViewer"></param>
            <param name="factor"></param>
            <param name="duration"></param>
            <param name="easingFunction"></param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions">
            <summary>
            Extension methods and attached properties for UIElement class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.AttachedFadeStoryboardProperty">
            <summary>
            AttachedFadeStoryboard Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.GetAttachedFadeStoryboard(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the AttachedFadeStoryboard property. This dependency property 
            indicates the currently running custom fade in/out storyboard.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.SetAttachedFadeStoryboard(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Media.Animation.Storyboard)">
            <summary>
            Sets the AttachedFadeStoryboard property. This dependency property 
            indicates the currently running custom fade in/out storyboard.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.OnAttachedFadeStoryboardChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AttachedFadeStoryboard property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.FadeIn(Windows.UI.Xaml.UIElement,System.Nullable{System.TimeSpan})">
            <summary>
            Fades the element in using the FadeInThemeAnimation.
            </summary>
            <remarks>
            Opacity property of the element is not affected.<br/>
            The duration of the visible animation itself is not affected by the duration parameter. It merely indicates how long the Storyboard will run.<br/>
            If FadeOutThemeAnimation was not used on the element before - nothing will happen.<br/>
            </remarks>
            <param name="element"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.FadeOut(Windows.UI.Xaml.UIElement,System.Nullable{System.TimeSpan})">
            <summary>
            Fades the element out using the FadeOutThemeAnimation.
            </summary>
            <remarks>
            Opacity property of the element is not affected.<br/>
            The duration of the visible animation itself is not affected by the duration parameter. It merely indicates how long the Storyboard will run.<br/>
            If FadeOutThemeAnimation was already run before and FadeInThemeAnimation was not run after that - nothing will happen.<br/>
            </remarks>
            <param name="element"></param>
            <param name="duration"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.FadeInCustom(Windows.UI.Xaml.UIElement,System.Nullable{System.TimeSpan},Windows.UI.Xaml.Media.Animation.EasingFunctionBase,System.Double)">
            <summary>
            Fades the element in using a custom DoubleAnimation of the Opacity property.
            </summary>
            <param name="element"></param>
            <param name="duration"></param>
            <param name="easingFunction"> </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.UIElementAnimationExtensions.FadeOutCustom(Windows.UI.Xaml.UIElement,System.Nullable{System.TimeSpan},Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Fades the element out using a custom DoubleAnimation of the Opacity property.
            </summary>
            <param name="element"></param>
            <param name="duration"></param>
            <param name="easingFunction"> </param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.HeaderedItemsControl">
            <summary>
            Represents a control that contains multiple items and has a header.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            dependency property.
            </value>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderProperty.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnHeaderPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its Header.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            dependency property.
            </value>
            <remarks>
            Note: WPF defines this property via a call to AddOwner of
            HeaderedContentControl's HeaderTemplateProperty.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnHeaderTemplatePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its HeaderTemplate.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.HeaderedItemsControl.ItemContainerStyleProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.ItemContainerStyle" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnItemContainerStylePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            HeaderedItemsControl that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />
            property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(Windows.UI.Xaml.DataTemplate,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> when a
            new template is applied.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">
            The container element used to display the specified item.
            </param>
            <param name="item">The content to display.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.PreparePrepareHeaderedItemsControlContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object,Windows.UI.Xaml.Controls.ItemsControl,Windows.UI.Xaml.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">Specified item to display.</param>
            <param name="parent">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.PrepareHeaderedItemsControlContainer(WinRTXamlToolkit.Controls.HeaderedItemsControl,System.Object,Windows.UI.Xaml.Controls.ItemsControl,Windows.UI.Xaml.Style)">
            <summary>
            Prepare a PrepareHeaderedItemsControlContainer container for an
            item.
            </summary>
            <param name="control">Container to prepare.</param>
            <param name="item">Item to be placed in the container.</param>
            <param name="parentItemsControl">The parent ItemsControl.</param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.HeaderedItemsControl.HasDefaultValue(Windows.UI.Xaml.Controls.Control,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Check whether a control has the default value for a property.
            </summary>
            <param name="control">The control to check.</param>
            <param name="property">The property to check.</param>
            <returns>
            True if the property has the default value; false otherwise.
            </returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderIsItem">
            <summary>
            Gets or sets a value indicating whether the Header property has been
            set to the item of an ItemsControl.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the item that labels the control.
            </summary>
            <value>
            The item that labels the control. The default value is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets a data template that is used to display the contents of
            the control's header.
            </summary>
            <value>
            Gets or sets a data template that is used to display the contents of
            the control's header. The default is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HeaderedItemsControl.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style" /> that is
            applied to the container element generated for each item.
            </summary>
            <value>
            The <see cref="T:System.Windows.Style" /> that is applied to the
            container element generated for each item. The default is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.HeaderedItemsControl.ItemsControlHelper">
            <summary>
            Gets the ItemsControlHelper that is associated with this control.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ItemsControlHelper">
            <summary>
            The ItemContainerGenerator provides useful utilities for ItemsControls.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ItemsControlHelper._itemsHost">
            <summary>
            A Panel that is used as the ItemsHost of the ItemsControl.  This
            property will only be valid when the ItemsControl is live in the
            tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ItemsControlHelper._scrollHost">
            <summary>
            A ScrollViewer that is used to scroll the items in the ItemsHost.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ItemsControlHelper.#ctor(Windows.UI.Xaml.Controls.ItemsControl)">
            <summary>
            Initializes a new instance of the ItemContainerGenerator.
            </summary>
            <param name="control">
            The ItemsControl being tracked by the ItemContainerGenerator.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ItemsControlHelper.OnApplyTemplate">
            <summary>
            Apply a control template to the ItemsControl.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ItemsControlHelper.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Style)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="parentItemContainerStyle">
            The ItemContainerStyle for the parent ItemsControl.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ItemsControlHelper.UpdateItemContainerStyle(Windows.UI.Xaml.Style)">
            <summary>
            Update the style of any generated items when the ItemContainerStyle
            has been changed.
            </summary>
            <param name="itemContainerStyle">The ItemContainerStyle.</param>
            <remarks>
            Silverlight does not support setting a Style multiple times, so we
            only attempt to set styles on elements whose style hasn't already
            been set.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ItemsControlHelper.ScrollIntoView(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Scroll the desired element into the ScrollHost's viewport.
            </summary>
            <param name="element">Element to scroll into view.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ItemsControlHelper.ItemsControl">
            <summary>
            Gets or sets the ItemsControl being tracked by the
            ItemContainerGenerator.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ItemsControlHelper.ItemsHost">
            <summary>
            Gets a Panel that is used as the ItemsHost of the ItemsControl.
            This property will only be valid when the ItemsControl is live in
            the tree and has generated containers for some of its items.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ItemsControlHelper.ScrollHost">
            <summary>
            Gets a ScrollViewer that is used to scroll the items in the
            ItemsHost.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ImageToggleButton">
            <summary>
            A ToggleButton control templated to use images for its states.
            Provides ImageSource properties for each of the button's states as well as mechanisms for generating missing images.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.StretchProperty">
            <summary>
            Stretch Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.RecyclePressedStateImageForHoverProperty">
            <summary>
            RecyclePressedStateImageForHover Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnRecyclePressedStateImageForHoverChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RecyclePressedStateImageForHover property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnRecyclePressedStateImageForHoverChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RecyclePressedStateImageForHover property.
            </summary>
            <param name="oldRecyclePressedStateImageForHover">The old RecyclePressedStateImageForHover value</param>
            <param name="newRecyclePressedStateImageForHover">The new RecyclePressedStateImageForHover value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.RecycleUncheckedStateImagesForCheckedStatesProperty">
            <summary>
            RecycleUncheckedStateImagesForCheckedStates Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnRecycleUncheckedStateImagesForCheckedStatesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RecycleUncheckedStateImagesForCheckedStates property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnRecycleUncheckedStateImagesForCheckedStatesChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RecycleUncheckedStateImagesForCheckedStates property.
            </summary>
            <param name="oldRecycleUncheckedStateImagesForCheckedStates">The old RecycleUncheckedStateImagesForCheckedStates value</param>
            <param name="newRecycleUncheckedStateImagesForCheckedStates">The new RecycleUncheckedStateImagesForCheckedStates value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.NormalStateImageSourceProperty">
            <summary>
            NormalStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnNormalStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NormalStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnNormalStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the NormalStateImageSource property.
            </summary>
            <param name="oldNormalStateImageSource">The old NormalStateImageSource value</param>
            <param name="newNormalStateImageSource">The new NormalStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.HoverStateImageSourceProperty">
            <summary>
            HoverStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnHoverStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HoverStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnHoverStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HoverStateImageSource property.
            </summary>
            <param name="oldHoverStateImageSource">The old HoverStateImageSource value</param>
            <param name="newHoverStateImageSource">The new HoverStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.PressedStateImageSourceProperty">
            <summary>
            PressedStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnPressedStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PressedStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnPressedStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PressedStateImageSource property.
            </summary>
            <param name="oldPressedStateImageSource">The old PressedStateImageSource value</param>
            <param name="newPressedStateImageSource">The new PressedStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.DisabledStateImageSourceProperty">
            <summary>
            DisabledStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnDisabledStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DisabledStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnDisabledStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the DisabledStateImageSource property.
            </summary>
            <param name="oldDisabledStateImageSource">The old DisabledStateImageSource value</param>
            <param name="newDisabledStateImageSource">The new DisabledStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedStateImageSourceProperty">
            <summary>
            CheckedStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedStateImageSource property.
            </summary>
            <param name="oldCheckedStateImageSource">The old CheckedStateImageSource value</param>
            <param name="newCheckedStateImageSource">The new CheckedStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedHoverStateImageSourceProperty">
            <summary>
            CheckedHoverStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedHoverStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedHoverStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedHoverStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedHoverStateImageSource property.
            </summary>
            <param name="oldCheckedHoverStateImageSource">The old CheckedHoverStateImageSource value</param>
            <param name="newCheckedHoverStateImageSource">The new CheckedHoverStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedPressedStateImageSourceProperty">
            <summary>
            CheckedPressedStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedPressedStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedPressedStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedPressedStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedPressedStateImageSource property.
            </summary>
            <param name="oldCheckedPressedStateImageSource">The old CheckedPressedStateImageSource value</param>
            <param name="newCheckedPressedStateImageSource">The new CheckedPressedStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedDisabledStateImageSourceProperty">
            <summary>
            CheckedDisabledStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedDisabledStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedDisabledStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedDisabledStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedDisabledStateImageSource property.
            </summary>
            <param name="oldCheckedDisabledStateImageSource">The old CheckedDisabledStateImageSource value</param>
            <param name="newCheckedDisabledStateImageSource">The new CheckedDisabledStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.NormalStateImageUriSourceProperty">
            <summary>
            NormalStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnNormalStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NormalStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnNormalStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the NormalStateImageUriSource property.
            </summary>
            <param name="oldNormalStateImageUriSource">The old NormalStateImageUriSource value</param>
            <param name="newNormalStateImageUriSource">The new NormalStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.HoverStateImageUriSourceProperty">
            <summary>
            HoverStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnHoverStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HoverStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnHoverStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HoverStateImageUriSource property.
            </summary>
            <param name="oldHoverStateImageUriSource">The old HoverStateImageUriSource value</param>
            <param name="newHoverStateImageUriSource">The new HoverStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.PressedStateImageUriSourceProperty">
            <summary>
            PressedStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnPressedStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PressedStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnPressedStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PressedStateImageUriSource property.
            </summary>
            <param name="oldPressedStateImageUriSource">The old PressedStateImageUriSource value</param>
            <param name="newPressedStateImageUriSource">The new PressedStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.DisabledStateImageUriSourceProperty">
            <summary>
            DisabledStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnDisabledStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DisabledStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnDisabledStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the DisabledStateImageUriSource property.
            </summary>
            <param name="oldDisabledStateImageUriSource">The old DisabledStateImageUriSource value</param>
            <param name="newDisabledStateImageUriSource">The new DisabledStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedStateImageUriSourceProperty">
            <summary>
            CheckedStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedStateImageUriSource property.
            </summary>
            <param name="oldCheckedStateImageUriSource">The old CheckedStateImageUriSource value</param>
            <param name="newCheckedStateImageUriSource">The new CheckedStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedHoverStateImageUriSourceProperty">
            <summary>
            CheckedHoverStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedHoverStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedHoverStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedHoverStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedHoverStateImageUriSource property.
            </summary>
            <param name="oldCheckedHoverStateImageUriSource">The old CheckedHoverStateImageUriSource value</param>
            <param name="newCheckedHoverStateImageUriSource">The new CheckedHoverStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedPressedStateImageUriSourceProperty">
            <summary>
            CheckedPressedStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedPressedStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedPressedStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedPressedStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedPressedStateImageUriSource property.
            </summary>
            <param name="oldCheckedPressedStateImageUriSource">The old CheckedPressedStateImageUriSource value</param>
            <param name="newCheckedPressedStateImageUriSource">The new CheckedPressedStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedDisabledStateImageUriSourceProperty">
            <summary>
            CheckedDisabledStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedDisabledStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedDisabledStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnCheckedDisabledStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CheckedDisabledStateImageUriSource property.
            </summary>
            <param name="oldCheckedDisabledStateImageUriSource">The old CheckedDisabledStateImageUriSource value</param>
            <param name="newCheckedDisabledStateImageUriSource">The new CheckedDisabledStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GenerateMissingImagesProperty">
            <summary>
            GenerateMissingImages Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGenerateMissingImagesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GenerateMissingImages property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGenerateMissingImagesChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GenerateMissingImages property.
            </summary>
            <param name="oldGenerateMissingImages">The old GenerateMissingImages value</param>
            <param name="newGenerateMissingImages">The new GenerateMissingImages value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedHoverStateLightenAmountProperty">
            <summary>
            GeneratedHoverStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedHoverStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedHoverStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedHoverStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedHoverStateLightenAmount property.
            </summary>
            <param name="oldGeneratedHoverStateLightenAmount">The old GeneratedHoverStateLightenAmount value</param>
            <param name="newGeneratedHoverStateLightenAmount">The new GeneratedHoverStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedPressedStateLightenAmountProperty">
            <summary>
            GeneratedPressedStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedPressedStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedPressedStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedPressedStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedPressedStateLightenAmount property.
            </summary>
            <param name="oldGeneratedPressedStateLightenAmount">The old GeneratedPressedStateLightenAmount value</param>
            <param name="newGeneratedPressedStateLightenAmount">The new GeneratedPressedStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedDisabledStateGrayscaleAmountProperty">
            <summary>
            GeneratedDisabledStateGrayscaleAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedDisabledStateGrayscaleAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedDisabledStateGrayscaleAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="oldGeneratedDisabledStateGrayscaleAmount">The old GeneratedDisabledStateGrayscaleAmount value</param>
            <param name="newGeneratedDisabledStateGrayscaleAmount">The new GeneratedDisabledStateGrayscaleAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedStateLightenAmountProperty">
            <summary>
            GeneratedCheckedStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedCheckedStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedCheckedStateLightenAmount property.
            </summary>
            <param name="oldGeneratedCheckedStateLightenAmount">The old GeneratedCheckedStateLightenAmount value</param>
            <param name="newGeneratedCheckedStateLightenAmount">The new GeneratedCheckedStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedHoverStateLightenAmountProperty">
            <summary>
            GeneratedCheckedHoverStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedHoverStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedCheckedHoverStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedHoverStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedCheckedHoverStateLightenAmount property.
            </summary>
            <param name="oldGeneratedCheckedHoverStateLightenAmount">The old GeneratedCheckedHoverStateLightenAmount value</param>
            <param name="newGeneratedCheckedHoverStateLightenAmount">The new GeneratedCheckedHoverStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedPressedStateLightenAmountProperty">
            <summary>
            GeneratedCheckedPressedStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedPressedStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedCheckedPressedStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedPressedStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedCheckedPressedStateLightenAmount property.
            </summary>
            <param name="oldGeneratedCheckedPressedStateLightenAmount">The old GeneratedCheckedPressedStateLightenAmount value</param>
            <param name="newGeneratedCheckedPressedStateLightenAmount">The new GeneratedCheckedPressedStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedDisabledStateGrayscaleAmountProperty">
            <summary>
            GeneratedCheckedDisabledStateGrayscaleAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedDisabledStateGrayscaleAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedCheckedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnGeneratedCheckedDisabledStateGrayscaleAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedCheckedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="oldGeneratedCheckedDisabledStateGrayscaleAmount">The old GeneratedCheckedDisabledStateGrayscaleAmount value</param>
            <param name="newGeneratedCheckedDisabledStateGrayscaleAmount">The new GeneratedCheckedDisabledStateGrayscaleAmount value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.ImageToggleButton"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageToggleButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.Stretch">
            <summary>
            Gets or sets the Stretch property. This dependency property 
            indicates how an Image should be stretched to fill the button.
            </summary>
            <remarks>
            A value of the Stretch enumeration specifies how the source image is
            applied if the Height and Width of the ImageToggleButton are specified and are different
            than the source image's height and width. The default value is None.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.RecyclePressedStateImageForHover">
            <summary>
            Gets or sets the RecyclePressedStateImageForHover property. This dependency property 
            indicates whether the PressedStateImageSource should also be used for hover state with 0.5 opacity.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.RecycleUncheckedStateImagesForCheckedStates">
            <summary>
            Gets or sets the RecycleUncheckedStateImagesForCheckedStates property. This dependency property 
            indicates whether the unchecked state images should be reused for checked states.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.NormalStateImageSource">
            <summary>
            Gets or sets the NormalStateImageSource property. This dependency property 
            indicates the ImageSource for the normal state.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.HoverStateImageSource">
            <summary>
            Gets or sets the HoverStateImageSource property. This dependency property 
            indicates the ImageSource to use when the pointer is over the ToggleButton.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.PressedStateImageSource">
            <summary>
            Gets or sets the PressedStateImageSource property. This dependency property 
            indicates the ImageSource to use when the ToggleButton is pressed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.DisabledStateImageSource">
            <summary>
            Gets or sets the DisabledStateImageSource property. This dependency property 
            indicates the ImageSource to use when the ToggleButton is Disabled.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedStateImageSource">
            <summary>
            Gets or sets the CheckedStateImageSource property. This dependency property 
            indicates the ImageSource for the normal state.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedHoverStateImageSource">
            <summary>
            Gets or sets the CheckedHoverStateImageSource property. This dependency property 
            indicates the ImageSource to use when the pointer is over the ToggleButton.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedPressedStateImageSource">
            <summary>
            Gets or sets the CheckedPressedStateImageSource property. This dependency property 
            indicates the ImageSource to use when the ToggleButton is pressed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedDisabledStateImageSource">
            <summary>
            Gets or sets the CheckedDisabledStateImageSource property. This dependency property 
            indicates the ImageSource to use when the ToggleButton is Disabled.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.NormalStateImageUriSource">
            <summary>
            Gets or sets the NormalStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.HoverStateImageUriSource">
            <summary>
            Gets or sets the HoverStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.PressedStateImageUriSource">
            <summary>
            Gets or sets the PressedStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.DisabledStateImageUriSource">
            <summary>
            Gets or sets the DisabledStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedStateImageUriSource">
            <summary>
            Gets or sets the CheckedStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedHoverStateImageUriSource">
            <summary>
            Gets or sets the CheckedHoverStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedPressedStateImageUriSource">
            <summary>
            Gets or sets the CheckedPressedStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.CheckedDisabledStateImageUriSource">
            <summary>
            Gets or sets the CheckedDisabledStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GenerateMissingImages">
            <summary>
            Gets or sets the GenerateMissingImages property. This dependency property 
            indicates whether the missing images should be generated from the normal state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedHoverStateLightenAmount">
            <summary>
            Gets or sets the GeneratedHoverStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the hover state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedPressedStateLightenAmount">
            <summary>
            Gets or sets the GeneratedPressedStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the pressed state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedDisabledStateGrayscaleAmount">
            <summary>
            Gets or sets the GeneratedDisabledStateGrayscaleAmount property. This dependency property 
            indicates the grayscale amount to use when generating the disabled state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedStateLightenAmount">
            <summary>
            Gets or sets the GeneratedCheckedStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the checked state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedHoverStateLightenAmount">
            <summary>
            Gets or sets the GeneratedCheckedHoverStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the checked hover state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedPressedStateLightenAmount">
            <summary>
            Gets or sets the GeneratedCheckedPressedStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the checked pressed state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageToggleButton.GeneratedCheckedDisabledStateGrayscaleAmount">
            <summary>
            Gets or sets the GeneratedCheckedDisabledStateGrayscaleAmount property. This dependency property 
            indicates the grayscale amount to use when generating the checked disabled state image.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CountdownControl">
            <summary>
            A control that displays a countdown visualization
            and raises a CountdownComplete event when countdown is complete.
            Countdown duration is specified in Seconds.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CountdownControl.SecondsProperty">
            <summary>
            The seconds property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CountdownControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.CountdownControl"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CountdownControl.StartCountdownAsync(System.Int32)">
            <summary>
            Starts the countdown and completes when the countdown completes.
            </summary>
            <param name="seconds">The seconds.</param>
            <returns></returns>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.CountdownControl.CountdownComplete">
            <summary>
            Occurs when the countdown is complete.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CountdownControl.Seconds">
            <summary>
            Gets or sets the seconds to countdown.
            </summary>
            <value>
            The seconds.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CustomAppBar">
            <summary>
            AppBar control replacement. To be used anywhere in the visual tree.
            The standard AppBar does not do the slide transitions
            when not placed in the Page.Bottom/Top-AppBar properties,
            which makes it less useful when used e.g. with the AlternativeFrame control.
            There are also other cases when it just makes sense to put it elsewhere on screen.
            Contains improvements such properties that lock it in opened or closed states,
            apart from simply giving you the source code you can tweak to your liking.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomAppBar.IsOpenProperty">
            <summary>
            IsOpen Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnIsOpenChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsOpen property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnIsOpenChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsOpen property.
            </summary>
            <param name="oldIsOpen">The old IsOpen value</param>
            <param name="newIsOpen">The new IsOpen value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomAppBar.CanOpenProperty">
            <summary>
            CanOpen Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanOpenChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CanOpen property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanOpenChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CanOpen property.
            </summary>
            <param name="oldCanOpen">The old CanOpen value</param>
            <param name="newCanOpen">The new CanOpen value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomAppBar.CanDismissProperty">
            <summary>
            CanDismiss Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanDismissChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CanDismiss property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanDismissChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CanDismiss property.
            </summary>
            <param name="oldCanDismiss">The old CanDismiss value</param>
            <param name="newCanDismiss">The new CanDismiss value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomAppBar.CanOpenInSnappedViewProperty">
            <summary>
            CanOpenInSnappedView Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanOpenInSnappedViewChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CanOpenInSnappedView property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnCanOpenInSnappedViewChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CanOpenInSnappedView property.
            </summary>
            <param name="oldCanOpenInSnappedView">The old CanOpenInSnappedView value</param>
            <param name="newCanOpenInSnappedView">The new CanOpenInSnappedView value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomAppBar.IsLightDismissEnabledProperty">
            <summary>
            IsLightDismissEnabled Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomAppBar.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomAppBar.IsOpen">
            <summary>
            Gets or sets the IsOpen property. This dependency property 
            indicates whether the AppBar is visible.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomAppBar.CanOpen">
            <summary>
            Gets or sets the CanOpen property. This dependency property 
            indicates whether the AppBar can open using the standard gestures.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomAppBar.CanDismiss">
            <summary>
            Gets or sets the CanDismiss property. This dependency property 
            indicates whether the AppBar can be dismissed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomAppBar.CanOpenInSnappedView">
            <summary>
            Gets or sets the CanOpenInSnappedView property. This dependency property 
            indicates whether the AppBar can be opened in snapped view.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomAppBar.IsLightDismissEnabled">
            <summary>
            Gets or sets the IsLightDismissEnabled property. This dependency property 
            indicates whether the app bar can be dismissed by tapping anywhere outside of the control.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.GridResizeBehavior">
            <summary>
            Specifies the rows or columns that are resized
            by a WinRTXamlToolkit.Controls.CustomGridSplitter control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeBehavior.BasedOnAlignment">
            <summary>
            Space is redistributed based on the value of the
            Windows.UI.Xaml.FrameworkElement.HorizontalAlignment and
            Windows.UI.Xaml.FrameworkElement.VerticalAlignment properties.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeBehavior.CurrentAndNext">
            <summary>
            For a horizontal WinRTXamlToolkit.Controls.CustomGridSplitter, space is redistributed
            between the row that is specified for the WinRTXamlToolkit.Controls.CustomGridSplitter
            and the next row that is below it. For a vertical WinRTXamlToolkit.Controls.CustomGridSplitter,
            space is redistributed between the column that is specified for the WinRTXamlToolkit.Controls.CustomGridSplitter
            and the next column that is to the right.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeBehavior.PreviousAndCurrent">
            <summary>
            For a horizontal WinRTXamlToolkit.Controls.CustomGridSplitter, space is redistributed
            between the row that is specified for the WinRTXamlToolkit.Controls.CustomGridSplitter
            and the next row that is above it. For a vertical WinRTXamlToolkit.Controls.CustomGridSplitter,
            space is redistributed between the column that is specified for the WinRTXamlToolkit.Controls.CustomGridSplitter
            and the next column that is to the left.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeBehavior.PreviousAndNext">
            <summary>
            For a horizontal WinRTXamlToolkit.Controls.CustomGridSplitter, space is redistributed
            between the rows that are above and below the row that is specified for the
            WinRTXamlToolkit.Controls.CustomGridSplitter. For a vertical WinRTXamlToolkit.Controls.CustomGridSplitter,
            space is redistributed between the columns that are to the left and right
            of the column that is specified for the WinRTXamlToolkit.Controls.CustomGridSplitter.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.GridResizeDirection">
            <summary>
            Specifies whether a WinRTXamlToolkit.Controls.CustomGridSplitter control redistributes
            space between rows or between columns.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeDirection.Auto">
            <summary>
            Space is redistributed based on the values of the Windows.UI.Xaml.FrameworkElement.HorizontalAlignment,
            Windows.UI.Xaml.FrameworkElement.VerticalAlignment, Windows.UI.Xaml.FrameworkElement.ActualWidth,
            and Windows.UI.Xaml.FrameworkElement.ActualHeight properties of the WinRTXamlToolkit.Controls.CustomGridSplitter.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeDirection.Columns">
            <summary>
            Space is redistributed between columns.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.GridResizeDirection.Rows">
            <summary>
            Space is redistributed between rows.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.CustomGridSplitter">
            <summary>
            A control similar to the GridSplitter seen in WPF and Sivlerlight.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomGridSplitter.ResizeBehaviorProperty">
            <summary>
            ResizeBehavior Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomGridSplitter.ResizeDirectionProperty">
            <summary>
            ResizeDirection Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.OnResizeDirectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ResizeDirection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.OnResizeDirectionChanged(WinRTXamlToolkit.Controls.GridResizeDirection,WinRTXamlToolkit.Controls.GridResizeDirection)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ResizeDirection property.
            </summary>
            <param name="oldResizeDirection">The old ResizeDirection value</param>
            <param name="newResizeDirection">The new ResizeDirection value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomGridSplitter.KeyboardIncrementProperty">
            <summary>
            KeyboardIncrement Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomGridSplitter.ShowsPreviewProperty">
            <summary>
            ShowsPreview Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.CustomGridSplitter.PreviewStyleProperty">
            <summary>
            PreviewStyle Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.CustomGridSplitter"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerMoved event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerReleased event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.CustomGridSplitter.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.CustomGridSplitter.DraggingCompleted">
            <summary>
            Occurs when dragging completes.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomGridSplitter.ResizeBehavior">
            <summary>
            Gets or sets the ResizeBehavior property. This dependency property 
            indicates which columns or rows are resized relative
            to the column or row for which the GridSplitter control is defined.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomGridSplitter.ResizeDirection">
            <summary>
            Gets or sets the ResizeDirection property. This dependency property 
            indicates whether the CustomGridSplitter control resizes rows or columns.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomGridSplitter.KeyboardIncrement">
            <summary>
            Gets or sets the KeyboardIncrement property. This dependency property 
            indicates the distance that each press of an arrow key moves
            a CustomGridSplitter control.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomGridSplitter.ShowsPreview">
            <summary>
            Gets or sets the ShowsPreview property. This dependency property
            indicates whether the preview control should be shown when dragged
            instead of directly updating the grid.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.CustomGridSplitter.PreviewStyle">
            <summary>
            Gets or sets the PreviewStyle property. This dependency property 
            indicates the style of the preview.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.GridSplitterPreviewControl">
            <summary>
            A primitive control used for representing a preview of the manipulated CustomGridSplitter
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.GridSplitterPreviewControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.GridSplitterPreviewControl"/> class.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions">
            <summary>
            Extension methods and properties for the GridViewItem class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.IsEnabledProperty">
            <summary>
            IsEnabled Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.GetIsEnabled(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsEnabled property. This dependency property 
            indicates whether the first GridViewItem found in ancestors is enabled.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.SetIsEnabled(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsEnabled property. This dependency property 
            indicates whether the first GridViewItem found in ancestors is enabled.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.OnIsEnabledChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsEnabled property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.IsSelectedProperty">
            <summary>
            IsSelected Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.GetIsSelected(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsSelected property. This dependency property 
            indicates whether the first GridViewItem found in ancestors is selected.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.SetIsSelected(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsSelected property. This dependency property 
            indicates whether the first GridViewItem found in ancestors is selected.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.GridViewItemExtensions.OnIsSelectedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsSelected property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ImageButton">
            <summary>
            A Button control templated to use images for its states.
            Provides ImageSource properties for each of the button's states as well as mechanisms for generating missing images.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.StretchProperty">
            <summary>
            Stretch Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.RecyclePressedStateImageForHoverProperty">
            <summary>
            RecyclePressedStateImageForHover Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnRecyclePressedStateImageForHoverChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the RecyclePressedStateImageForHover property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnRecyclePressedStateImageForHoverChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the RecyclePressedStateImageForHover property.
            </summary>
            <param name="oldRecyclePressedStateImageForHover">The old RecyclePressedStateImageForHover value</param>
            <param name="newRecyclePressedStateImageForHover">The new RecyclePressedStateImageForHover value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.NormalStateImageSourceProperty">
            <summary>
            NormalStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnNormalStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NormalStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnNormalStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the NormalStateImageSource property.
            </summary>
            <param name="oldNormalStateImageSource">The old NormalStateImageSource value</param>
            <param name="newNormalStateImageSource">The new NormalStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.HoverStateImageSourceProperty">
            <summary>
            HoverStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnHoverStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HoverStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnHoverStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HoverStateImageSource property.
            </summary>
            <param name="oldHoverStateImageSource">The old HoverStateImageSource value</param>
            <param name="newHoverStateImageSource">The new HoverStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.PressedStateImageSourceProperty">
            <summary>
            PressedStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnPressedStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PressedStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnPressedStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PressedStateImageSource property.
            </summary>
            <param name="oldPressedStateImageSource">The old PressedStateImageSource value</param>
            <param name="newPressedStateImageSource">The new PressedStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.DisabledStateImageSourceProperty">
            <summary>
            DisabledStateImageSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnDisabledStateImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DisabledStateImageSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnDisabledStateImageSourceChanged(Windows.UI.Xaml.Media.ImageSource,Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the DisabledStateImageSource property.
            </summary>
            <param name="oldDisabledStateImageSource">The old DisabledStateImageSource value</param>
            <param name="newDisabledStateImageSource">The new DisabledStateImageSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.NormalStateImageUriSourceProperty">
            <summary>
            NormalStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnNormalStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NormalStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnNormalStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the NormalStateImageUriSource property.
            </summary>
            <param name="oldNormalStateImageUriSource">The old NormalStateImageUriSource value</param>
            <param name="newNormalStateImageUriSource">The new NormalStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.HoverStateImageUriSourceProperty">
            <summary>
            HoverStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnHoverStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HoverStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnHoverStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the HoverStateImageUriSource property.
            </summary>
            <param name="oldHoverStateImageUriSource">The old HoverStateImageUriSource value</param>
            <param name="newHoverStateImageUriSource">The new HoverStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.PressedStateImageUriSourceProperty">
            <summary>
            PressedStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnPressedStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PressedStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnPressedStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the PressedStateImageUriSource property.
            </summary>
            <param name="oldPressedStateImageUriSource">The old PressedStateImageUriSource value</param>
            <param name="newPressedStateImageUriSource">The new PressedStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.DisabledStateImageUriSourceProperty">
            <summary>
            DisabledStateImageUriSource Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnDisabledStateImageUriSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DisabledStateImageUriSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnDisabledStateImageUriSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the DisabledStateImageUriSource property.
            </summary>
            <param name="oldDisabledStateImageUriSource">The old DisabledStateImageUriSource value</param>
            <param name="newDisabledStateImageUriSource">The new DisabledStateImageUriSource value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.GenerateMissingImagesProperty">
            <summary>
            GenerateMissingImages Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGenerateMissingImagesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GenerateMissingImages property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGenerateMissingImagesChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GenerateMissingImages property.
            </summary>
            <param name="oldGenerateMissingImages">The old GenerateMissingImages value</param>
            <param name="newGenerateMissingImages">The new GenerateMissingImages value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.GeneratedHoverStateLightenAmountProperty">
            <summary>
            GeneratedHoverStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedHoverStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedHoverStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedHoverStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedHoverStateLightenAmount property.
            </summary>
            <param name="oldGeneratedHoverStateLightenAmount">The old GeneratedHoverStateLightenAmount value</param>
            <param name="newGeneratedHoverStateLightenAmount">The new GeneratedHoverStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.GeneratedPressedStateLightenAmountProperty">
            <summary>
            GeneratedPressedStateLightenAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedPressedStateLightenAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedPressedStateLightenAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedPressedStateLightenAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedPressedStateLightenAmount property.
            </summary>
            <param name="oldGeneratedPressedStateLightenAmount">The old GeneratedPressedStateLightenAmount value</param>
            <param name="newGeneratedPressedStateLightenAmount">The new GeneratedPressedStateLightenAmount value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ImageButton.GeneratedDisabledStateGrayscaleAmountProperty">
            <summary>
            GeneratedDisabledStateGrayscaleAmount Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedDisabledStateGrayscaleAmountChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the GeneratedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnGeneratedDisabledStateGrayscaleAmountChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the GeneratedDisabledStateGrayscaleAmount property.
            </summary>
            <param name="oldGeneratedDisabledStateGrayscaleAmount">The old GeneratedDisabledStateGrayscaleAmount value</param>
            <param name="newGeneratedDisabledStateGrayscaleAmount">The new GeneratedDisabledStateGrayscaleAmount value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.ImageButton"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ImageButton.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.Stretch">
            <summary>
            Gets or sets the Stretch property. This dependency property 
            indicates how an Image should be stretched to fill the button.
            </summary>
            <remarks>
            A value of the Stretch enumeration specifies how the source image is
            applied if the Height and Width of the ImageButton are specified and are different
            than the source image's height and width. The default value is None.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.RecyclePressedStateImageForHover">
            <summary>
            Gets or sets the RecyclePressedStateImageForHover property. This dependency property 
            indicates whether the PressedStateImageSource should also be used for hover state with 0.5 opacity.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.NormalStateImageSource">
            <summary>
            Gets or sets the NormalStateImageSource property. This dependency property 
            indicates the ImageSource for the normal state.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.HoverStateImageSource">
            <summary>
            Gets or sets the HoverStateImageSource property. This dependency property 
            indicates the ImageSource to use when the pointer is over the button.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.PressedStateImageSource">
            <summary>
            Gets or sets the PressedStateImageSource property. This dependency property 
            indicates the ImageSource to use when the button is pressed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.DisabledStateImageSource">
            <summary>
            Gets or sets the DisabledStateImageSource property. This dependency property 
            indicates the ImageSource to use when the button is Disabled.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.NormalStateImageUriSource">
            <summary>
            Gets or sets the NormalStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.HoverStateImageUriSource">
            <summary>
            Gets or sets the HoverStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.PressedStateImageUriSource">
            <summary>
            Gets or sets the PressedStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.DisabledStateImageUriSource">
            <summary>
            Gets or sets the DisabledStateImageUriSource property. This dependency property 
            indicates the uri to use for the normal image source.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.GenerateMissingImages">
            <summary>
            Gets or sets the GenerateMissingImages property. This dependency property 
            indicates whether the missing images should be generated from the normal state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.GeneratedHoverStateLightenAmount">
            <summary>
            Gets or sets the GeneratedHoverStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the hover state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.GeneratedPressedStateLightenAmount">
            <summary>
            Gets or sets the GeneratedPressedStateLightenAmount property. This dependency property 
            indicates the lightening amount to use when generating the pressed state image.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ImageButton.GeneratedDisabledStateGrayscaleAmount">
            <summary>
            Gets or sets the GeneratedDisabledStateGrayscaleAmount property. This dependency property 
            indicates the grayscale amount to use when generating the disabled state image.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ImageExtensions">
            <summary>
            Attached properties that extend the Image control class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.FadeInOnLoadedProperty">
            <summary>
            FadeInOnLoaded Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.GetFadeInOnLoaded(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the FadeInOnLoaded property. This dependency property 
            indicates whether the image should be transparent and fade in into view only when loaded.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.SetFadeInOnLoaded(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the FadeInOnLoaded property. This dependency property 
            indicates whether the image should be transparent and fade in into view only when loaded.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.OnFadeInOnLoadedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the FadeInOnLoaded property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.FadeInOnLoadedHandlerProperty">
            <summary>
            FadeInOnLoadedHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.GetFadeInOnLoadedHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the FadeInOnLoadedHandler property. This dependency property 
            indicates the handler for the FadeInOnLoaded property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.SetFadeInOnLoadedHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.FadeInOnLoadedHandler)">
            <summary>
            Sets the FadeInOnLoadedHandler property. This dependency property 
            indicates the handler for the FadeInOnLoaded property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.SourceProperty">
            <summary>
            Source Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.GetSource(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Source property. This dependency property 
            indicates the Image.Source that supports property change handling.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.SetSource(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the Source property. This dependency property 
            indicates the Image.Source that supports property change handling.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.OnSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Source property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.CustomSourceProperty">
            <summary>
            CustomSource Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.GetCustomSource(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the CustomSource property. This dependency property 
            indicates the location of the image file to be used as a source of the Image.
            </summary>
            <remarks>
            This property can be used to use custom loading and tracing code for the Source,
            though it currently requires modifying the toolkit code.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.SetCustomSource(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the CustomSource property. This dependency property 
            indicates the location of the image file to be used as a source of the Image.
            </summary>
            <remarks>
            This property can be used to use custom loading and tracing code for the Source,
            though it currently requires modifying the toolkit code.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ImageExtensions.OnCustomSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CustomSource property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.FadeInOnLoadedHandler">
            <summary>
            Handles fade in animations on mage controls.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FadeInOnLoadedHandler.#ctor(Windows.UI.Xaml.Controls.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.Extensions.FadeInOnLoadedHandler"/> class.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FadeInOnLoadedHandler.Attach(Windows.UI.Xaml.Controls.Image)">
            <summary>
            Attaches the specified image.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.InputDialog">
            <summary>
            A dialog control for collecting user's text input.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog._shown">
            <summary>
            Flag for preventing reentrancy in the Show() method.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.ButtonStyleProperty">
            <summary>
            ButtonStyle Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.InputTextProperty">
            <summary>
            InputText Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InputDialog.OnInputTextChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the InputText property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InputDialog.OnInputTextChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the InputText property.
            </summary>
            <param name="oldInputText">The old InputText value</param>
            <param name="newInputText">The new InputText value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.AcceptButtonProperty">
            <summary>
            AcceptButton Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.CancelButtonProperty">
            <summary>
            CancelButton Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.BackgroundScreenBrushProperty">
            <summary>
            BackgroundScreenBrush Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.BackgroundStripeBrushProperty">
            <summary>
            BackgroundStripeBrush Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.TitleStyleProperty">
            <summary>
            TitleStyle Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.TextStyleProperty">
            <summary>
            TextStyle Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InputDialog.OnTextStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TextStyle property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InputDialog.OnTextStyleChanged(Windows.UI.Xaml.Style,Windows.UI.Xaml.Style)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the TextStyle property.
            </summary>
            <param name="oldTextStyle">The old TextStyle value</param>
            <param name="newTextStyle">The new TextStyle value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.InputTextStyleProperty">
            <summary>
            InputTextStyle Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.IsLightDismissEnabledProperty">
            <summary>
            IsLightDismissEnabled Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.AwaitsCloseTransitionProperty">
            <summary>
            AwaitsCloseTransition Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InputDialog.ButtonsPanelOrientationProperty">
            <summary>
            ButtonsPanelOrientation Dependency Property
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.ButtonStyle">
            <summary>
            Gets or sets the ButtonStyle property. This dependency property 
            indicates the Style to use for the buttons.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.InputText">
            <summary>
            Gets or sets the InputText property. This dependency property 
            indicates the text in the input box.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.AcceptButton">
            <summary>
            Gets or sets the AcceptButton property. This dependency property 
            indicates the result to return when user hits the Enter key while the input text box has focus.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.CancelButton">
            <summary>
            Gets or sets the CancelButton property. This dependency property 
            indicates the result to return when user hits the Escape key or taps out of the dialog.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.BackgroundScreenBrush">
            <summary>
            Gets or sets the BackgroundScreenBrush property. This dependency property 
            indicates the brush to use for the screen behind the dialog window.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.BackgroundStripeBrush">
            <summary>
            Gets or sets the BackgroundStripeBrush property. This dependency property 
            indicates the brush to use for the stripe behind the dialog window.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.TitleStyle">
            <summary>
            Gets or sets the TitleStyle property. This dependency property 
            indicates the style to use for the title TextBlock.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.TextStyle">
            <summary>
            Gets or sets the TextStyle property. This dependency property 
            indicates the style to use for the text section TextBlock.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.InputTextStyle">
            <summary>
            Gets or sets the InputTextStyle property. This dependency property 
            indicates the style of the input TextBox.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.IsLightDismissEnabled">
            <summary>
            Gets or sets the IsLightDismissEnabled property. This dependency property 
            indicates whether the dialog can be dismissed by tapping outside of the main dialog border.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.AwaitsCloseTransition">
            <summary>
            Gets or sets the AwaitsCloseTransition property. This dependency property 
            indicates whether awaiting ShowAsync() also awaits the closing transition..
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InputDialog.ButtonsPanelOrientation">
            <summary>
            Gets or sets the ButtonsPanelOrientation property. This dependency property 
            indicates the orientation of the buttons panel.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions">
            <summary>
            Extension methods and attached properties for the ListBox class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.BindableSelectionProperty">
            <summary>
            BindableSelection Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.GetBindableSelection(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the ListBox.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.SetBindableSelection(Windows.UI.Xaml.DependencyObject,System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Sets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the ListBox.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.OnBindableSelectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BindableSelection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.BindableSelectionHandlerProperty">
            <summary>
            BindableSelectionHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.GetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a ListBox - used to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.SetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ListBoxBindableSelectionHandler)">
            <summary>
            Sets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a ListBox - used to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.ItemToBringIntoViewProperty">
            <summary>
            ItemToBringIntoView Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.GetItemToBringIntoView(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.SetItemToBringIntoView(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view when first set.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.OnItemToBringIntoViewChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemToBringIntoView property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListBoxExtensions.ScrollToBottom(Windows.UI.Xaml.Controls.ListBox)">
            <summary>
            Scrolls a vertical ListBox to the bottom.
            </summary>
            <param name="listBox"></param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ListItemButton">
            <summary>
            A button replacement for use in lists. Allows items to be selected with touch while still supporting clicks and commands.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ListItemButton.CommandProperty">
            <summary>
            Command Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ListItemButton.OnCommandChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Command property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ListItemButton.OnCommandChanged(System.Windows.Input.ICommand,System.Windows.Input.ICommand)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Command property.
            </summary>
            <param name="oldCommand">The old Command value</param>
            <param name="newCommand">The new Command value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ListItemButton.CommandParameterProperty">
            <summary>
            CommandParameter Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ListItemButton.OnCommandParameterChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CommandParameter property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ListItemButton.OnCommandParameterChanged(System.Object,System.Object)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the CommandParameter property.
            </summary>
            <param name="oldCommandParameter">The old CommandParameter value</param>
            <param name="newCommandParameter">The new CommandParameter value</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ListItemButton.Command">
            <summary>
            Gets or sets the Command property. This dependency property 
            indicates the command to execute when the button gets tapped.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.ListItemButton.CommandParameter">
            <summary>
            Gets or sets the CommandParameter property. This dependency property 
            indicates the command parameter.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions">
            <summary>
            Extension methods and attached properties for the ListView class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.BindableSelectionProperty">
            <summary>
            BindableSelection Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.GetBindableSelection(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the ListView.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.SetBindableSelection(Windows.UI.Xaml.DependencyObject,System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Sets the BindableSelection property. This dependency property 
            indicates the list of selected items that is synchronized
            with the items selected in the ListView.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.OnBindableSelectionChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the BindableSelection property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.BindableSelectionHandlerProperty">
            <summary>
            BindableSelectionHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.GetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a ListView - used
            to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.SetBindableSelectionHandler(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ListViewBindableSelectionHandler)">
            <summary>
            Sets the BindableSelectionHandler property. This dependency property 
            indicates BindableSelectionHandler for a ListView - used to manage synchronization of BindableSelection and SelectedItems.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.ItemToBringIntoViewProperty">
            <summary>
            ItemToBringIntoView Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.GetItemToBringIntoView(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.SetItemToBringIntoView(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the ItemToBringIntoView property. This dependency property 
            indicates the item that should be brought into view when first set.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.OnItemToBringIntoViewChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ItemToBringIntoView property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewExtensions.ScrollToBottom(Windows.UI.Xaml.Controls.ListView)">
            <summary>
            Scrolls a vertical ListView to the bottom.
            </summary>
            <param name="listView"></param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions">
            <summary>
            Attached properties for use with a ListViewItem.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListView and not the ListViewItem itself.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.IsEnabledProperty">
            <summary>
            IsEnabled Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.GetIsEnabled(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsEnabled property. This dependency property 
            indicates whether the first ListViewItem found in ancestors is enabled.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListView and not the ListViewItem itself.
            Setting this property will update the IsEnabled property of the ListViewItem making it easier to
            disable selection of ListViewItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.SetIsEnabled(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsEnabled property. This dependency property 
            indicates whether the first ListViewItem found in ancestors is enabled.
            </summary>
            <remarks>
            Note that the IsEnabled property is to be used on an element inside of a ListView and not the ListViewItem itself.
            Setting this property will update the IsEnabled property of the ListViewItem making it easier to
            disable selection of ListViewItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.OnIsEnabledChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsEnabled property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.IsSelectedProperty">
            <summary>
            IsSelected Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.GetIsSelected(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsSelected property. This dependency property 
            indicates whether the first ListViewItem found in ancestors is selected.
            </summary>
            <remarks>
            Note that the IsSelected property is to be used on an element inside of a ListView and not the ListViewItem itself.
            Setting this property will update the IsSelected property of the ListViewItem making it easier to
            disable selection of ListViewItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.SetIsSelected(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsSelected property. This dependency property 
            indicates whether the first ListViewItem found in ancestors is selected.
            </summary>
            <remarks>
            Note that the IsSelected property is to be used on an element inside of a ListView and not the ListViewItem itself.
            Setting this property will update the IsSelected property of the ListViewItem making it easier to
            disable selection of ListViewItems in the databound collection scenarios.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ListViewItemExtensions.OnIsSelectedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsSelected property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NumericUpDownValueBarVisibility">
            <summary>
            Determins whether the value bar behind the value text should be visible
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericUpDownValueBarVisibility.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericUpDownValueBarVisibility.Collapsed">
            <summary>
            Collapsed
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NumericUpDown">
            <summary>
            NumericUpDown control - for representing values that can be
            entered with keyboard,
            using increment/decrement buttons
            as well as swiping over the control.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericUpDown.ValueFormatProperty">
            <summary>
            ValueFormat Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnValueFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ValueFormat property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnValueFormatChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ValueFormat property.
            </summary>
            <param name="oldValueFormat">The old ValueFormat value</param>
            <param name="newValueFormat">The new ValueFormat value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericUpDown.ValueBarVisibilityProperty">
            <summary>
            ValueBarVisibility Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnValueBarVisibilityChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ValueBarVisibility property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnValueBarVisibilityChanged(WinRTXamlToolkit.Controls.NumericUpDownValueBarVisibility,WinRTXamlToolkit.Controls.NumericUpDownValueBarVisibility)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ValueBarVisibility property.
            </summary>
            <param name="oldValueBarVisibility">The old ValueBarVisibility value</param>
            <param name="newValueBarVisibility">The new ValueBarVisibility value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericUpDown.IsReadOnlyProperty">
            <summary>
            IsReadOnly Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnIsReadOnlyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsReadOnly property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.OnIsReadOnlyChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsReadOnly property.
            </summary>
            <param name="oldIsReadOnly">The old IsReadOnly value</param>
            <param name="newIsReadOnly">The new IsReadOnly value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.NumericUpDown"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.NumericUpDown.ValueFormat">
            <summary>
            Gets or sets the ValueFormat property. This dependency property 
            indicates the format of the value string.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.NumericUpDown.ValueBarVisibility">
            <summary>
            Gets or sets the ValueBarVisibility property. This dependency property 
            indicates whether the value bar should be shown.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.NumericUpDown.IsReadOnly">
            <summary>
            Gets or sets the IsReadOnly property. This dependency property 
            indicates whether the box should only allow to read the values by copying and pasting them.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PieSlice">
            <summary>
            A path that represents a pie slice with a given
            Radius,
            StartAngle and
            EndAngle.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PieSlice.StartAngleProperty">
            <summary>
            The start angle property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PieSlice.EndAngleProperty">
            <summary>
            The end angle property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PieSlice.RadiusProperty">
            <summary>
            The radius property.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PieSlice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.PieSlice"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PieSlice.BeginUpdate">
            <summary>
            Suspends path updates until EndUpdate is called;
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PieSlice.EndUpdate">
            <summary>
            Resumes immediate path updates every time a component property value changes. Updates the path.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PieSlice.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PieSlice.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>
            The end angle.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1">
            <summary>
            Allows raise an event when the value of a dependency property changes when a view model is otherwise not necessary.
            </summary>
            <typeparam name="TPropertyType"></typeparam>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1.ValueProperty">
            <summary>
            Value Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1.OnValueChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Value property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1.OnValueChanged(`0,`0)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Value property.
            </summary>
            <param name="oldValue">The old Value value</param>
            <param name="newValue">The new Value value</param>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1.ValueChanged">
            <summary>
            Occurs when the value changes.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.PropertyChangeEventSource`1.Value">
            <summary>
            Gets or sets the Value property. This dependency property 
            indicates the value.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions">
            <summary>
            Attached properties and extension methods for RichTextBlock class.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.PlainTextProperty">
            <summary>
            PlainText Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.GetPlainText(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the PlainText property. This dependency property 
            indicates the plain text to assign to the RichTextBlock.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.SetPlainText(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the PlainText property. This dependency property 
            indicates the plain text to assign to the RichTextBlock.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.OnPlainTextChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PlainText property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.LinkedHtmlFragmentProperty">
            <summary>
            LinkedHtmlFragment Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.GetLinkedHtmlFragment(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the LinkedHtmlFragment property. This dependency property 
            indicates the linked text that can be bound to the RichTextBlock to automatically generate inline links.
            </summary>
            <remarks>
            Note that only simple html text with opening and closing anchor tags and href attribute with double-quotes is supported.
            No escapes or other tags will be parsed.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.SetLinkedHtmlFragment(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the LinkedHtmlFragment property. This dependency property 
            indicates the linked text that can be bound to the RichTextBlock to automatically generate inline links.
            </summary>
            <remarks>
            Note that only simple html text with opening and closing anchor tags and href attribute with double-quotes is supported.
            No escapes or other tags will be parsed.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.OnLinkedHtmlFragmentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the LinkedHtmlFragment property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.SetLinkedHtmlFragment(Windows.UI.Xaml.Controls.RichTextBlock,System.String)">
            <summary>
            Sets the linked HTML fragment.
            </summary>
            <remarks>
            Note that only simple html text with opening and closing anchor tags and href attribute with double-quotes is supported.
            No escapes or other tags will be parsed.
            </remarks>
            <param name="richTextBlock">The rich text block.</param>
            <param name="htmlFragment">The HTML fragment.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.AppendText(Windows.UI.Xaml.Controls.RichTextBlock,System.String)">
            <summary>
            Appends a paragraph of plain text to the RichTextBlock.
            </summary>
            <param name="richTextBlock">The rich text block.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.RichTextBlockExtensions.AppendLink(Windows.UI.Xaml.Controls.RichTextBlock,System.String,System.Uri)">
            <summary>
            Appends a HyperlinkButton with
            the given text and navigate uri to the given RichTextBlock.
            </summary>
            <param name="richTextBlock">The rich text block.</param>
            <param name="text">The text.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.RingSlice">
            <summary>
            A Path that represents a ring slice with a given
            (outer) Radius,
            InnerRadius,
            StartAngle,
            EndAngle and
            Center.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.RingSlice.StartAngleProperty">
            <summary>
            The start angle property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.RingSlice.EndAngleProperty">
            <summary>
            The end angle property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.RingSlice.RadiusProperty">
            <summary>
            The radius property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.RingSlice.InnerRadiusProperty">
            <summary>
            The inner radius property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.RingSlice.CenterProperty">
            <summary>
            Center Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.RingSlice.OnCenterChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Center property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.RingSlice.OnCenterChanged(System.Nullable{Windows.Foundation.Point},System.Nullable{Windows.Foundation.Point})">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Center property.
            </summary>
            <param name="oldCenter">The old Center value</param>
            <param name="newCenter">The new Center value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.RingSlice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.RingSlice"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.RingSlice.BeginUpdate">
            <summary>
            Suspends path updates until EndUpdate is called;
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.RingSlice.EndUpdate">
            <summary>
            Resumes immediate path updates every time a component property value changes. Updates the path.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.RingSlice.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.RingSlice.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>
            The end angle.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.RingSlice.Radius">
            <summary>
            Gets or sets the outer radius.
            </summary>
            <value>
            The outer radius.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.RingSlice.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.RingSlice.Center">
            <summary>
            Gets or sets the Center property. This dependency property 
            indicates the center point.
            Center point is calculated based on Radius and StrokeThickness if not specified.    
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.TextBlockExtensions">
            <summary>
            Contains extension methods for TextBlock.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.TextBlockExtensions.GetCharacterRect(Windows.UI.Xaml.Controls.TextBlock,System.Int32)">
            <summary>
            Gets the rectangle boundaries of a character in a TextBlock.
            </summary>
            <param name="tb">The TextBlock.</param>
            <param name="characterIndex">Index of the character.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.TextBoxFormatValidationHandler">
            <summary>
            Handles validation of TextBox.Text whenever TextChanged property is raised.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions">
            <summary>
            Attached properties for handling basic validation of field values.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.FormatProperty">
            <summary>
            Format Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetFormat(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Format property. This dependency property 
            indicates the formats to validate for.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetFormat(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Controls.Extensions.ValidationChecks)">
            <summary>
            Sets the Format property. This dependency property 
            indicates the formats to validate for.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Format property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.PatternProperty">
            <summary>
            Pattern Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetPattern(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the Pattern property. This dependency property 
            indicates the regex pattern that the Text property needs to match.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetPattern(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the Pattern property. This dependency property 
            indicates the regex pattern that the Text property needs to match.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnPatternChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Pattern property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.IsValidProperty">
            <summary>
            IsValid Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetIsValid(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the IsValid property. This dependency property 
            indicates whether the field value is valid.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetIsValid(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsValid property. This dependency property 
            indicates whether the field value is valid.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.NonEmptyErrorMessageProperty">
            <summary>
            NonEmptyErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetNonEmptyErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the NonEmptyErrorMessage property. This dependency property 
            indicates the error message to use when the field is marked non-empty and is empty.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetNonEmptyErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the NonEmptyErrorMessage property. This dependency property 
            indicates the error message to use when the field is marked non-empty and is empty.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnNonEmptyErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NonEmptyErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.NumericErrorMessageProperty">
            <summary>
            NumericErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetNumericErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the NumericErrorMessage property. This dependency property 
            indicates the error message to use for a field marked numeric with non-numeric content.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetNumericErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the NumericErrorMessage property. This dependency property 
            indicates the error message to use for a field marked numeric with non-numeric content.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnNumericErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the NumericErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SpecificLengthErrorMessageProperty">
            <summary>
            SpecificLengthErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetSpecificLengthErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the SpecificLengthErrorMessage property. This dependency property 
            indicates the error message to use for a field with an incorrect number of characters.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetSpecificLengthErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the SpecificLengthErrorMessage property. This dependency property 
            indicates the error message to use for a field with an incorrect number of characters.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnSpecificLengthErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the SpecificLengthErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.PatternErrorMessageProperty">
            <summary>
            PatternErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetPatternErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the PatternErrorMessage property. This dependency property 
            indicates the error message to use when the field text doesn't match requested pattern.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetPatternErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the PatternErrorMessage property. This dependency property 
            indicates the error message to use when the field text doesn't match requested pattern.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnPatternErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the PatternErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.MinLengthErrorMessageProperty">
            <summary>
            MinLengthErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetMinLengthErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the MinLengthErrorMessage property. This dependency property 
            indicates the error message to use for field that doesn't match minimum length requirement.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetMinLengthErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the MinLengthErrorMessage property. This dependency property 
            indicates the error message to use for field that doesn't match minimum length requirement.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnMinLengthErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the MinLengthErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.DefaultErrorMessageProperty">
            <summary>
            DefaultErrorMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetDefaultErrorMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the DefaultErrorMessage property. This dependency property 
            indicates the field value is invalid.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetDefaultErrorMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the DefaultErrorMessage property. This dependency property 
            indicates the field value is invalid.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnDefaultErrorMessageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DefaultErrorMessage property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.ValidationMessageProperty">
            <summary>
            ValidationMessage Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetValidationMessage(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ValidationMessage property. This dependency property 
            indicates the validation error message if the value is not valid.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetValidationMessage(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the ValidationMessage property. This dependency property 
            indicates the validation error message if the value is not valid.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.ValidationMessageVisibilityProperty">
            <summary>
            ValidationMessageVisibility Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetValidationMessageVisibility(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ValidationMessageVisibility property. This dependency property 
            indicates the visibility of the validation message.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetValidationMessageVisibility(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Visibility)">
            <summary>
            Sets the ValidationMessageVisibility property. This dependency property 
            indicates the visibility of the validation message.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.FormatValidationHandlerProperty">
            <summary>
            FormatValidationHandler Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetFormatValidationHandler(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the FormatValidationHandler property. This dependency property 
            indicates the handler that checks field format.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetFormatValidationHandler(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the FormatValidationHandler property. This dependency property 
            indicates the handler that checks field format.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnFormatValidationHandlerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the FormatValidationHandler property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.ValidBrushProperty">
            <summary>
            ValidBrush Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetValidBrush(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ValidBrush property. This dependency property 
            indicates the brush to use to highlight a successfully validated field.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetValidBrush(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Sets the ValidBrush property. This dependency property 
            indicates the brush to use to highlight a successfully validated field.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnValidBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ValidBrush property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.InvalidBrushProperty">
            <summary>
            InvalidBrush Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetInvalidBrush(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the InvalidBrush property. This dependency property 
            indicates the brush to use to highlight a field with invalid value.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetInvalidBrush(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Media.Brush)">
            <summary>
            Sets the InvalidBrush property. This dependency property 
            indicates the brush to use to highlight a field with invalid value.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnInvalidBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the InvalidBrush property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.MinLengthProperty">
            <summary>
            MinLength Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.GetMinLength(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the MinLength property. This dependency property 
            indicates minimum expected field value length if MinLength format is set.
            </summary>
            <remarks>
            The default value is 8 which matches a typical requirement for minimum password length.
            Specify another value if 8 is not the minimum value you expect when you set ValidationChecks.MinLength.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.SetMinLength(Windows.UI.Xaml.DependencyObject,System.Int32)">
            <summary>
            Sets the MinLength property. This dependency property 
            indicates minimum expected field value length if MinLength format is set.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.FieldValidationExtensions.OnMinLengthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the MinLength property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.ViewboxExtensions">
            <summary>
            Extension methods for the Viewbox control.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ViewboxExtensions.GetChildScaleX(Windows.UI.Xaml.Controls.Viewbox)">
            <summary>
            Gets the child horizontal scale factor.
            </summary>
            <param name="viewbox">The viewbox.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Can't tell effective scale of a Viewbox child for a Viewbox with no child.</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.ViewboxExtensions.GetChildScaleY(Windows.UI.Xaml.Controls.Viewbox)">
            <summary>
            Gets the child vertical scale factor.
            </summary>
            <param name="viewbox">The viewbox.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Can't tell effective scale of a Viewbox child for a Viewbox with no child.</exception>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.InteractionHelper">
            <summary>
            The InteractionHelper provides controls with support for all of the
            common interactions like mouse movement, mouse clicks, key presses,
            etc., and also incorporates proper event semantics when the control is
            disabled.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InteractionHelper.SequentialClickThresholdInMilliseconds">
            <summary>
            The threshold used to determine whether two clicks are temporally
            local and considered a double click (or triple, quadruple, etc.).
            500 milliseconds is the default double click value on Windows.
            This value would ideally be pulled form the system settings.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InteractionHelper.SequentialClickThresholdInPixelsSquared">
            <summary>
            The threshold used to determine whether two clicks are spatially
            local and considered a double click (or triple, quadruple, etc.)
            in pixels squared.  We use pixels squared so that we can compare to
            the distance delta without taking a square root.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.InteractionHelper._updateVisualState">
            <summary>
            Reference used to call UpdateVisualState on the base class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.#ctor(Windows.UI.Xaml.Controls.Control)">
            <summary>
            Initializes a new instance of the InteractionHelper class.
            </summary>
            <param name="control">Control receiving interaction.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
            <remarks>
            UpdateVisualState works differently than the rest of the injected
            functionality.  Most of the other events are overridden by the
            calling class which calls Allow, does what it wants, and then calls
            Base.  UpdateVisualState is the opposite because a number of the
            methods in InteractionHelper need to trigger it in the calling
            class.  We do this using the IUpdateVisualState internal interface.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.UpdateVisualStateBase(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle the control's Loaded event.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnIsEnabledChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes to the control's IsEnabled property.
            </summary>
            <param name="sender">The control.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnIsReadOnlyChanged(System.Boolean)">
            <summary>
            Handles changes to the control's IsReadOnly property.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnApplyTemplateBase">
            <summary>
            Update the visual state of the control when its template is changed.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Check if the control's GotFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnGotFocusBase">
            <summary>
            Base implementation of the virtual GotFocus event handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Check if the control's LostFocus event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnLostFocusBase">
            <summary>
            Base implementation of the virtual LostFocus event handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowMouseEnter(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Check if the control's MouseEnter event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnMouseEnterBase">
            <summary>
            Base implementation of the virtual MouseEnter event handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowMouseLeave(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Check if the control's MouseLeave event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnMouseLeaveBase">
            <summary>
            Base implementation of the virtual MouseLeave event handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowMouseLeftButtonDown(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnMouseLeftButtonDownBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonDown event
            handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowMouseLeftButtonUp(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Check if the control's MouseLeftButtonUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.OnMouseLeftButtonUpBase">
            <summary>
            Base implementation of the virtual MouseLeftButtonUp event handler.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Check if the control's KeyDown event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.AllowKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Check if the control's KeyUp event should be handled.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            A value indicating whether the event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.InteractionHelper.GetLogicalKey(Windows.UI.Xaml.FlowDirection,Windows.System.VirtualKey)">
            <summary>
            Translates keys for proper RightToLeft mode support.
            </summary>
            <param name="flowDirection">Control's flow direction mode.</param>
            <param name="originalKey">Original key.</param>
            <returns>
            A translated key code, indicating how the original key should be interpreted.
            </returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.Control">
            <summary>
            Gets the control the InteractionHelper is targeting.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.IsFocused">
            <summary>
            Gets a value indicating whether the control has focus.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.IsMouseOver">
            <summary>
            Gets a value indicating whether the mouse is over the control.
            </summary> 
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.IsReadOnly">
            <summary>
            Gets a value indicating whether the read-only property is set.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.IsPressed">
            <summary>
            Gets a value indicating whether the mouse button is pressed down
            over the control.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.LastClickTime">
            <summary>
            Gets or sets the last time the control was clicked.
            </summary>
            <remarks>
            The value is stored as Utc time because it is slightly more
            performant than converting to local time.
            </remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.LastClickPosition">
            <summary>
            Gets or sets the mouse position of the last click.
            </summary>
            <remarks>The value is relative to the control.</remarks>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.InteractionHelper.ClickCount">
            <summary>
            Gets the number of times the control was clicked.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.IUpdateVisualState">
            <summary>
            The IUpdateVisualState interface is used to provide the
            InteractionHelper with access to the type's UpdateVisualState method.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.IUpdateVisualState.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.ScrollExtensions">
            <summary>
            The ScrollExtensions class provides utility methods for scrolling items
            ScrollViewers.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.ScrollExtensions.LineChange">
            <summary>
            The amount to scroll a ScrollViewer for a line change.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.ScrollByVerticalOffset(Windows.UI.Xaml.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer vertically by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The vertical offset to scroll.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.ScrollByHorizontalOffset(Windows.UI.Xaml.Controls.ScrollViewer,System.Double)">
            <summary>
            Scroll a ScrollViewer horizontally by a given offset.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
            <param name="offset">The horizontal offset to scroll.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.LineUp(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.LineDown(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.LineLeft(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.LineRight(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a line.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.PageUp(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer up by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.PageDown(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer down by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.PageLeft(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer left by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.PageRight(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer right by a page.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.ScrollToTop(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the top.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.ScrollToBottom(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Scroll the ScrollViewer to the bottom.
            </summary>
            <param name="viewer">The ScrollViewer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.ScrollExtensions.GetTopAndBottom(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.FrameworkElement,System.Double@,System.Double@)">
            <summary>
            Get the top and bottom of an element with respect to its parent.
            </summary>
            <param name="element">The element to get the position of.</param>
            <param name="parent">The parent of the element.</param>
            <param name="top">Vertical offset to the top of the element.</param>
            <param name="bottom">
            Vertical offset to the bottom of the element.
            </param>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.TreeView">
            <summary>
            Represents a control that displays hierarchical data in a tree structure
            that has items that can expand and collapse.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeView._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeView._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeView.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnSelectedItemPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItemProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedItem.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeView.SelectedValueProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValue" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValue" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnSelectedValuePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValueProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValue.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeView.SelectedValuePathProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValuePath" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValuePath" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnSelectedValuePathPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedValuePathProperty property changed handler.
            </summary>
            <param name="d">TreeView that changed its SelectedValuePath.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnItemContainerStylePropertyChanged(System.Object,Windows.UI.Xaml.Style)">
            <summary>
            ItemContainerStyleProperty property changed handler.
            </summary>
            <param name="d">
            TreeView that changed its ItemContainerStyle.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            for the <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> control.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> control when a new
            control template is applied.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.WinRTXamlToolkit#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the TreeView.
            </summary>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> to
            display content.
            </summary>
            <returns>
            A <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> to use as a
            container for content.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is a
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />, which is the
            default container for items in the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> control.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>
            True if the item is a
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />; otherwise,
            false.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Prepares the container element to display the specified item.
            </summary>
            <param name="element">
            The container element used to display the specified item.
            </param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.ClearContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed
            as a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </summary>
            <param name="element">
            The <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> element to
            clear.
            </param>
            <param name="item">
            The item that is contained in the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnItemsChanged(System.Object)">
            <summary>
            Makes adjustments to the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> control when the
            value of the
            <see cref="P:WinRTXamlToolkit.Controls.ItemsControl.Items" /> property
            changes.
            </summary>
            <param name="e">
            A
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
            that contains data about the change.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.CheckForSelectedDescendents(WinRTXamlToolkit.Controls.TreeViewItem)">
            <summary>
            Select any descendents when adding new TreeViewItems to a TreeView.
            </summary>
            <param name="item">The added item.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.PropagateKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Propagate OnKeyDown messages from the root TreeViewItems to their
            TreeView.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Because Silverlight's ScrollViewer swallows many useful key events
            (which it can ignore on WPF if you override HandlesScrolling or use
            an internal only variable in Silverlight), the root TreeViewItems
            explicitly propagate KeyDown events to their parent TreeView.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event when a key
            is pressed while the control has focus.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="e " />is null.
            </exception>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.HandleScrollKeys(Windows.System.VirtualKey)">
            <summary>
            Handle keys related to scrolling.
            </summary>
            <param name="key">The key to handle.</param>
            <returns>A value indicating whether the key was handled.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.HandleScrollByPage(System.Boolean)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Provides handling for the KeyUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the MouseMove event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
            event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the MouseLeftButtonUp event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.HandleMouseButtonDown">
            <summary>
            Provides handling for mouse button events.
            </summary>
            <returns>A value indicating whether the event was handled.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.OnSelectedItemChanged(WinRTXamlToolkit.Controls.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Raises the
            <see cref="E:WinRTXamlToolkit.Controls.TreeView.SelectedItemChanged" />
            event when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property value changes.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
            that contains the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.ChangeSelection(System.Object,WinRTXamlToolkit.Controls.TreeViewItem,System.Boolean)">
            <summary>
            Change whether a TreeViewItem is selected.
            </summary>
            <param name="itemOrContainer">
            Item whose selection is changing.
            </param>
            <param name="container">
            Container of the item whose selection is changing.
            </param>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.UpdateSelectedValue(System.Object)">
            <summary>
            Update the selected value of the of the TreeView based on the value
            of the currently selected TreeViewItem and the SelectedValuePath.
            </summary>
            <param name="item">
            Value of the currently selected TreeViewItem.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.SelectFirstItem">
            <summary>
            Select the first item of the TreeView.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.FocusFirstItem">
            <summary>
            Focus the first item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeView.FocusLastItem">
            <summary>
            Focus the last item in the TreeView.
            </summary>
            <returns>A value indicating whether the item was focused.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem">
            <summary>
            Gets the selected item in a
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" />.
            </summary>
            <value>
            The currently selected item or null if no item is selected. The
            default value is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.SelectedValue">
            <summary>
            Gets the value of the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property that is specified by the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValuePath" />
            property.
            </summary>
            <value>
            The value of the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property that is specified by the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValuePath" />
            property, or null if no item is selected. The default value is null.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.SelectedValuePath">
            <summary>
            Gets or sets the property path that is used to get the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValue" />
            property of the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property in a <see cref="T:WinRTXamlToolkit.Controls.TreeView" />.
            </summary>
            <value>
            The property path that is used to get the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedValue" />
            property of the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property in a <see cref="T:WinRTXamlToolkit.Controls.TreeView" />. The
            default value is <see cref="F:System.String.Empty" />.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.SelectedContainer">
            <summary>
            Gets the currently selected TreeViewItem container.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.IsSelectedContainerHookedUp">
            <summary>
            Gets a value indicating whether the currently selected TreeViewItem
            container is properly hooked up to the TreeView.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.IsSelectionChangeActive">
            <summary>
            Gets or sets a value indicating whether the selected item is
            currently being changed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.ItemsControlHelper">
            <summary>
            Gets the ItemsControlHelper that is associated with this control.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.IsControlKeyDown">
            <summary>
            Gets a value indicating whether the Control key is currently
            pressed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeView.IsShiftKeyDown">
            <summary>
            Gets a value indicating whether the Shift key is currently pressed.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TreeView.SelectedItemChanged">
            <summary>
            Occurs when the value of the
            <see cref="P:WinRTXamlToolkit.Controls.TreeView.SelectedItem" />
            property changes.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
            <summary>
            Exposes <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(WinRTXamlToolkit.Controls.TreeView)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> to associate
            with the
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> that is associated
            with 
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains TreeView.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets a control pattern for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> that is associated
            with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values that indicates the control pattern.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is
            selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.OwnerTreeView">
            <summary>
            Gets the TreeView that owns this TreeViewAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider
            allows more than one child element to be selected at the same time.
            </summary>
            <value>
            True if multiple selection is allowed; otherwise, false.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider
            requires at least one child element to be selected.
            </summary>
            <value>
            True if selection is required; otherwise, false.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.TreeViewItem">
            <summary>
            Provides a selectable item for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeView" /> control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.ExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.HeaderName">
            <summary>
            The name of the Header template part.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem._expanderButton">
            <summary>
            The ExpanderButton template part is used to expand and collapse the
            TreeViewItem.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem._headerElement">
            <summary>
            The Header template part is used to distinguish the bound Header
            content of the TreeViewItem.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem._expansionStateGroup">
            <summary>
            The ExpansionStates visual state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem._allowWrite">
            <summary>
            A value indicating whether a read-only dependency property change
            handler should allow the value to be set.  This is used to ensure
            that read-only properties cannot be changed via SetValue, etc.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.HasItemsProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.HasItems" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.HasItems" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnHasItemsPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HasItemsProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its HasItems.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnIsExpandedPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsExpandedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsExpanded.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.IsSelectedProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnIsSelectedPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectedProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelected.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem.IsSelectionActiveProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelectionActive" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelectionActive" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnIsSelectionActivePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelectionActiveProperty property changed handler.
            </summary>
            <param name="d">TreeViewItem that changed its IsSelectionActive.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.TreeViewItem._parentItemsControl">
            <summary>
            A reference to the parent ItemsControl of a TreeViewItem.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnCreateAutomationPeer">
            <summary>
            Returns a
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            for use by the Silverlight automation infrastructure.
            </summary>
            <returns>
            A
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            object for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> control when a
            new control template is applied.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnExpansionStateGroupStateChanged(System.Object,Windows.UI.Xaml.VisualStateChangedEventArgs)">
            <summary>
            Provides handling for the ExpansionStates CurrentChanged event.
            </summary>
            <param name="sender">The ExpansionState VisualStateGroup.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.BringIntoView">
            <summary>
            Scroll the TreeViewItem into view.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.WinRTXamlToolkit#Controls#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> to
            display content.
            </summary>
            <returns>
            A <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> to use as a
            container for content.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </summary>
            <param name="item">The object to evaluate.</param>
            <returns>
            True if <paramref name="item" /> is a
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />; otherwise,
            false.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container element to display the specified
            item.
            </summary>
            <param name="element">
            Container element used to display the specified item.
            </param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.ClearContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed
            as a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </summary>
            <param name="element">
            The <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> element to
            clear.
            </param>
            <param name="item">
            The item that is contained in the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnItemsChanged(System.Object)">
            <summary>
            Makes adjustments to the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> when the value
            of the <see cref="P:WinRTXamlToolkit.Controls.ItemsControl.Items" />
            property changes.
            </summary>
            <param name="e">
            A
            <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
            that contains data about the change.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.RaiseEvent(Windows.UI.Xaml.RoutedEventHandler,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnExpanded(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises an
            <see cref="E:WinRTXamlToolkit.Controls.TreeViewItem.Expanded" /> event
            when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            property changes from false to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnCollapsed(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises a
            <see cref="E:WinRTXamlToolkit.Controls.TreeViewItem.Collapsed" />
            event when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            property changes from true to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.ToggleExpanded(Windows.UI.Xaml.RoutedEventHandler,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnSelected(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:WinRTXamlToolkit.Controls.TreeViewItem.Selected" /> event
            when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            property changes from false to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnUnselected(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the
            <see cref="E:WinRTXamlToolkit.Controls.TreeViewItem.Unselected" />
            event when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            property changes from true to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.GotFocus" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.LostFocus" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnExpanderGotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle the ExpanderButton's GotFocus event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseEnter" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeave" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnHeaderMouseLeftButtonDown(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the Header's MouseLeftButtonDown event.
            </summary>
            <param name="sender">The Header template part.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnExpanderClick(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Provides handling for the ExpanderButton's Click event.
            </summary>
            <param name="sender">The ExpanderButton.</param>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that
            contains the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyDown" /> event when the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> has focus.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.HandleDownKey">
            <summary>
            Try moving the focus down from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Provides handling for the
            <see cref="E:System.Windows.UIElement.KeyUp" /> event.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains
            the event data.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.HandleUpKey">
            <summary>
            Try moving the focus up from the selected item.
            </summary>
            <returns>
            A value indicating whether the focus was successfully moved.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.HandleScrollByPage(System.Boolean,Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Handle scrolling a page up or down.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="viewportHeight">The height of the viewport.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="currentDelta">The height of this item.</param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.CalculateDelta(System.Boolean,Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Controls.ScrollViewer,System.Double,System.Double,System.Double@)">
            <summary>
            Calculate the distance between this TreeViewItem and the item being
            paged from.
            </summary>
            <param name="up">
            A value indicating whether the page should be scrolled up.
            </param>
            <param name="element">The element being paged from.</param>
            <param name="scrollHost">The ScrollViewer being scrolled.</param>
            <param name="top">The top of item to start from.</param>
            <param name="bottom">The bottom of the item to start from.</param>
            <param name="closeEdge">
            The distance between the top/bottom of one item to the other.
            </param>
            <returns>
            A value indicating whether the scroll was handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.Select(System.Boolean)">
            <summary>
            Change the selected status of the TreeViewItem.
            </summary>
            <param name="selected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.UpdateContainsSelection(System.Boolean)">
            <summary>
            Update the ancestors of this item when it changes selection.
            </summary>
            <param name="selected">
            A value indicating whether the item is selected.
            </param>
            <remarks>
            Unselection updates need to occur before selection updates because
            the old and new selected items may share a partial path.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.AllowKeyHandleEvent">
            <summary>
            Determine whether the TreeViewItem should be allowed to handle a key
            event.
            </summary>
            <returns>
            A value indicating whether the key event should be handled.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.FocusDown">
            <summary>
            Navigate the focus to the next TreeViewItem below this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.FocusInto">
            <summary>
            Navigate the focus to the very last TreeViewItem descendent of the
            this item.
            </summary>
            <returns>
            A value indicating whether the focus was navigated.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.FindNextFocusableItem(System.Boolean)">
            <summary>
            Find the next focusable TreeViewItem below this item.
            </summary>
            <param name="recurse">
            A value indicating whether the item should recurse into its child
            items when searching for the next focusable TreeViewItem.
            </param>
            <returns>The next focusable TreeViewItem below this item.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.FindLastFocusableItem">
            <summary>
            Find the last focusable TreeViewItem contained by this item.
            </summary>
            <returns>
            The last focusable TreeViewItem contained by this item.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.TreeViewItem.FindPreviousFocusableItem">
            <summary>
            Find the previous focusable TreeViewItem above this item.
            </summary>
            <returns>
            The previous focusable TreeViewItem above this item.
            </returns>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part is used to expand and
            collapse the TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.HeaderElement">
            <summary>
            Gets the Header template part that is used to distinguish the bound
            Header content of the TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ExpansionStateGroup">
            <summary>
            Gets or sets the ExpansionStates visual state group.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.IgnorePropertyChange">
            <summary>
            Gets or sets a value indicating whether a dependency property change
            handler should ignore the next change notification.  This is used to
            reset the value of properties without performing any of the actions
            in their change handlers.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.HasItems">
            <summary>
            Gets a value indicating whether this
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> contains
            items.
            </summary>
            <value>
            True if this <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />
            contains items; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="P:WinRTXamlToolkit.Controls.ItemsControl.Items" />
            contained by this
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> are expanded
            or collapsed.
            </summary>
            <value>
            True to indicate the contents of the
            <see cref="P:WinRTXamlToolkit.Controls.ItemsControl.Items" />
            collection are expanded; false to indicate the items are collapsed.
            The default is false.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> is selected.
            </summary>
            <value>
            True if this <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />
            is selected; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelectionActive">
            <summary>
            Gets a value indicating whether the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> has focus.
            </summary>
            <value>
            True if this <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />
            has focus; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.Interaction">
            <summary>
            Gets the helper that provides all of the standard
            interaction functionality.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ContainsSelection">
            <summary>
            Gets or sets a value indicating whether the TreeView's currently
            selected item is a descendent of this TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.CancelGotFocusBubble">
            <summary>
            Gets or sets a value indicating whether the TreeViewItem should
            ignore the next GotFocus event it receives because it has already
            been handled by one of its children.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.RequiresContainsSelectionUpdate">
            <summary>
            Gets or sets a value indicating whether checking ContainsSelection
            should actually perform the update notifications because the item
            was selected before it was in the visual tree.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.UserInitiatedExpansion">
            <summary>
            Gets or sets a value indicating whether a user initiated action
            caused the IsExpanded property to be set.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ParentItemsControl">
            <summary>
            Gets or sets a reference to the parent ItemsControl of a
            TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ParentTreeViewItem">
            <summary>
            Gets a reference to the parent TreeViewItem of this TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.ParentTreeView">
            <summary>
            Gets a reference to the parent TreeView of the TreeViewItem.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.IsRoot">
            <summary>
            Gets a value indicating whether this TreeViewItem is a root of the
            TreeView.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.TreeViewItem.CanExpandOnInput">
            <summary>
            Gets a value indicating whether the TreeViewItem can expand when it
            receives appropriate user input.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TreeViewItem.Collapsed">
            <summary>
            Occurs when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TreeViewItem.Expanded">
            <summary>
            Occurs when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TreeViewItem.Selected">
            <summary>
            Occurs when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            property of a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />
            changes from false to true.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Controls.TreeViewItem.Unselected">
            <summary>
            Occurs when the
            <see cref="P:WinRTXamlToolkit.Controls.TreeViewItem.IsSelected" />
            property of a <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" />
            changes from true to false.
            </summary>
        </member>
        <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
            <summary>
            Exposes the items in
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> types to UI
            automation.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(WinRTXamlToolkit.Controls.TreeViewItem)">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />
            class.
            </summary>
            <param name="owner">
            The <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> instance
            to associate with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.
            </summary>
            <returns>
            The
            <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" />
            enumeration value.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            This method is called by
            <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.
            </summary>
            <returns>A string that contains TreeViewItem.</returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the
            <see cref="T:WinRTXamlToolkit.Controls.TreeViewItem" /> that is
            associated with this
            <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />.
            </summary>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
            <returns>
            The object that implements the pattern interface, or null if the
            specified pattern interface is not implemented by this peer.
            </returns>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.RaiseAutomationIsSelectedChanged(System.Boolean)">
            <summary>
            Raise the IsSelected property changed event.
            </summary>
            <param name="isSelected">
            A value indicating whether the TreeViewItem is selected.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.RaiseExpandCollapseAutomationEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise an automation event when a TreeViewItem is expanded or
            collapsed.
            </summary>
            <param name="oldValue">
            A value indicating whether the TreeViewItem was expanded.
            </param>
            <param name="newValue">
            A value indicating whether the TreeViewItem is expanded.
            </param>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#IExpandCollapseProvider#Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#IExpandCollapseProvider#Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the
            control.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any selection and then selects the current element.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>
            Scrolls the content area of a container object in order to display
            the control within the visible region (viewport) of the container.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.OwnerTreeViewItem">
            <summary>
            Gets the TreeViewItem that owns this TreeViewItemAutomationPeer.
            </summary>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
            <summary>
            Gets the state (expanded or collapsed) of the control.
            </summary>
            <value>
            The state (expanded or collapsed) of the control.
            </value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value>True if an item is selected; otherwise, false.</value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.Windows#UI#Xaml#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and acts as the container for the calling object.
            </summary>
            <value>The UI automation provider.</value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateBusy">
            <summary>
            Busy state for BusyIndicator.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateIdle">
            <summary>
            Idle state for BusyIndicator.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupBusyStatus">
            <summary>
            Busyness group name.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateVisible">
            <summary>
            Visible state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.StateHidden">
            <summary>
            Hidden state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.VisualStates.GroupVisibility">
            <summary>
            BusyDisplay group.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.VisualStates.GoToState(Windows.UI.Xaml.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.VisualStates.GetImplementationRoot(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the implementation root of the Control.
            </summary>
            <param name="dependencyObject">The DependencyObject.</param>
            <remarks>
            Implements Silverlight's corresponding internal property on Control.
            </remarks>
            <returns>Returns the implementation root or null.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.VisualStates.TryGetVisualStateGroup(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            This method tries to get the named VisualStateGroup for the 
            dependency object. The provided object's ImplementationRoot will be 
            looked up in this call.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="groupName">The visual state group's name.</param>
            <returns>Returns null or the VisualStateGroup object.</returns>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.UniformGrid.ColumnsProperty">
            <summary>
            Identifies the Columns dependency property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.UniformGrid.RowsProperty">
            <summary>
            Identifies the Rows dependency property.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.UniformGrid.FirstColumnProperty">
            <summary>
            Identifies the FirstColumn dependency property.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.UniformGrid.Columns">
            <summary>
            Gets or sets the number of columns that are in the grid.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.UniformGrid.FirstColumn">
            <summary>
            Gets or sets the number of leading blank cells in the first row of the grid.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.UniformGrid.Rows">
            <summary>
            Gets or sets the number of rows that are in the grid.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.WatermarkTextBox">
            <summary>
            A TextBox with watermark text
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WatermarkTextBox.WatermarkProperty">
            <summary>
            Watermark Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WatermarkTextBox.WatermarkTextProperty">
            <summary>
            WatermarkText Dependency Property
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WatermarkTextBox.WatermarkTextStyleProperty">
            <summary>
            WatermarkTextStyle Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WatermarkTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Controls.WatermarkTextBox"/> class.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WatermarkTextBox.Watermark">
            <summary>
            Gets or sets the Watermark property. This dependency property 
            indicates an arbitrary content to use as a Watermark.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WatermarkTextBox.WatermarkText">
            <summary>
            Gets or sets the WatermarkText property. This dependency property 
            indicates the watermark text to show to the user.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WatermarkTextBox.WatermarkTextStyle">
            <summary>
            Gets or sets the WatermarkTextStyle property. This dependency property 
            indicates the style of the watermark TextBlock.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.WebBrowser">
            <summary>
            A simple web browser control based on the WebView control with address bar, navigation buttons and navigation history.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WebBrowser.AutoNavigateProperty">
            <summary>
            AutoNavigate Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnAutoNavigateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the AutoNavigate property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnAutoNavigateChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the AutoNavigate property.
            </summary>
            <param name="oldAutoNavigate">The old AutoNavigate value</param>
            <param name="newAutoNavigate">The new AutoNavigate value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WebBrowser.SourceProperty">
            <summary>
            Source Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Source property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnSourceChanged(System.Uri,System.Uri)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Source property.
            </summary>
            <param name="oldSource">The old Source value</param>
            <param name="newSource">The new Source value</param>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WebBrowser.TitleProperty">
            <summary>
            Title Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnTitleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Title property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.OnTitleChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the Title property.
            </summary>
            <param name="oldTitle">The old Title value</param>
            <param name="newTitle">The new Title value</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WebBrowser.Refresh">
            <summary>
            Refreshes the current page.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WebBrowser.AutoNavigate">
            <summary>
            Gets or sets the AutoNavigate property. This dependency property 
            indicates whether the browser should automatically navigate when the Source property is set.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WebBrowser.Source">
            <summary>
            Gets or sets the Source property. This dependency property 
            indicates the source to navigate to.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WebBrowser.Title">
            <summary>
            Gets or sets the Title property. This dependency property 
            indicates the title of the current source.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions">
            <summary>
            Extension methods for WebView control.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions.GetTitle(Windows.UI.Xaml.Controls.WebView)">
            <summary>
            Gets the title of the currently displayed page.
            </summary>
            <param name="webView">The web view.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions.GetAddress(Windows.UI.Xaml.Controls.WebView)">
            <summary>
            Gets the address of the current page.
            </summary>
            <param name="webView">The web view.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions.GetHead(Windows.UI.Xaml.Controls.WebView)">
            <summary>
            Gets the HTML head inner string of the current page.
            </summary>
            <param name="webView">The web view.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions.GetTagAttributeBySpecificAttribute(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the tag attribute value for specific other attribute name and value.
            </summary>
            <param name="htmlFragment">The HTML fragment.</param>
            <param name="tagName">Name of the tag.</param>
            <param name="testAttributeName">Name of the test attribute.</param>
            <param name="testAttributeValue">The test attribute value.</param>
            <param name="attributeToGet">The attribute to get.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.WebViewExtensions.GetFavIconLink(Windows.UI.Xaml.Controls.WebView)">
            <summary>
            Gets the fav icon URI.
            </summary>
            <param name="webView">The web view.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.OrientedSize.#ctor(Windows.UI.Xaml.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.OrientedSize.#ctor(Windows.UI.Xaml.Controls.Orientation,System.Double,System.Double)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.WrapPanel">
            <summary>
            Positions child elements sequentially from left to right or top to
            bottom.  When elements extend beyond the panel edge, elements are
            positioned in the next row or column.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WrapPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.ItemHeight" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.ItemHeight" />
            dependency property
            </value>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.ItemWidth" />
            dependency property.
            </value>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.Orientation" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:WinRTXamlToolkit.Controls.WrapPanel.Orientation" />
            dependency property.
            </value>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.OnOrientationPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            OrientationProperty property changed handler.
            </summary>
            <param name="d">WrapPanel that changed its Orientation.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.OnItemHeightOrWidthPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Property changed handler for ItemHeight and ItemWidth.
            </summary>
            <param name="d">
            WrapPanel that changed its ItemHeight or ItemWidth.
            </param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel"/> in anticipation
            of arranging them during the
            <see cref="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)"/>
            pass.
            </summary>
            <param name="constraint">
            The size available to child elements of the wrap panel.
            </param>
            <returns>
            The size required by the
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel"/> and its 
            elements.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arranges and sizes the
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" /> control and its
            child elements.
            </summary>
            <param name="finalSize">
            The area within the parent that the
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" /> should use 
            arrange itself and its children.
            </param>
            <returns>
            The actual size used by the
            <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" />.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.WrapPanel.ArrangeLine(System.Int32,System.Int32,System.Nullable{System.Double},System.Double,System.Double)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:WinRTXamlToolkit.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Double.NaN" />.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:Windows.UI.Xaml.Controls.Orientation" />
            values.  The default is
            <see cref="F:Windows.UI.Xaml.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NumericExtensions">
            <summary>
            Numeric utility methods used by controls.  These methods are similar in
            scope to the WPF DoubleUtil class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericExtensions.IsZero(System.Double)">
            <summary>
            Check if a number is zero.
            </summary>
            <param name="value">The number to check.</param>
            <returns>True if the number is zero, false otherwise.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericExtensions.IsNaN(System.Double)">
            <summary>
            Check if a number isn't really a number.
            </summary>
            <param name="value">The number to check.</param>
            <returns>
            True if the number is not a number, false if it is a number.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericExtensions.IsGreaterThan(System.Double,System.Double)">
            <summary>
            Determine if one number is greater than another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is greater than the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericExtensions.AreClose(System.Double,System.Double)">
            <summary>
            Determine if two numbers are close in value.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is close in value to the second, false
            otherwise.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.NumericExtensions.IsLessThanOrClose(System.Double,System.Double)">
            <summary>
            Determine if one number is less than or close to another.
            </summary>
            <param name="left">First number.</param>
            <param name="right">Second number.</param>
            <returns>
            True if the first number is less than or close to the second, false
            otherwise.
            </returns>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.NumericExtensions.NanUnion">
            <summary>
            NanUnion is a C++ style type union used for efficiently converting
            a double into an unsigned long, whose bits can be easily
            manipulated.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericExtensions.NanUnion.FloatingValue">
            <summary>
            Floating point representation of the union.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Controls.NumericExtensions.NanUnion.IntegerValue">
            <summary>
            Integer representation of the union.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.BooleanToDataTemplateConverter">
            <summary>
            Selects a DataTemplate based on a boolean value.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.BooleanToDataTemplateConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.BooleanToDataTemplateConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.BooleanToDataTemplateConverter.FalseTemplate">
            <summary>
            Gets or sets the template to use for false value.
            </summary>
            <value>
            The false template.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.BooleanToDataTemplateConverter.TrueTemplate">
            <summary>
            Gets or sets the template to use for true value.
            </summary>
            <value>
            The true template.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.BooleanToVisibilityConverter">
            <summary>
            Value converter that translates true to <see cref="F:Windows.UI.Xaml.Visibility.Visible"/> and false to
            <see cref="F:Windows.UI.Xaml.Visibility.Collapsed"/>.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.BooleanToVisibilityConverter.IsReversed">
            <summary>
            If true - converts from Visibility to Boolean.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.BooleanToVisibilityConverter.IsInversed">
            <summary>
            If true - converts true to Collapsed and false to Visible.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.ColorToBrushConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.ColorToBrushConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.ColorToBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.MultiplyConverter">
            <summary>
            Converts given value to a double-typed result of its multiplied by the parameter.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.MultiplyConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.MultiplyConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.NullableBoolToVisibilityConverter">
            <summary>
            Converts a nullable bool to Visibility.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.NullableBoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.NullableBoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.NullableBoolToVisibilityConverter.IsReversed">
            <summary>
            If true - converts from Visibility to nullable Boolean.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.NullableBoolToVisibilityConverter.TrueIsVisible">
            <summary>
            Gets or sets a value indicating whether true gets converted to Visibility.Visible.
            </summary>
            <value>
              <c>true</c> if true gets converted Visibility.Visible;
            otherwise, if <c>false</c> - false will be converted to Visibility.Visible.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.DoubleToIntConverter">
            <summary>
            Converts a double to an int.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.DoubleToIntConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.DoubleToIntConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.NullableBoolToBoolConverter">
            <summary>
            Converts between bool? and bool.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.NullableBoolToBoolConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.NullableBoolToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.NullableBoolToBoolConverter.IsReversed">
            <summary>
            Gets or sets a value indicating whether it should convert bool too bool? instead.
            </summary>
            <value>
            <c>true</c> if converting from bool? to bool; otherwise, <c>false</c> and converting from bool to bool?.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.PolynomialConverter">
            <summary>
            Converts given value to a double-typed result of a polynomial given its coefficients.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.PolynomialConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.PolynomialConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="P:WinRTXamlToolkit.Converters.PolynomialConverter.Coefficients">
            <summary>
            Gets or sets the coefficients of the polynomial.
            </summary>
            <value>
            The coefficients.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Converters.SecondsToTimeSpanStringConverter">
            <summary>
            Converts a double type total number of seconds value into a time span string format - HH:mm:ss.fff
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.SecondsToTimeSpanStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Converters.SecondsToTimeSpanStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in <c>TwoWay</c> bindings. 
            </summary>
            <param name="value">The target data being passed to the source..</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Device.DeviceHelper">
            <summary>
            Helper class for Device related stuff
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Device.DeviceHelper.GetDeviceId">
            <summary>
            Gets a unique Device indetifier
            </summary>
            <returns>Unique Device indetifier</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions">
            <summary>
            Extension and helper methods for loading a BitmapImage.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions.LoadAsync(Windows.Storage.StorageFile)">
            <summary>
            Loads a BitmapImage asynchronously given a specific file.
            </summary>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions.LoadAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Loads a BitmapImage asynchronously given a specific folder and file name.
            </summary>
            <param name="folder">The folder.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions.SetSourceAsync(Windows.UI.Xaml.Media.Imaging.BitmapImage,Windows.Storage.StorageFile)">
            <summary>
            Sets the source image for a BitmapImage by opening
            a given file and processing the result asynchronously.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions.LoadFromBase64String(Windows.UI.Xaml.Media.Imaging.BitmapImage,System.String)">
            <summary>
            Loads a BitmapImage from a Base64 encoded string.
            </summary>
            <param name="bitmap">The bitmap into which the image will be loaded.</param>
            <param name="img">The Base64-encoded image string.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.BitmapImageLoadExtensions.LoadFromBase64String(System.String)">
            <summary>
            Loads a BitmapImage from a Base64-encoded string.
            </summary>
            <param name="img">The Base64-encoded image string.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.ColorExtensions">
            <summary>
            Extension and helper methods for converting color values
            between different RGB data types and different color spaces.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.AsInt(Windows.UI.Color)">
            <summary>
            Returns the color value as a premultiplied Int32 - 4 byte ARGB structure.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.FromString(System.String)">
            <summary>
            Returns a Color based on XAML color string.
            </summary>
            <param name="c">The color string. Any format used in XAML should work.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.FromStringUsingXamlReader(System.String)">
            <summary>
            Returns a Color based on XAML color string.
            </summary>
            <remarks>
            A reference implementation that parses the color using the XAML parser.
            About 40 times slower than FromString() and needs to be run on dispatcher thread.
            Use FromString() instead.
            </remarks>
            <param name="c">The color string. Any format used in XAML should work.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.FromRgb(System.Double,System.Double,System.Double)">
            <summary>
            Returns a Color based on 0..1 double RGB values.
            </summary>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.FromHsl(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns a Color struct based on HSL model.
            </summary>
            <param name="hue">0..360 range hue</param>
            <param name="saturation">0..1 range saturation</param>
            <param name="lightness">0..1 range lightness</param>
            <param name="alpha">0..1 alpha</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.FromHsv(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns a Color struct based on HSV model.
            </summary>
            <param name="hue">0..360 range hue</param>
            <param name="saturation">0..1 range saturation</param>
            <param name="value">0..1 range value</param>
            <param name="alpha">0..1 alpha</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.ToHsl(Windows.UI.Color)">
            <summary>
            Converts an RGBA Color the HSL representation.
            </summary>
            <param name="rgba">The rgba.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.ToHsv(Windows.UI.Color)">
            <summary>
            Converts an RGBA Color the HSV representation.
            </summary>
            <param name="rgba">The rgba.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.IntColorFromBytes(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Converts four bytes to an Int32 - 4 byte ARGB structure.
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.ToPixels(System.Byte[])">
            <summary>
            Converts a byte array/pixel buffer into an int array.
            </summary>
            <remarks>
            It might be worth it to avoid the conversion altogether by working directly with bytes,
            but the conversion improves cross-platform portability of the code.
            </remarks>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.ToBytes(System.Int32[])">
            <summary>
            Converts an int array/pixel buffer into a new byte array.
            </summary>
            <param name="pixels"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.ToBytes(System.Int32[],System.Byte[])">
            <summary>
            Copies an int array/pixel buffer into an existing byte array.
            </summary>
            <param name="pixels">Source int pixel buffer</param>
            <param name="bytes">Target byte array</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.ColorExtensions.MaxDiff(System.Int32,System.Int32)">
            <summary>
            Returns the maximum difference of any of the RGBA byte components of the two int-encoded color values.
            </summary>
            <remarks>
            This is useful in tolerance-enabled image processing algorithms.
            </remarks>
            <param name="pixel">Pixel color</param>
            <param name="color">Color to compare with</param>
            <returns>Maximum difference of any of the RGBA byte components of the two parameters.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.HslColor">
            <summary>
            Defines a color in Hue/Saturation/Lightness (HSL) space.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HslColor.H">
            <summary>
            The Hue in 0..360 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HslColor.S">
            <summary>
            The Saturation in 0..1 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HslColor.L">
            <summary>
            The Lightness in 0..1 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HslColor.A">
            <summary>
            The Alpha/opacity in 0..1 range.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.HsvColor">
            <summary>
            Defines a color in Hue/Saturation/Value (HSV) space.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HsvColor.H">
            <summary>
            The Hue in 0..360 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HsvColor.S">
            <summary>
            The Saturation in 0..1 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HsvColor.V">
            <summary>
            The Value in 0..1 range.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.HsvColor.A">
            <summary>
            The Alpha/opacity in 0..1 range.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.PixelMath">
            <summary>
            Contains basic pixel processing helper methods for double- and byte-type pixel color components.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Max(System.Double,System.Double,System.Double)">
            <summary>
            Returns the maximum of 3 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Max(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the maximum of 4 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <param name="v4">The v4.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Min(System.Double,System.Double,System.Double)">
            <summary>
            Returns the minimum of 3 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Min(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the minimum of 4 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <param name="v4">The v4.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Max(System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns the maximum of 3 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Max(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns the maximum of 4 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <param name="v4">The v4.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Min(System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns the minimum of 3 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Min(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns the minimum of 4 numbers.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <param name="v4">The v4.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the specified value to the given inclusive min..max range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.PixelMath.Clamp(System.Byte,System.Byte,System.Byte)">
            <summary>
            Clamps the specified value to the given inclusive min..max range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions">
            <summary>
            Extension methods for WriteableBitmap used for generating color picker bitmaps.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueLightness(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on hue and lightness.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="saturation">The saturation.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueLightnessAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on hue and lightness asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="saturation">The saturation.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationLightnessRect(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on saturation and lightness.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationLightnessRectAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on saturation and lightness asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationLightnessTriangle(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker triangle based on saturation and lightness.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationLightnessTriangleAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker triangle based on saturation and lightness asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueValue(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on hue and value.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="saturation">The saturation.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueValueAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on hue and value asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="saturation">The saturation.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationValueRect(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on saturation and value.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationValueRectAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker rectangle based on saturation and value asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationValueTriangle(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker triangle based on saturation and value.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerSaturationValueTriangleAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Renders the color picker triangle based on saturation and value asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="hue">The hue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueRing(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Renders the color picker hue ring.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="innerRingRadius">The inner ring radius.</param>
            <param name="outerRingRadius">The outer ring radius.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHueRingAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Renders the color picker hue ring asynchronously.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="innerRingRadius">The inner ring radius.</param>
            <param name="outerRingRadius">The outer ring radius.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVHueBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV hue bar.
            </summary>
            <param name="target">The target.</param>
            <param name="saturation">The saturation.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVHueBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV hue bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="saturation">The saturation.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVSaturationBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV saturation bar.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVSaturationBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV saturation bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVValueBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV value bar.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSVValueBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSV value bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLHueBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL hue bar.
            </summary>
            <param name="target">The target.</param>
            <param name="saturation">The saturation.</param>
            <param name="lightness">The lightness.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLHueBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL hue bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="saturation">The saturation.</param>
            <param name="lightness">The lightness.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLSaturationBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL saturation bar.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="lightness">The lightness.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLSaturationBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL saturation bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="lightness">The lightness.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLLightnessBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL lightness bar.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerHSLLightnessBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker HSL lightness bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBRedBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB red bar.
            </summary>
            <param name="target">The target.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBRedBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB red bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBGreenBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB green bar.
            </summary>
            <param name="target">The target.</param>
            <param name="red">The red.</param>
            <param name="blue">The blue.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBGreenBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB green bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="red">The red.</param>
            <param name="blue">The blue.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBBlueBar(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB blue bar.
            </summary>
            <param name="target">The target.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapColorPickerExtensions.RenderColorPickerRGBBlueBarAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double,System.Double)">
            <summary>
            Renders the color picker RGB blue bar async.
            </summary>
            <param name="target">The target.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Interactivity.BehaviorCollection">
            <summary>
            Represents a collection of behaviors with a shared AssociatedObject and provides
            change notifications to its contents when that AssociatedObject changes.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.BehaviorCollection.Attach(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="dependencyObject">
            The object to attach to.
            </param>
            <exception cref="T:System.InvalidOperationException">
            The BehaviorCollection is already attached to a different object.
            </exception>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.BehaviorCollection.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.BehaviorCollection.OnAttached">
            <summary>
            Called immediately after the collection is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
            Called when the collection is being detached from its AssociatedObject, but
            before it has actually occurred.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Interactivity.BehaviorCollection.AssociatedObject">
            <summary>
            The object on which the collection is hosted.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Interactivity.Interaction">
            <summary>
            Static class that owns the Behaviors attached properties. Handles
            propagation of AssociatedObject change notifications.
            </summary>
        </member>
        <member name="F:WinRTXamlToolkit.Interactivity.Interaction.BehaviorsProperty">
            <summary>
            Behaviors Attached Dependency Property
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Interaction.GetBehaviors(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the <see cref="T:WinRTXamlToolkit.Interactivity.BehaviorCollection"/> associated with
            a specified object.
            </summary>
            <param name="obj">
            The object from which to retrieve the <see cref="T:WinRTXamlToolkit.Interactivity.BehaviorCollection"/>.
            </param>
            <returns>
            A <see cref="T:WinRTXamlToolkit.Interactivity.BehaviorCollection"/> containing the behaviors associated with the specified object.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Interaction.SetBehaviors(Windows.UI.Xaml.DependencyObject,WinRTXamlToolkit.Interactivity.BehaviorCollection)">
            <summary>
            Called when Property is retrieved
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:WinRTXamlToolkit.Interactivity.Interaction.BehaviorsChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the property changes
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:WinRTXamlToolkit.Licensing.LicenseChecker">
            <summary>
            Helper methods for app license information.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Licensing.LicenseChecker.InitializeLicense">
            <summary>
            Initializes the license checke.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Licensing.LicenseChecker.ReloadLicense">
            <summary>
            Reloads license information.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Licensing.LicenseChecker.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Checks if a property already matches a desired value.  Sets the property and
            notifies listeners only when necessary.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="storage">Reference to a property with both getter and setter.</param>
            <param name="value">Desired value for the property.</param>
            <param name="propertyName">Name of the property used to notify listeners.  This
            value is optional and can be provided automatically when invoked from compilers that
            support CallerMemberName.</param>
            <returns>True if the value was changed, false if the existing value matched the
            desired value.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Licensing.LicenseChecker.OnPropertyChanged(System.String)">
            <summary>
            Notifies listeners that a property value has changed.
            </summary>
            <param name="propertyName">Name of the property used to notify listeners.  This
            value is optional and can be provided automatically when invoked from compilers
            that support <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
        </member>
        <member name="P:WinRTXamlToolkit.Licensing.LicenseChecker.IsTrial">
            <summary>
            Gets or sets a value indicating whether the app is in trial mode.
            </summary>
            <value>
              <c>true</c> if in trial mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:WinRTXamlToolkit.Licensing.LicenseChecker.PropertyChanged">
            <summary>
            Multicast event for property change notifications.
            </summary>
        </member>
        <member name="T:WinRTXamlToolkit.Net.WebHelper">
            <summary>
            A few Web utilities
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Net.WebHelper.IsConnectedToInternet">
            <summary>
            Checks if Internet connection is available. May not be the most best way to do it though
            </summary>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Net.WebHelper.DownloadStringAsync(System.String)">
            <summary>
            Downloads content from given URL and returns it as string
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Tools.EnumExtensions">
            <summary>
            Enum type extensions.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.EnumExtensions.GetValues``1(System.Func{``0,System.Boolean})">
            <summary>
            Gets the values declared by the given enum.
            </summary>
            <typeparam name="TEnumType">The enum type.</typeparam>
            <param name="condition">The condition.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapDarkenExtension">
            <summary>
            WriteableBitmap extensions to make the image darker.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapDarkenExtension.Darken(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Darkens the specified bitmap.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="amount">The 0..1 range amount to darken by where 0 does not affect the bitmap and 1 makes the bitmap completely black.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapGrayscaleExtension">
            <summary>
            WriteableBitmap extensions to remove the color from the image.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapGrayscaleExtension.Grayscale(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)">
            <summary>
            Removes all color from the specified bitmap.
            </summary>
            <param name="target">The target bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapGrayscaleExtension.Grayscale(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Removes color from the specified bitmap.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="amount">
            The 0..1 range amount of color to remove
            from the bitmap where
            0 does not affect the bitmap and
            1 makes the bitmap completely grayscale.
            </param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.IBufferExtensions">
            <summary>
            Contains extensions for an IBuffer interface in the context of a WriteableBitmap,
            which exposes one to access its pixels.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.IBufferExtensions.GetPixels(Windows.Storage.Streams.IBuffer)">
            <summary>
            Gets the pixels access wrapper for a PixelBuffer property of a WriteableBitmap.
            </summary>
            <param name="pixelBuffer">The pixel buffer.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo">
            <summary>
            Gives access to the pixels of a WriteableBitmap given an IBuffer
            exposed by Pixels property.
            </summary>
            <remarks>
            Note that creating this object copies the pixels buffer
            into the Bytes byte array for quick pixel access
            and the array needs to be copied back to the pixels buffer
            to update the bitmap with a call to UpdateFromBytes().
            This is acceptable for convenience and possibly best for
            performance in some scenarios, but it does add some upfront
            overhead as well overhead to update the bitmap at the end.
            This is only a theory and for better performance it might be
            good to test different approaches.
            The goal of this approach is code simplicity. For best performance
            using native code and/or DirectX is recommended.
            </remarks>
        </member>
        <member name="F:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo.Bytes">
            <summary>
            The bytes of the pixel stream.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo.MaxDiff(System.Int32,System.Int32)">
            <summary>
            Returns the maximum difference between any of the R/G/B/A components
            of a color at given index and the one passed as parameter.
            </summary>
            <param name="i">Pixel index</param>
            <param name="color">Color to compare to</param>
            <returns>E.g. for 0x01010101 and 0x00010203 returns 0x01.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo.#ctor(Windows.Storage.Streams.IBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo"/> class.
            </summary>
            <param name="pixelBuffer">The pixel buffer returned by WriteableBitmap.PixelBuffer.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo.UpdateFromBytes">
            <summary>
            Updates the associated pixel buffer from bytes.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Imaging.IBufferExtensions.PixelBufferInfo.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> containing an ARGB format pixel
            at index i in the buffer.
            </summary>
            <value>
            The <see cref="T:System.Int32"/> containing an ARGB format pixel.
            </value>
            <param name="i">The buffer index.</param>
            <remarks>
            To access a pixel at position x,y you need to get pixels[wb.PixelWidth * y + x].
            </remarks>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Serialization.JsonSerialization">
            <summary>
            Extension and helper methods for serializing an object graph
            to JSON or loading one from a JSON file.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.JsonSerialization.SerializeAsJson``1(``0,System.String,Windows.Storage.StorageFolder,Windows.Storage.CreationCollisionOption)">
            <summary>
            Serializes the object graph as JSON and saves.
            </summary>
            <typeparam name="T">The type of the object graph reference.</typeparam>
            <param name="objectGraph">The object graph.</param>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder to save to.</param>
            <param name="options">
            The enum value that determines how responds if the fileName is the same
            as the name of an existing file in the current folder.
            </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.JsonSerialization.SerializeAsJson``1(``0)">
            <summary>
            Serializes the object graph as json.
            </summary>
            <typeparam name="T">The type of the object graph reference.</typeparam>
            <param name="graph">The object graph.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.JsonSerialization.LoadFromJsonFile``1(System.String,Windows.Storage.StorageFolder)">
            <summary>
            Loads an object graph from a JSON file.
            </summary>
            <typeparam name="T">The type of the expected object graph reference.</typeparam>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.JsonSerialization.LoadFromJsonString``1(System.String)">
            <summary>
            Loads an object graph from a JSON string.
            </summary>
            <typeparam name="T">The type of the expected object graph reference.</typeparam>
            <param name="json">The JSON string.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapFromBitmapImageExtension">
            <summary>
            WriteableBitmap extensions for creating or populating a WriteableBitmap from a BitmapImage (or rather the source Uri of the image).
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFromBitmapImageExtension.FromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage)">
            <summary>
            Creates a new WriteableBitmap from the source URI of the given BitmapImage.
            </summary>
            <param name="source">The source BitmapImage.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFromBitmapImageExtension.FromBitmapImage(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.UI.Xaml.Media.Imaging.BitmapImage)">
            <summary>
            Loads the WriteableBitmap from the source URI of the given BitmapImage
            </summary>
            <param name="target">The target WriteableBitmap.</param>
            <param name="source">The source BitmapImage.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFromBitmapImageExtension.FromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage,System.UInt32,System.UInt32)">
            <summary>
            Creates a new WriteableBitmap from the source URI of the given BitmapImage.
            </summary>
            <param name="source">The source BitmapImage.</param>
            <param name="decodePixelWidth">Width to decode to.</param>
            <param name="decodePixelHeight">Height to decode to.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFromBitmapImageExtension.FromBitmapImage(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.UI.Xaml.Media.Imaging.BitmapImage,System.UInt32,System.UInt32)">
            <summary>
            Loads the WriteableBitmap from the source URI of the given BitmapImage
            </summary>
            <param name="target">The target WriteableBitmap.</param>
            <param name="source">The source BitmapImage.</param>
            <param name="decodePixelWidth">Width to decode to.</param>
            <param name="decodePixelHeight">Height to decode to.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapLightenExtension">
            <summary>
            WriteableBitmap extensions to make the image brighter.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLightenExtension.Lighten(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Lightens the specified bitmap.
            </summary>
            <param name="target">The target bitmap.</param>
            <param name="amount">The 0..1 range amount to lighten by where 0 does not affect the bitmap and 1 makes the bitmap completely white.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions">
            <summary>
            Contains extension and helper methods for loading WriteableBitmaps.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(System.String)">
            <summary>
            Loads the WriteableBitmap asynchronously given the path relative to the installation folder.
            </summary>
            <param name="relativePath">The relative path.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(System.String,System.UInt32,System.UInt32)">
            <summary>
            Loads the WriteableBitmap asynchronously given the path relative to the installation folder and the dimensions.
            </summary>
            <param name="relativePath">The relative path.</param>
            <param name="decodePixelWidth">Width in pixels of the decoded bitmap.</param>
            <param name="decodePixelHeight">Height in pixels of the decoded bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.Storage.StorageFile)">
            <summary>
            Loads the WriteableBitmap asynchronously given the storage file.
            </summary>
            <param name="storageFile">The storage file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.Storage.StorageFile,System.UInt32,System.UInt32)">
            <summary>
            Loads the WriteableBitmap asynchronously given the storage file and the dimensions.
            </summary>
            <param name="storageFile">The storage file.</param>
            <param name="decodePixelWidth">Width in pixels of the decoded bitmap.</param>
            <param name="decodePixelHeight">Height in pixels of the decoded bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.String)">
            <summary>
            Loads the WriteableBitmap asynchronously given the storage file and the dimensions.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="relativePath">The relative path.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.StorageFile)">
            <summary>
            Loads the WriteableBitmap asynchronously given the storage file.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="storageFile">The storage file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.StorageFile,System.UInt32,System.UInt32)">
            <summary>
            Loads the WriteableBitmap asynchronously given the storage file and the dimensions.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="storageFile">The storage file.</param>
            <param name="decodePixelWidth">Width in pixels of the decoded bitmap.</param>
            <param name="decodePixelHeight">Height in pixels of the decoded bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.LoadAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.String,System.UInt32,System.UInt32)">
            <summary>
            Loads the WriteableBitmap asynchronously given the file path relative to install location and the dimensions.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="relativePath">The relative path.</param>
            <param name="decodePixelWidth">Width in pixels of the decoded bitmap.</param>
            <param name="decodePixelHeight">Height in pixels of the decoded bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapLoadExtensions.SetSourceAsync(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.Streams.IRandomAccessStream,System.UInt32,System.UInt32)">
            <summary>
            Sets the WriteableBitmap source asynchronously given a stream and dimensions.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="streamSource">The stream source.</param>
            <param name="decodePixelWidth">Width in pixels of the decoded bitmap.</param>
            <param name="decodePixelHeight">Height in pixels of the decoded bitmap.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.ScaledImageFile">
            <summary>
            Contains a helper method for getting a file with the applicable scale qualifier.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.ScaledImageFile.Get(System.String)">
            <summary>
            Used to retrieve a StorageFile that uses qualifiers in the naming convention.
            </summary>
            <param name="relativePath"></param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Extensions.StorageFileExtensions">
            <summary>
            Extension methods for StorageFile.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFileExtensions.GetSize(Windows.Storage.StorageFile)">
            <summary>
            Gets the file size in bytes.
            </summary>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFileExtensions.GetSizeString(System.Int64)">
            <summary>
            Gets the file size string given size in bytes.
            </summary>
            <param name="sizeInB">The size in B.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFileExtensions.GetSizeString(System.UInt64)">
            <summary>
            Gets the file size string given size in bytes.
            </summary>
            <param name="sizeInB">The size in B.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions">
            <summary>
            Extension methods for the StorageFolder class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.ContainsFileAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Returns true if a file exists at a given path relative to the given folder.
            </summary>
            <param name="folder">Starting folder.</param>
            <param name="relativePath">Relative path.</param>
            <returns>True if file exists. False - otherwise.</returns>
            <remarks>
            NOTE: Even if the files with the given name only match the resource key - it will return true.
            I.e. if relative path points to Logo.png, but there is only Logo.scale-100.png - the method will still return true.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.GetFileByPathAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Returns the StorageFile object for a file at a given path relative to the given folder.
            </summary>
            <param name="folder"></param>
            <param name="relativePath"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.CreateTempFileNameAsync(Windows.Storage.StorageFolder,System.String,System.String,System.String)">
            <summary>
            Creates a unique file name given the parameters.
            Note the theoretical race condition since
            the file name is only guaranteed to be unique at the point it is generated.
            </summary>
            <param name="folder"></param>
            <param name="extension"></param>
            <param name="prefix"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.CreateTempFileAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Creates a temporary file.
            </summary>
            <param name="folder"></param>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.DeleteFilesAsync(Windows.Storage.StorageFolder,System.Boolean)">
            <summary>
            Deletes all files from the given folder.
            </summary>
            <param name="folder"></param>
            <param name="ignoreExceptions">If true - all exceptions will be swallowed. Otherwise - they will be rethrown.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.ContainsFolderAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Returns true if a folder contains another folder with the given name
            </summary>
            <param name="folder"></param>
            <param name="name"></param>
            <returns>True if the folder contains the folder with given name. False - otherwise</returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StorageFolderExtensions.EnsureFolderExistsAsync(Windows.Storage.StorageFolder,System.String)">
            <summary>
            Ensures that a folder with given name exists in given folder
            </summary>
            <param name="folder"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Extensions.StringIOExtensions">
            <summary>
            Extensions for simple writing and reading of strings to/from files.
            </summary>
            <remarks>
            Note that these were created before FileIO class existed in WinRT, but they still serve a purpose.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StringIOExtensions.ReadFromFile(System.String,Windows.Storage.StorageFolder)">
            <summary>
            Reads a string from a text file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.StringIOExtensions.WriteToFile(System.String,System.String,Windows.Storage.StorageFolder,Windows.Storage.CreationCollisionOption)">
            <summary>
            Writes a string to a text file.
            </summary>
            <param name="text">The text to write.</param>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <param name="options">
            The enum value that determines how responds if the fileName is the same
            as the name of an existing file in the current folder. Defaults to ReplaceExisting.
            </param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Extensions.FileNameMimeContentConversion">
            <summary>
            Helpers for file name to MIME content type conversion.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Extensions.FileNameMimeContentConversion.GetMimeContentTypeFromFileName(System.String)">
            <summary>
            Gets the MIME content type based on file name.
            </summary>
            <remarks>
            Consider doing this instead if you are already opening the file:<br/>
            var fs = await folder.GetFileAsync(fileName);<br/>
            var contentType = fs.ContentType;
            </remarks>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapBlitBlockExtensions">
            <summary>
            WriteableBitmap extensions for blitting.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapBlitBlockExtensions.BlitBlock(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Blits a vertical block of a source bitmap to a target bitmap of same width.
            </summary>
            <param name="target">The target.</param>
            <param name="targetVerticalOffset">The target vertical offset.</param>
            <param name="source">The source.</param>
            <param name="sourceVerticalOffset">The source vertical offset.</param>
            <param name="verticalBlockHeight">Height of the vertical block.</param>
            <param name="autoInvalidate">if set to <c>true</c> the bitmap will auto invalidate.</param>
            <exception cref="T:System.ArgumentException">BlitBlock only supports copying blocks of pixels between bitmaps of equal size.;source</exception>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapCopyExtensions">
            <summary>
            Extension methods for WriteableBitmap to copy pixels from a source bitmap.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapCopyExtensions.Copy(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)">
            <summary>
            Copies the specified source bitmap into a new bitmap.
            </summary>
            <param name="source">The source bitmap.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapCropExtensions">
            <summary>
            Contains extension methods for cropping a bitmap.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapCropExtensions.Crop(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crops the bitmap and returns a new bitmap from the specified rectangle of the source bitmap.
            </summary>
            <param name="source">The bitmap to crop.</param>
            <param name="x1">x coordinate of the top left corner.</param>
            <param name="y1">y coordinate ot the top left corner.</param>
            <param name="x2">x coordinate of the bottom right corner.</param>
            <param name="y2">y coordinate of the bottom right corner.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions">
            <summary>
            WriteableBitmap extensions for filling regions of the bitmap with flood fill and similar algorithms.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions.FloodFill(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills a region of the bitmap within an outline
            of <paramref name="outlineColor"/>
            with a <paramref name="fillColor"/>.
            </summary>
            <remarks>
            This is the most simple flood fill algorithm implementation.
            Not the most efficient.
            </remarks>
            <param name="target">Bitmap to fill.</param>
            <param name="x">X coordinate of the fill seed point.</param>
            <param name="y">Y coordinate of the fill seed point.</param>
            <param name="outlineColor">Color of the outline.</param>
            <param name="fillColor">New color.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions.FloodFillReplace(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills a region of the bitmap replacing
            the <paramref name="oldColor"/>
            with a <paramref name="fillColor"/>.
            </summary>
            <remarks>
            This is the most simple flood fill algorithm implementation.
            Not the most efficient.
            </remarks>
            <param name="target">Bitmap to fill.</param>
            <param name="x">X coordinate of the fill seed point.</param>
            <param name="y">Y coordinate of the fill seed point.</param>
            <param name="oldColor">Old color to replace.</param>
            <param name="fillColor">New color.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions.FloodFillScanline(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills a region of the bitmap within an outline
            of <paramref name="outlineColor"/>
            with a <paramref name="fillColor"/>.
            </summary>
            <remarks>
            This is the most simple flood fill algorithm implementation.
            Not the most efficient.
            </remarks>
            <param name="target">Bitmap to fill.</param>
            <param name="x">X coordinate of the fill seed point.</param>
            <param name="y">Y coordinate of the fill seed point.</param>
            <param name="outlineColor">Color of the outline.</param>
            <param name="fillColor">New color.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions.FloodFillScanlineReplace(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills a region of the bitmap replacing
            the <paramref name="oldColor"/>
            with a <paramref name="fillColor"/>.
            </summary>
            <remarks>
            Improves upon the basic algorithm being about 7x faster.
            </remarks>
            <param name="target">Bitmap to fill.</param>
            <param name="x">X coordinate of the fill seed point.</param>
            <param name="y">Y coordinate of the fill seed point.</param>
            <param name="oldColor">Old color to replace.</param>
            <param name="fillColor">New color.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapFloodFillExtensions.FloodFillScanlineReplace(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte)">
            <summary>
            Fills a region of the bitmap replacing
            the <paramref name="oldColor"/>
            with a <paramref name="fillColor"/>.
            </summary>
            <remarks>
            Improves upon the basic algorithm being about 7x faster.
            </remarks>
            <param name="target">Bitmap to fill.</param>
            <param name="x">X coordinate of the fill seed point.</param>
            <param name="y">Y coordinate of the fill seed point.</param>
            <param name="oldColor">Old color to replace.</param>
            <param name="fillColor">New color.</param>
            <param name="maxDiff">Max differenve between old color and other colors that will be filled too.</param>
        </member>
        <member name="T:WinRTXamlToolkit.Imaging.WriteableBitmapSaveExtensions">
            <summary>
            Extension methods used for saving a WriteableBitmap to a file.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapSaveExtensions.SaveToFile(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)">
            <summary>
            Saves the WriteableBitmap to a png file with a unique file name.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <returns>The file the bitmap was saved to.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapSaveExtensions.SaveToFile(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.StorageFolder)">
            <summary>
            Saves the WriteableBitmap to a png file in the given folder with a unique file name.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="storageFolder">The storage folder.</param>
            <returns>The file the bitmap was saved to.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapSaveExtensions.SaveToFile(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.StorageFolder,System.String,Windows.Storage.CreationCollisionOption)">
            <summary>
            Saves the WriteableBitmap to a file in the given folder with the given file name.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="storageFolder">The storage folder.</param>
            <param name="fileName">Name of the file.</param>
            <param name="options">
            The enum value that determines how responds if the fileName is the same
            as the name of an existing file in the current folder. Defaults to ReplaceExisting.
            </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Imaging.WriteableBitmapSaveExtensions.SaveToFile(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Windows.Storage.StorageFile,System.Guid)">
            <summary>
            Saves the WriteableBitmap to the given file with the specified BitmapEncoder ID.
            </summary>
            <param name="writeableBitmap">The writeable bitmap.</param>
            <param name="outputFile">The output file.</param>
            <param name="encoderId">The encoder id.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.IO.Serialization.XmlSerialization">
            <summary>
            XML serialization helpers
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.SerializeAsXmlDataContract``1(``0,System.String,Windows.Storage.StorageFolder,Windows.Storage.CreationCollisionOption)">
            <summary>
            Serializes the object graph as XML using DataContractSerializer and writes it to a file.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectGraph">The object graph.</param>
            <param name="fileName">Name of the file to write to.</param>
            <param name="folder">The folder to put the file in.</param>
            <param name="options">
            The enum value that determines how responds if the fileName is the same
            as the name of an existing file in the current folder. Defaults to FailIfExists.
            </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.SerializeAsXmlDataContract``1(``0)">
            <summary>
            Serializes the object graph as XML using DataContractSerializer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectGraph">The object graph.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.LoadFromXmlDataContractFile``1(System.String,Windows.Storage.StorageFolder)">
            <summary>
            Loads object graph from XML file serialized using DataContractSerializer.
            </summary>
            <typeparam name="T">The type of the returned object graph reference.</typeparam>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <returns>Object graph reference.</returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.SerializeAsXml``1(``0,System.String,Windows.Storage.StorageFolder,Windows.Storage.CreationCollisionOption)">
            <summary>
            Serializes the object graph as XML using XmlSerializer and writes it to a file.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectGraph">The object graph.</param>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <param name="options">
            The enum value that determines how responds if the fileName is the same
            as the name of an existing file in the current folder. Defaults to FailIfExists.
            </param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.SerializeAsXml``1(``0)">
            <summary>
            Serializes the object graph as XML using XmlSerializer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectGraph">The object graph.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.IO.Serialization.XmlSerialization.LoadFromXmlFile``1(System.String,Windows.Storage.StorageFolder)">
            <summary>
            Loads an object graph from XML file serialized using XmlSerializer.
            </summary>
            <typeparam name="T">Type of the returned object graph reference.</typeparam>
            <param name="fileName">Name of the file.</param>
            <param name="folder">The folder.</param>
            <returns>Object graph reference.</returns>
        </member>
        <member name="T:WinRTXamlToolkit.Net.WebFile">
            <summary>
            Contains a helper method for downloading a file from a web uri.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Net.WebFile.SaveAsync(System.Uri,Windows.Storage.StorageFolder,System.String,Windows.Storage.NameCollisionOption)">
            <summary>
            Downloads a file from the specified address and returns the file.
            </summary>
            <param name="fileUri">The URI of the file.</param>
            <param name="folder">The folder to save the file to.</param>
            <param name="fileName">The file name to save the file as.</param>
            <param name="option">
            A value that indicates what to do
            if the filename already exists in the current folder.
            </param>
            <remarks>
            If no file name is given - the method will try to find
            the suggested file name in the HTTP response
            based on the Content-Disposition HTTP header.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Tools.BackgroundTimer">
            <summary>
            A timer that raises the Tick events on a background thread,
            similar to ThreadPoolTimer, but with API compatible with
            DispatcherTimer.
            </summary>
            <remarks>
            It was written in response to this SO question: Controlled non UI timer in metro app (.NET)
            (http://stackoverflow.com/questions/10493253/controlled-non-ui-timer-in-metro-app-net).
            The purpose was to have ticks on a background thread and have
            the same API as the DispatcherTimer. It also has an option to self adjust a bit
            to have an average frequency closer to what you would expect given the configured Interval.
            That said I was not aware of the ThreadPoolTimer,
            so it is possible it makes more sense to use that one.
            It is a bit strange that the two timers we get have different APIs though,
            so perhaps that is one case where using the BackgroundTimer makes a little bit of sense.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.BackgroundTimer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Tools.BackgroundTimer"/> class.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.BackgroundTimer.Start">
            <summary>
            Starts the BackgroundTimer.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.BackgroundTimer.Stop">
            <summary>
            Stops the BackgroundTimer. Waits for it to stop before returning.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.BackgroundTimer.StopNonBlocking">
            <summary>
            Stops the BackgroundTimer - non blocking.
            </summary>
        </member>
        <member name="E:WinRTXamlToolkit.Tools.BackgroundTimer.Tick">
            <summary>
            Occurs when the timer interval has elapsed.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.BackgroundTimer.Interval">
            <summary>
            Gets or sets the period of time between timer ticks.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.BackgroundTimer.AdjustDelays">
            <summary>
            Gets or sets a value indicating whether delays between Tick events should be adjusted to
            have Tick intervals averaging the given Interval property
            instead of being minimum of Interval property value.
            </summary>
            <value>
              <c>true</c> if delays should be adjusted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.BackgroundTimer.IsEnabled">
            <summary>
            Gets or sets a value that indicates whether the timer is running.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions">
            <summary>
            Extension methods for DependencyObjects
            used for walking the visual tree with
            LINQ expressions.
            These simplify using VisualTreeHelper to one line calls.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetFirstDescendantOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the first descendant that is of the given type.
            </summary>
            <remarks>
            Returns null if not found.
            </remarks>
            <typeparam name="T">Type of descendant to look for.</typeparam>
            <param name="start">The start object.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetDescendantsOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the descendants of the given type.
            </summary>
            <typeparam name="T">Type of descendants to return.</typeparam>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetDescendants(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the descendants.
            </summary>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetChildren(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the child elements.
            </summary>
            <param name="parent">The parent element.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetChildrenByZIndex(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the child elements sorted in render order (by ZIndex first, declaration order second).
            </summary>
            <param name="parent">The parent element.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetFirstAncestorOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the first ancestor that is of the given type.
            </summary>
            <remarks>
            Returns null if not found.
            </remarks>
            <typeparam name="T">Type of ancestor to look for.</typeparam>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetAncestorsOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the the ancestors of a given type.
            </summary>
            <typeparam name="T">Type of ancestor to look for.</typeparam>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetAncestors(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the ancestors.
            </summary>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.IsInVisualTree(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Determines whether the specified DependencyObject is in visual tree.
            </summary>
            <remarks>
            Note that this might not work as expected if the object is in a popup.
            </remarks>
            <param name="dob">The DependencyObject.</param>
            <returns>
              <c>true</c> if the specified dob is in visual tree ; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WinRTXamlToolkit.Controls.Extensions.VisualTreeHelperExtensions.GetBoundingRect(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Gets the bounding rectangle of a given element
            relative to a given other element or visual root
            if relativeTo is null or not specified.
            </summary>
            <param name="dob">The starting element.</param>
            <param name="relativeTo">The relative to element.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Element not in visual tree.</exception>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Non-optimized method that shuffles the specified list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="T:WinRTXamlToolkit.Tools.TimeoutCheck">
            <summary>
            Allows to mark a specific async block as one that can time out.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TimeoutCheck.#ctor(System.Object,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WinRTXamlToolkit.Tools.TimeoutCheck"/> class.
            </summary>
            <param name="subject">The subject.</param>
            <param name="timeoutInMilliseconds">The timeout in milliseconds.</param>
            <param name="autoStart">if set to <c>true</c> - timeout check will start automatically.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TimeoutCheck.Start">
            <summary>
            Starts a timeout check.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TimeoutCheck.Stop">
            <summary>
            Stops the timeout check.
            </summary>
            <remarks>
            Typically called when an awaited operation completes before the timeout.
            </remarks>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TimeoutCheck.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.ThrowOnTimeout">
            <summary>
            Gets or sets a value indicating whether a TimeoutException
            should be thrown when timeout occurs.
            </summary>
            <value>
              <c>true</c> if TimeoutException should be thrown on timeout; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.BreakOnTimeout">
            <summary>
            Gets or sets a value indicating whether execution should break when timeout occurs.
            </summary>
            <value>
              <c>true</c> if debugger should break on timeout; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.AttachOnTimeout">
            <summary>
            Gets or sets a value indicating whether debugger should get attached and break when timeout occurs.
            </summary>
            <value>
              <c>true</c> if debugger should get atteched on timeout; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.DebugOnly">
            <summary>
            If true - in release build configuration only the Timeout event will be raised when timeout occurs.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.Subject">
            <summary>
            Gets or sets the subject of the timeout to use in reporting the timeout itself.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="E:WinRTXamlToolkit.Tools.TimeoutCheck.Timeout">
            <summary>
            Occurs when timeout occurs.
            </summary>
        </member>
        <member name="P:WinRTXamlToolkit.Tools.TimeoutCheck.Interval">
            <summary>
            Gets or sets timeout interval.
            </summary>
            <value>
            The timeout interval.
            </value>
        </member>
        <member name="T:WinRTXamlToolkit.Tools.TryCatchRetry">
            <summary>
            Helper methods for running a specified action or task multiple times ignoring exceptions,
            until a retry count is reached.
            </summary>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TryCatchRetry.Run``1(System.Action,System.Int32,System.Boolean)">
            <summary>
            Runs the specified action until it succeeds or max number of retries is reached.
            </summary>
            <typeparam name="T">Type of expected exception.</typeparam>
            <param name="action">The action.</param>
            <param name="retries">The number of retries.</param>
            <param name="throwOnFail">if set to <c>true</c> - throws upon reaching the given max number of retries.</param>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TryCatchRetry.RunWithDelayAsync``1(System.Threading.Tasks.Task,System.TimeSpan,System.Int32,System.Boolean)">
            <summary>
            Runs the specified task until it succeeds or max number of retries is reached,
            with a delay in between retries.
            </summary>
            <typeparam name="T">Type of expected exception.</typeparam>
            <param name="task">The task.</param>
            <param name="delay">The delay.</param>
            <param name="retries">The number of retries.</param>
            <param name="throwOnFail">if set to <c>true</c> - throws upon reaching the given max number of retries.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TryCatchRetry.RunWithDelayAsync``2(System.Threading.Tasks.Task{``1},System.TimeSpan,System.Int32,System.Boolean)">
            <summary>
            Runs the specified task until it succeeds or max number of retries is reached,
            with a delay in between retries and specific return type.
            </summary>
            <typeparam name="TException">Type of expected exception.</typeparam>
            <typeparam name="TResult">Returned result type.</typeparam>
            <param name="task">The task.</param>
            <param name="delay">The delay.</param>
            <param name="retries">The number of retries.</param>
            <param name="throwOnFail">if set to <c>true</c> - throws upon reaching the given max number of retries.</param>
            <returns></returns>
        </member>
        <member name="M:WinRTXamlToolkit.Tools.TryCatchRetry.RunWithDelayAsync``2(Windows.Foundation.IAsyncOperation{``1},System.TimeSpan,System.Int32,System.Boolean)">
            <summary>
            Runs the specified operation until it succeeds or max number of retries is reached,
            with a delay in between retries and specific return type.
            </summary>
            <typeparam name="TException">Type of expected exception.</typeparam>
            <typeparam name="TResult">Returned result type.</typeparam>
            <param name="operation">The operation.</param>
            <param name="delay">The delay.</param>
            <param name="retries">The number of retries.</param>
            <param name="throwOnFail">if set to <c>true</c> - throws upon reaching the given max number of retries.</param>
            <returns></returns>
        </member>
    </members>
</doc>
