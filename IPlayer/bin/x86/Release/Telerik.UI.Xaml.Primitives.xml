<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.UI.Xaml.Primitives</name>
    </assembly>
    <members>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1">
            <summary>
            Represents an object that is attached to an owning object.
            </summary>
            <typeparam name="T">The type that owns this object.</typeparam>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadDependencyObject">
            <summary>
            Represents an extended <see cref="T:Windows.UI.Xaml.DependencyObject"/> that recognizes whether a property is changed internally within the class or programmatically by the user.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1"/> class.
            </summary>
            <param name="owner">The object instance that owns this one.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1.OnDetached(`0)">
            <summary>
            Performs the core logic behind the Detach routine. Allows inheritors to provide additional implementation.
            </summary>
            <param name="previousOwner"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1.OnAttached">
            <summary>
            Performs the core logic behind the Attach routine. Allows inheritors to provide additional implementation.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1.Owner">
            <summary>
            Gets the object instance that owns this service.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2">
            <summary>
            Represents a collection of <see cref="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObject`1"/> instances.
            </summary>
            <typeparam name="TOwner">Specifies the type of the owner of the items.</typeparam>
            <typeparam name="TObject">Specifies the type of the attachable objects.</typeparam>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2.SetItem(System.Int32,`1)">
            <summary>
            Sets the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.AttachableObjectCollection`2.ClearItems">
            <summary>
            Clears the items.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.StringCaseConverter">
            <summary>
            Represents a converter that changes the letter case of the provided System.String value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.StringCaseConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.StringCaseConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.StringCaseConverter.CaseMode">
            <summary>
            Gets or sets the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.StringCaseMode"/> value that specifies which letter case to be used.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.StringCaseMode">
            <summary>
            Defines the possible casing modes to be applied over a System.String object.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.StringCaseMode.Default">
            <summary>
            No casing is applied - the string is left in its original form.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.StringCaseMode.ToUpper">
            <summary>
            All characters are converted to upper case.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.StringCaseMode.ToLower">
            <summary>
            All characters are converted to lower case.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.INoDesiredSizeControl">
            <summary>
            Represents a component that does not have a desired size - such as RadChart.
            In this case the entire UI update happens in the Arrange pass and virtualizing components like RadDataGrid need an entry point to invalidate control's current state.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1">
            <summary>
            Represents an attachable object, that handles Input events from the owning control instance.
            </summary>
            <typeparam name="T">The type of the object this behavior can be attached to. Minimum requirement is the <see cref="T:Telerik.UI.Xaml.Controls.RadControl"/> type.</typeparam>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerEntered"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerMoved"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerExited"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerPressed"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnHoldCompleted(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.HoldCompleted"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnHoldStarted(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.HoldStarted"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.Tapped"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.DoubleTapped"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.ManipulationStarted"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.ManipulationDelta"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.ManipulationCompleted"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerWheelChanged"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the <see cref="E:{T}.PointerReleased"/> event of the owning instance.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnLoaded">
            <summary>
            Called when the owning instance is loaded in the visual tree.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InputBehavior`1.OnUnloaded">
            <summary>
            Called when the owning instance is unloaded from the visual tree.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.RadHeaderedContentControl">
            <summary>
            Defines a <see cref="T:Telerik.UI.Xaml.Controls.RadContentControl"/> class that adds notation for a header.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.RadContentControl">
            <summary>
            Represents an abstract class that declares the Content and ContentTemplate property.
            It is abstract as it does not define a ControlTemplate.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.RadControl">
            <summary>
            Defines the base class for all Telerik-specific controls. Encapsulates common routines and properties.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.RadControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.BeginVisualStateUpdate">
            <summary>
            Locks any visual state update. Useful when performing batch operations.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.EndVisualStateUpdate(System.Boolean,System.Boolean)">
            <summary>
            Resumes visual state update and optionally re-evaluates the current visual state.
            </summary>
            <param name="update">True to re-evaluate the current visual state, false otherwise.</param>
            <param name="animate">True to use animations when updating visual state, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.CanUpdateVisualState">
            <summary>
            Determines whether the current visual state may be updated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Called in the measure layout pass to determine the desired size.
            </summary>
            <param name="availableSize">The available size that was given by the layout system.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Arrange pass of layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.UnapplyTemplateCore">
            <summary>
            Unapplies the current control template. Occurs when a template has already been applied and a new one is applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.OnIsEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when isEnabled property is changed.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.ApplyTemplateCore">
            <summary>
            Called when the Framework <see cref="M:OnApplyTemplate"/> is called. Inheritors should override this method should they have some custom template-related logic.
            This is done to ensure that the <see cref="P:IsTemplateApplied"/> property is properly initialized.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.LoadCore">
            <summary>
            Called within the handler of the <see cref="E:Loaded"/> event. Allows inheritors to provide their specific logic.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.RadControl.UnloadCore">
            <summary>
            Called within the handler of the <see cref="E:Unloaded"/> event. Allows inheritors to provide their specific logic.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadControl.CurrentVisualState">
            <summary>
            Gets the current visual state of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadControl.IsLoaded">
            <summary>
            Determines whether the <see cref="E:Loaded"/> event is handled and the <see cref="M:Telerik.UI.Xaml.Controls.RadControl.LoadCore"/> routine is passed.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadControl.IsLoading">
            <summary>
            Determines whether the control is currently in a process of being loaded on the visual tree. 
            This flag indicates that currently the LoadCore routine is executed and the control is still not completely loaded.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadControl.IsUnloaded">
            <summary>
            Determines whether the Unloaded event has been received.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadControl.IsTemplateApplied">
            <summary>
            Determines whether the <see cref="M:Telerik.UI.Xaml.Controls.RadControl.OnApplyTemplate"/> method and the <see cref="M:Telerik.UI.Xaml.Controls.RadControl.ApplyTemplateCore"/> routine is passed.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadContentControl.ContentProperty">
            <summary>
            Specifies the <see cref="P:Telerik.UI.Xaml.Controls.RadContentControl.Content"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadContentControl.ContentTemplateProperty">
            <summary>
            Specifies the <see cref="P:Telerik.UI.Xaml.Controls.RadContentControl.ContentTemplate"/> property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadContentControl.Content">
            <summary>
            Gets or sets the content presented by the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadContentControl.ContentTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that is used to visualize the current <see cref="P:Content"/>
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderStyle"/> property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.Header">
            <summary>
            Gets or sets the object that represents the header content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the header.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedContentControl.HeaderStyle">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.Style"/> object that defines the appearance of the Header part of the Control.
            Typically that part will be represented by a <see cref="T:Windows.UI.Xaml.Controls.ContentControl"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.RadHeaderedControl">
            <summary>
            Represents an extended <see cref="T:Telerik.UI.Xaml.Controls.RadControl"/> class that adds the "Header" notation.
            Typically header is considered a label on top of the control that hints for the control's purpose in the UI.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderStyleProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderStyle"/> property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.Header">
            <summary>
            Gets or sets the object that represents the header content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the header.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.RadHeaderedControl.HeaderStyle">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.Style"/> object that defines the appearance of the Header part of the Control.
            Typically that part will be represented by a <see cref="T:Windows.UI.Xaml.Controls.ContentControl"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.TemplateNotAppliedException">
            <summary>
            Represents an exception raised when a control was unable to load its template correctly.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.TemplateNotAppliedException.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.TemplateNotAppliedException"/> class.
            </summary>
            <param name="type">The type of the control failed to load template.</param>
            <param name="defaultStyleKey">The DefaultStyleKey of control failed to load template.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.TemplateNotAppliedException.ControlType">
            <summary>
            Gets the type of control failed to load template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.TemplateNotAppliedException.ControlStyleKey">
            <summary>
            Gets the DefaultStyleKey of control failed to load template.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.FindVisualAncestor``1(Windows.UI.Xaml.DependencyObject,System.Predicate{Windows.UI.Xaml.DependencyObject})">
            <summary>
            Finds a visual ancestor from a given type and based on a given
            condition that is in the parent chain of a given child element.
            </summary>
            <typeparam name="T">The type of the element to look for.</typeparam>
            <param name="child">The child.</param>
            <param name="condition">The condition.</param>
            <returns>An instance of the given type if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.FindLastVisualAncestor``1(Windows.UI.Xaml.DependencyObject,System.Predicate{Windows.UI.Xaml.DependencyObject})">
            <summary>
            Finds the last visual ancestor of the provided type.
            </summary>
            <typeparam name="T">The type of the ancestor to search for.</typeparam>
            <param name="child">The from which to start the search.</param>
            <param name="condition">A condition to test each ancestor of the T type.</param>
            <returns>The last ancestor of the specified T type which matches the condition.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.FindVisualDescendant``1(Windows.UI.Xaml.DependencyObject,System.Predicate{Windows.UI.Xaml.DependencyObject})">
            <summary>
            Finds a visual descendant from a given type and based on a given
            condition that is in the hierarchy of a given parent element.
            </summary>
            <typeparam name="T">The type of the element to look for.</typeparam>
            <param name="parent">The parent.</param>
            <param name="condition">The condition.</param>
            <returns>An instance of the given type if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.EnumVisualDescendants``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Returns a lazily evaluated iterator that allows linear iteration over a tree of DependencyObjects.
            </summary>
            <param name="parent">The root element of the tree to iterate over.</param>
            <returns>
            Returns a lazily evaluated iterator that allows linear iteration
            over a tree of DependencyObjects.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.EnumVisualDescendants(Windows.UI.Xaml.DependencyObject,System.Predicate{Windows.UI.Xaml.DependencyObject},Telerik.UI.Xaml.Controls.TreeTraversalMode)">
            <summary>
            Returns a lazily evaluated iterator that allows linear iteration
            over a tree of DependencyObjects.
            </summary>
            <param name="parent">The root element of the tree to iterate over.</param>
            <param name="condition">A predicate to filter what elements are returned.</param>
            <param name="mode">The tree traversal mode of the iteration algorithm.</param>
            <returns>
            Returns a lazily evaluated iterator that allows linear iteration
            over a tree of DependencyObjects.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.IsElementRendered(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Determines whether the specified element is rendered on the visual tree.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.SafeTransformPoint(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.FrameworkElement,Windows.Foundation.Point)">
            <summary>
            Transforms the specified point using the TransformToVisual routine while checking for valid transform conditions - e.g. elements are both loaded and rendered.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.SafeTransformBounds(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.FrameworkElement,Windows.Foundation.Rect)">
            <summary>
            Transforms the specified rect using the TransformToVisual routine while checking for valid transform conditions - e.g. elements are both loaded and rendered.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.ElementTreeHelper.IsParentChainHitTestVisible(Windows.UI.Xaml.UIElement)">
            <summary>
            Determines whether all the ancestors of the specified <see cref="T:Windows.UI.Xaml.UIElement"/> instance are hit-test visible.
            </summary>
            <param name="element">The element to start from.</param>
            <returns>True if all the ancestors are hit-test visible, false otherwise.</returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.MissingTemplatePartException">
            <summary>
            Represents an exception raised when a template part, as defined by the template contract, is missing during template initialization.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.MissingTemplatePartException.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.MissingTemplatePartException"/> class.
            </summary>
            <param name="name">The name of the missing part.</param>
            <param name="type">The type of the missing part.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.MissingTemplatePartException.PartName">
            <summary>
            Gets the name of the missing part.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.MissingTemplatePartException.PartType">
            <summary>
            Gets the type of the missing part.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.TreeTraversalMode">
            <summary>
            Defines possible approaches when traversing a tree.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.TreeTraversalMode.DepthFirst">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.TreeTraversalMode.BreadthFirst">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart">
            <summary>
            Used in RadMosaicHubTile to display the small flipping images.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart">
            <summary>
            A small rectangle that has two sides and can flip between the two with a swivel animation.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.FrontContentProperty">
            <summary>
            Identifies the FrontContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.BackContentProperty">
            <summary>
            Identifies the FrontContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.FrontContentTemplateProperty">
            <summary>
            Identifies the FrontContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.BackContentTemplateProperty">
            <summary>
            Identifies the BackContentTemplate dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.Flip">
            <summary>
            Flips the tile to its other side.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.OnFrontContentChanged(System.Object,System.Object)">
            <summary>
            A virtual callback that is invoked when the FrontContent property changes.
            </summary>
            <param name="newContent">The new FrontContent.</param>
            <param name="oldContent">The old FrontContent.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.OnBackContentChanged(System.Object,System.Object)">
            <summary>
            A virtual callback that is invoked when the BackContent property changes.
            </summary>
            <param name="newContent">The new BackContent.</param>
            <param name="oldContent">The old BackContent.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.FrontContent">
            <summary>
            Gets or sets the content on the front side of the flip tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.BackContent">
            <summary>
            Gets or sets the content on the back side of the flip tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.FrontContentTemplate">
            <summary>
            Gets or sets the front content template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.BackContentTemplate">
            <summary>
            Gets or sets the back content template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.MosaicTilePart.IsInFrontState">
            <summary>
            Gets a value that determines if the flip tile is in its front state.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.#ctor">
            <summary>
            Initializes a new instance of the CustomMosaicTilePart class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.Flip(Windows.UI.Xaml.Media.ImageSource)">
            <summary>
            Flips the tile and displays the provided image on the new side.
            </summary>
            <param name="newSource">The new image.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.ApplyTemplateCore">
            <summary>
            Retrieves the ControlTemplate parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.ImagePartIndex">
            <summary>
            Determines which part of an image the tile is displaying if it is a part
            of a picture frame inside the mosaic hub tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.SizeFactor">
            <summary>
            This should be set to a factor of how much bigger the actual image is
            compared to this tile. 
            </summary>
            <remarks>
            For example if this tile is displaying one quarter
            of the whole image, the Size factor should be 2. If it is displaying one ninth
            of the whole image, the size factor should be 3.
            </remarks>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.CustomMosaicTilePart.IsContentDisplayed">
            <summary>
            Returns true if the tile is currently displaying an image and false
            otherwise.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.DoubleScaleConverter">
            <summary>
            Represents a custom <see cref="T:Windows.UI.Xaml.Data.IValueConverter"/> implementation that takes a double value and multiplies it by a given scale factor.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.DoubleScaleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.DoubleScaleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            ConvertBack is not a valid operation.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="language">The language.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">ConvertBack is not a valid operation for this converter.</exception>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.DoubleScaleConverter.Scale">
            <summary>
            Gets or sets the scale used to multiply the provided System.Double value.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl">
            <summary>
            Represents a control that has a front and back content and can go to either content through a Flip transition (that is a PlaneProjection animation).
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.FrontContentProperty">
            <summary>
            Identifies the FrontContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.BackContentProperty">
            <summary>
            Identifies the FrontContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.FrontContentTemplateProperty">
            <summary>
            Identifies the FrontContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.BackContentTemplateProperty">
            <summary>
            Identifies the BackContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.IsFlippedProperty">
            <summary>
            Identifies the IsFlipped dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.FrontContent">
            <summary>
            Gets or sets the content on the front side of the flip tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.BackContent">
            <summary>
            Gets or sets the content on the back side of the flip tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.FrontContentTemplate">
            <summary>
            Gets or sets the front content template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.BackContentTemplate">
            <summary>
            Gets or sets the back content template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.FlipControl.IsFlipped">
            <summary>
            Gets or sets the flip state of the control.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTileBase">
            <summary>
            Base class for all hub tiles.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.TitleTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.TitleTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UpdateIntervalProperty">
            <summary>
            Identifies the UpdateInterval dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.IsFrozenProperty">
            <summary>
            Identifies the IsFrozen dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.BackContentProperty">
            <summary>
            Identifies the BackContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.BackContentTemplateProperty">
            <summary>
            Identifies the BackContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.IsFlippedProperty">
            <summary>
            Identifies the IsFlipped dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.CommandParameterProperty">
            <summary>
            Identifies the CommandParameter dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.#ctor">
            <summary>
            Initializes a new instance of the HubTileBase class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.Finalize">
            <summary>
            Cleans up any used resources when the object is destroyed.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.ExecuteCommand">
            <summary>
            Performs the Command execution logic. Exposed for testing purposes.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.CallTimerTick">
            <summary>
            Calls the OnUpdateTimerTick method. Exposed for testing purposes.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.ApplyTemplateCore">
            <summary>
            Resolves the ControlTemplate parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Called before the <see cref="E:Tapped"/> event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.LoadCore">
            <summary>
            Called within the handler of the <see cref="E:Loaded"/> event. Allows inheritors to provide their specific logic.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UnloadCore">
            <summary>
            Called within the handler of the <see cref="E:Unloaded" /> event. Stops the update timer (if currently running).
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.Update">
            <summary>
            A virtual callback that is called periodically when the tile is not frozen. It can be used to
            update the tile visual states or other necessary operations.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.ResetTimer">
            <summary>
            A virtual method that resets the timer.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.OnBackContentChanged(System.Object,System.Object)">
            <summary>
            A virtual callback that is called when the BackContent property changes.
            </summary>
            <param name="newBackContent">The new BackContent value.</param>
            <param name="oldBackContent">The old BackContent value.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.OnBackStateActivated">
            <summary>
            This callback is invoked when BackContent is set to a non-null value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.OnBackStateDeactivated">
            <summary>
            This callback is invoked when BackContent is set to a null value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UpdateTimerState">
            <summary>
            Checks whether the timer should be running or stopped and updates it accordingly.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.IsFlipped">
            <summary>
            Gets or sets the flip state of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.Command">
            <summary>
            Gets or sets a command that will be executed when the hub tile is tapped.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.CommandParameter">
            <summary>
            Gets or sets the command parameter that will be passed to the command assigned to the Command property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.Title">
            <summary>
            Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.TitleTemplate">
            <summary>
            Gets or sets the DataTemplate that is used to visualize the Title property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.IsFrozen">
            <summary>
            Gets or sets the IsFrozen property. Freezing a hub tile means that it will cease to
            periodically update itself. For example when it is off-screen.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UpdateInterval">
            <summary>
            Gets or sets the UpdateInterval. This interval determines how often the tile will
            update its visual states when it is not frozen.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.BackContent">
            <summary>
            Gets or sets the back content of the tile. When the back content is set,
            the tile flips with a swivel animation to its back side and periodically
            flips between its back and front states.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.BackContentTemplate">
            <summary>
            Gets or sets the DataTemplate that is used to visualize the BackContent
            property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.UpdateTimer">
            <summary>
            Gets the timer internally used to perform the control's transitions. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.CanStartTimer">
            <summary>
            Determines whether the update timer can be started - meaning the control is completely loaded in the visual tree and not frozen.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.LayoutRoot">
            <summary>
            Gets the LayoutRoot of the control template.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.ShouldClip">
            <summary>
            Gets a value that determines whether a rectangle clip is set on the LayoutRoot.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTileBase.IsUpdateTimerNeeded">
            <summary>
            Determines whether the update timer used to update the tile's VisualState needs to be started.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.SlideTileExpandedState">
            <summary>
            Defines the Expanded State options for a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile"/>.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.SlideTileExpandedState.Normal">
            <summary>
            Normal, or neutral state.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.SlideTileExpandedState.SemiExpanded">
            <summary>
            Both of the contents are partially visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.SlideTileExpandedState.Expanded">
            <summary>
            Only the second content is visible.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.IImageSourceProvider">
            <summary>
            Represents a type that can resolve a parameter to an <see cref="T:Windows.UI.Xaml.Media.ImageSource"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.IImageSourceProvider.GetImageSource(System.Object)">
            <summary>
            Retrieves the <see cref="T:Windows.UI.Xaml.Media.ImageSource"/> instance from the specified parameter.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.MosaicFlipMode">
            <summary>
            Determines the flip modes of the RadMosaicHubTile.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.MosaicFlipMode.Individual">
            <summary>
            MosaicTiles flip individually.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.MosaicFlipMode.Row">
            <summary>
            A whole row of MosaicTiles flip together at a time.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile">
            <summary>
            An abstract class that provides a PictureNeeded event and a method to raise it.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PicturesSourceProperty">
            <summary>
            Identifies the PicturesSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PictureSourceProviderProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PictureSourceProvider"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.#ctor">
            <summary>
            Initializes a new instance of the PictureHubTile class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.GetRandomImageSource">
            <summary>
            Creates an ImageSource from a randomly chosen URI from the ImageSources collection and returns it.
            </summary>
            <returns>Returns an ImageSource with a randomly chosen URI from the ImageSources collection.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.GetNewIndex(System.Int32)">
            <summary>
            Should be overridden in descendant classes to generate the new index from the picture collection.
            </summary>
            <param name="count">The length of the collection.</param>
            <returns>Returns new index different from previous.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.IsNewIndexValid(System.Int32)">
            <summary>
            Should be overridden in descendant classes to indicate if the same image can be displayed.
            many times in a row.
            </summary>
            <param name="index">The index of the new image.</param>
            <returns>Returns true if the image can be repeated and false otherwise.</returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PictureSourceProvider">
            <summary>
            Gets or sets the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.IImageSourceProvider"/> implementation that is used to provide custom image source resolution routine.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PicturesSource">
            <summary>
            Gets or sets the source that contains all the pictures. Pictures are randomly chosen from this collection when an image needs to be displayed. 
            </summary>
            <remarks>
            To translate the objects from this collection to an actual ImageSource, use the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.PictureSourceProvider"/> property.
            If the objects are string uris or ImageSource instances, no translation is necessary.
            </remarks>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.PictureHubTile.IsUpdateTimerNeeded">
            <summary>
            Determines whether the update timer used to update the tile's VisualState needs to be started.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.PictureNeededEventArgs">
            <summary>
            Event arguments for RadPictureHubTile's PictureNeeded event.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.PictureNeededEventArgs.Source">
            <summary>
            Gets or sets the source of the picture.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile">
            <summary>
            Defines a hub tile with custom front and back contents and a swivel transition between them.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile.FrontContentProperty">
            <summary>
            Identifies the FrontContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile.FrontContentTemplateProperty">
            <summary>
            Identifies the FrontContentTemplate dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadCustomHubTile class.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile.FrontContent">
            <summary>
            Gets or sets the front content of the custom hub tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCustomHubTile.FrontContentTemplate">
            <summary>
            Gets or sets the front content template of the custom hub tile.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile">
            <summary>
            RadCycleHubTile can be bound a data source. Each item from the data source is displayed with a slide animation either randomly or in order as well as
            horizontally or vertically.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CycleRandomlyProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CycleRandomly"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CurrentItemProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CurrentItem"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadCycleHubTile class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.Update">
            <summary>
            A virtual callback that is called periodically when the tile is not frozen. It can be used to
            update the tile visual states or other necessary operations.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            A virtual method that is called when the ItemsSource property changes.
            </summary>
            <param name="newValue">The new property value.</param>
            <param name="oldValue">The old property value.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.OnBackStateActivated">
            <summary>
            This callback is invoked when BackContent is set to a non-null value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.OnBackStateDeactivated">
            <summary>
            This callback is invoked when BackContent is set to a null value.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemsSource">
            <summary>
            Gets or sets the data source of the cycle tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CurrentItem">
            <summary>
            Gets or sets the current item displayed by the tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ItemTemplate">
            <summary>
            Gets or sets the item template of the cycle tile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.Orientation">
            <summary>
            Gets or sets the orientation of the cycle animation.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.CycleRandomly">
            <summary>
            Gets or sets a value that determines if the items in the data source will be cycled randomly or not.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.ShouldClip">
            <summary>
            Gets a value that determines whether a rectangle clip is set on the LayoutRoot.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadCycleHubTile.IsUpdateTimerNeeded">
            <summary>
            Determines whether the update timer used to update the tile's VisualState needs to be started.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadHubTile">
            <summary>
            Defines a standard tile with a picture, title, message and notification count. Similar to Mail, Messaging or Internet Explorer.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.ImageSourceProperty">
            <summary>
            Identifies the ImageSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.MessageProperty">
            <summary>
            Identifies the Message dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.MessageTemplateProperty">
            <summary>
            Identifies the MessageTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.NotificationProperty">
            <summary>
            Identifies the Notification dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.NotificationTemplateProperty">
            <summary>
            Identifies the NotificationTemplate dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadHubTile class.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.ImageSource">
            <summary>
            Gets or sets the source of the tile image.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.Message">
            <summary>
            Gets or sets the message of the tile. That is the content displayed in the top-left corner of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.MessageTemplate">
            <summary>
            Gets or sets <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the displayed <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.Message"/>.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.Notification">
            <summary>
            Gets or sets the additional information (notification) displayed on the tile. Typically this may be the Message Count and is displayed in the bottom-right corner of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.NotificationTemplate">
            <summary>
            Gets or sets <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the displayed <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadHubTile.Notification"/>.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTileService">
            <summary>
            HubTileService provides the ability to group hub tiles with a group tag and to freeze or unfreeze groups of hub tiles.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTileService.GroupTagProperty">
            <summary>
            Identifies the GroupTag attached property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileService.GetGroupTag(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the group tag of the provided hub tile.
            </summary>
            <param name="hubTile">The hub tile to get the group tag from.</param>
            <returns>Returns the group tag of the provided hub tile.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileService.SetGroupTag(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Sets the group tag of the specified hub tile to the specified value.
            </summary>
            <param name="hubTile">The hub tile to set the group tag to.</param>
            <param name="value">The tile's new group tag.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileService.FreezeGroup(System.String)">
            <summary>
            Freezes a group of hub tiles.
            </summary>
            <param name="groupTag">The groupTag which will be used when searching for hub tiles to freeze.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTileService.UnfreezeGroup(System.String)">
            <summary>
            Unfreezes a group of hub tiles.
            </summary>
            <param name="groupTag">The groupTag which will be used when searching for hub tiles to unfreeze.</param>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile">
            <summary>
            Defines a tile that mimics the WP OS's people hub tile.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.FlipModeProperty">
            <summary>
            Identifies the FlipMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.TileStyleProperty">
            <summary>
            Identifies the TileStyle dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadMosaicHubTile class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.ApplyTemplateCore">
            <summary>
            Resolves the ControlTemplate parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.Update">
            <summary>
            A virtual callback that is called periodically when the tile is not frozen. It can be used to
            update the tile visual states or to perform other necessary operations.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.TileStyle">
            <summary>
            Gets or sets a style that is applied to each individual MosaicTile inside RadMosaicHubTile.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadMosaicHubTile.FlipMode">
            <summary>
            Determines how the cells of the mosaic tile are flipped.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile">
            <summary>
            Defines a hub tile that simulates the pictures tile on WP OS's start screen.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadPictureRotatorHubTile class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.ApplyTemplateCore">
            <summary>
            Retrieves the ControlTemplate parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.IsNewIndexValid(System.Int32)">
            <summary>
            Should be overridden in descendant classes to indicate if the same image can be displayed
            many times in a row.
            </summary>
            <param name="index">The index of the new image.</param>
            <returns>Returns true if the image can be repeated and false otherwise.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.GetNewIndex(System.Int32)">
            <summary>
            Should be overridden in descendant classes to generate the new index from the picture collection.
            </summary>
            <param name="count">The length of the collection.</param>
            <returns>Returns new index different from previous.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.LoadCore">
            <summary>
            Called within the handler of the <see cref="E:Loaded"/> event. Allows inheritors to provide their specific logic.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.Update">
            <summary>
            A virtual callback that is called periodically when the tile is no frozen. It can be used to
            update the tile visual states or other necessary operations.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.SecondImage">
            <summary>
            Gets a value of the secondImage displayed. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.FirstImage">
            <summary>
            Gets a value of the firstImage displayed. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPictureRotatorHubTile.ShouldClip">
            <summary>
            Gets a value that determines whether a rectangle clip is set on the LayoutRoot.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile">
            <summary>
            Defines a tile that behaves like the WP OS tile that is created when a contact is pinned to the start screen.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContentProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContentProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.ExpandedStateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.ExpandedState"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.#ctor">
            <summary>
            Initializes a new instance of the RadSlideHubTile class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.ApplyTemplateCore">
            <summary>
            Initializes the PART_Panel template part.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.ExpandedState">
            <summary>
            Gets or sets the expanded state of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContent">
            <summary>
            Gets or sets the front content of the tile. Typically this will be a picture but it may be any arbitrary content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContentTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> that defines the appearance of the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.TopContent"/> value.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContent">
            <summary>
            Gets or sets the front content of the tile. Typically this will be a picture but it may be any arbitrary content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContentTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> that defines the appearance of the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.BottomContent"/> value.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.SlideControl">
            <summary>
            Gets the HubTile SlideControl. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.FlipControl">
            <summary>
            Gets the HubTile <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.FlipControl"/>. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.ShouldClip">
            <summary>
            Gets a value that determines whether a rectangle clip is set on the LayoutRoot.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile.IsUpdateTimerNeeded">
            <summary>
            Determines whether the update timer used to update the tile's VisualState needs to be started.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl">
            <summary>
            Represents a control, used by <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadSlideHubTile"/> to display two different contents with a slide transition.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContentProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContentProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContent"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.ExpandedStateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.ExpandedState"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContent">
            <summary>
            Gets or sets the front content of the tile. Typically this will be a picture but it may be any arbitrary content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContentTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> that defines the appearance of the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.TopContent"/> value.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContent">
            <summary>
            Gets or sets the front content of the tile. Typically this will be a picture but it may be any arbitrary content.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContentTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> that defines the appearance of the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.BottomContent"/> value.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.HubTile.SlideControl.ExpandedState">
            <summary>
            Gets or sets the expanded state of the control.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase">
            <summary>
            Represents a base class for all interaction effects that can be applied to an element.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase.CancelEffect">
            <summary>
            Cancels the current interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase.OnPointerDown(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when manipulation has been started on an element subscribed for an interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase.CanStartEffect(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Determines whether an effect can be started on the specified target element.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if an effect can be started on the specified target element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase.OnStartEffect(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when the interaction effect is started.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager">
            <summary>
            Implements an infrastructure that allows for applying interaction effects to elements.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.IsInteractionEnabledProperty">
            <summary>
            Identifies the IsTiltEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.InteractionProperty">
            <summary>
            Identifies the Interaction dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.ApplyInteractionExplicitlyProperty">
            <summary>
            Identifies the ApplyInteractionExplicitly dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.SetApplyInteractionExplicitly(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets a boolean value determining whether an interaction effect will be applied to a given element explicitly
            without checking the AllowedTypes and ExcludedTypes values.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.GetApplyInteractionExplicitly(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets a boolean value determining whether an interaction effect will be applied to a given element explicitly
            without checking the AllowedTypes and ExcludedTypes values.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.SetIsInteractionEnabled(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets a boolean value indicating whether the tilt effect will be enabled for the given element.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.GetIsInteractionEnabled(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets a boolean value indicating whether the tilt effect is enabled for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.SetInteraction(Windows.UI.Xaml.DependencyObject,Telerik.UI.Xaml.Controls.Primitives.InteractionEffectBase)">
            <summary>
            Sets the interaction effect for a given element..
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.GetInteraction(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the interaction effect assigned to the given element.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.CancelEffect(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Cancels the effect currently applied to the given element.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.AllowedTypes">
            <summary>
            Gets a collection of types
            to which the tilt effect can be applied.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.InteractionEffectManager.ExcludedTypes">
            <summary>
            Gets a collection of types
            to which the tilt effect cannot be applied.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect">
            <summary>
            Represents a tilt interaction effect. This effect applies plane projection to the element the user is currently interacting with
            to simulate pressure being applied on the element at the interaction point.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.DedicatedTiltTargetProperty">
            <summary>
            Identifies the DedicatedTiltTarget dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.MaxRotationAngleProperty">
            <summary>
            Identifies the MaxRotationAngle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.MaxZOffsetProperty">
            <summary>
            Identifies the MaxZOffset dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.SetDedicatedTiltTarget(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the DedicatedTiltTarget attached property to the given <see cref="T:Windows.UI.Xaml.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.GetDedicatedTiltTarget(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the defined DedicatedTiltTarget from the given <see cref="T:Windows.UI.Xaml.FrameworkElement"/>.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.CancelEffect">
            <summary>
            Cancels the interaction effect applied to the given element.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.OnStartEffect(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when manipulation has been started on an element subscribed for an interaction effect.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.CanStartEffect(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Determines whether an effect can be started on the specified target element.
            </summary>
            <param name="targetElement">The target element.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if an effect can be started on the specified target element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.MaxZOffset">
            <summary>
            Gets or sets the max Z offset.
            </summary>
            <value>The max Z offset.</value>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionEffect.MaxRotationAngle">
            <summary>
            Gets or sets the max rotation angle.
            </summary>
            <value>The max rotation angle.</value>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionState">
            <summary>
            Represents the possible tilt interaction states.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionState.Tilting">
            <summary>
            The element is currently being tilted.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionState.EndingTilting">
            <summary>
            A tilt effect reset procedure is started.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionState.EndedTilting">
            <summary>
            A tilt effect reset procedure is finished.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo">
            <summary>
            Represents a context describing a tilted element.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo.#ctor(Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.Media.Animation.Storyboard)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="resetAnimation">The reset animation.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo.TargetElement">
            <summary>
            Gets or sets the target element that is tilted.
            </summary>
            <value>The target element.</value>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo.ResetAnimation">
            <summary>
            Gets or sets the tilt reset animation.
            </summary>
            <value>The reset animation.</value>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.TiltInteractionInfo.State">
            <summary>
            Gets or sets the current tilt interaction state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.ILegendInfoProvider">
            <summary>
            Represents provider for <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LegendItem"/> objects.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.ILegendInfoProvider.LegendInfos">
            <summary>
            Collection of <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LegendItem"/> objects that hold the information required to display legend.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl">
            <summary>
            Represents legend control that displays the series from <see cref="T:Telerik.UI.Xaml.Controls.Primitives.ILegendInfoProvider"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.LegendProviderProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.LegendProvider"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemsPanelProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemsPanel"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemTemplate"/> property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ApplyTemplateCore">
            <summary>
            Called when the Framework OnApplyTemplate is called. Inheritors should override this method should they have some custom template-related logic.
            This is done to ensure that the <see cref="P:IsTemplateApplied"/> property is properly initialized.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemsPanel">
            <summary>
            Represents the items panel that will be used for the legend presenter to display data.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display each legend item.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.LegendProvider">
            <summary>
            Gets or sets the provider that this <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl"/> will use to display its items.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl.LegendItems">
            <summary>
            Represents collection of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LegendItem"/> items that will be displayed.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LegendItem">
            <summary>
            Data representation of the legend items displayed in the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadLegendControl"/>.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LegendItem.OnPropertyChanged(System.String)">
            <summary>
            Method that raises the <see cref="E:Telerik.UI.Xaml.Controls.Primitives.LegendItem.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="E:Telerik.UI.Xaml.Controls.Primitives.LegendItem.PropertyChanged">
            <summary>Occurs when a property value changes.</summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LegendItem.Title">
            <summary>
            Gets and set the Legend Title.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LegendItem.Fill">
            <summary>
            Gets and set the Legend Fill.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LegendItem.Stroke">
            <summary>
            Gets and set the Legend Stroke.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LegendItemCollection">
            <summary>
            Strongly typed collection of <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LegendItem"/> items.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerPressed event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerCaptureLost event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerEntered event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerExited event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerMoved event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerReleased event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Called before the ManipulationDelta event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.License.ToastPresenter.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Called before the Tapped event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel">
            <summary>
            Defines the model behind the Trial message notification.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.OffsetTop">
            <summary>
            Gets the offset from the top of the screen.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.Width">
            <summary>
            Gets the width of the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.Height">
            <summary>
            Gets the height of the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.Title">
            <summary>
            Gets the title part of the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.MessageLine1">
            <summary>
            Gets the first line of text within the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.MessageLine2">
            <summary>
            Gets the second line of text within the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.MessageLine3">
            <summary>
            Gets the third line of text within the trial message UI.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.License.TrialViewModel.Logo">
            <summary>
            Gets the source for the Logo Icon within the trial message UI.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem">
            <summary>
            A special data item that may be visualized in a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.PropertyChanged"/> event.
            </summary>
            <param name="propName">Name of the prop.</param>
        </member>
        <member name="E:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.PropertyChanged">
            <summary>
            Raised whenever a property has changed.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem">
            <summary>
            Represents a visual item that resides within a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.IsSelectedProperty">
            <summary>
            Specifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.IsSelected"/> property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.SetVerticalOffset(System.Double)">
            <summary>
            Applies the desired vertical offset by setting a TranslateTransform.Y value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.SetHorizontalOffset(System.Double)">
            <summary>
            Applies the desired horizontal offset by setting a TranslateTransform.X value.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.ComposeVisualStateName">
            <summary>
            Builds the current visual state that is valid for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.IsSelected">
            <summary>
            Determines whether the visual item is currently selected.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.LogicalIndex">
            <summary>
            Gets the logical index in the owning LoopingPanel, represented by this item. 
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.ArrangeRect">
            <summary>
            Gets the Rect used by the owning LoopingPanel to arrange this item.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.VerticalOffset">
            <summary>
            Gets the amount of pixels this item is translated vertically relative to its owning panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.HorizontalOffset">
            <summary>
            Gets the amount of pixels this item is translated horizontally relative to its owning panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.IsExpanded">
            <summary>
            Determines whether the item is currently expanded (its owning list is in Expanded state).
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem.Panel">
            <summary>
            Gets the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/> instance where this item resides.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason">
            <summary>
            Defines the possible actions that may select an item within a LoopingList.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason.Private">
            <summary>
            The selected index is changed by the list itself to reflect an internal change.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason.PrivateNoNotify">
            <summary>
            The selected index is changed by the list itself. The SelectedIndexChanged event is not raised.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason.User">
            <summary>
            The selected index is changed by the user through code.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason.VisualItemClick">
            <summary>
            A visual item was clicked.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason.VisualItemSnappedToMiddle">
            <summary>
            The item is in the middle of a LoopingPanel and automatically selected.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel">
            <summary>
            Represents a light-weight virtualized stack panel with vertical orientation with endless looping among logical items.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.VerticalOffsetProperty">
            <summary>
            Used internally to animate the vertical offset of the panel.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.SetVerticalOffset(System.Double,Windows.UI.Xaml.Duration,Windows.UI.Xaml.Media.Animation.EasingFunctionBase)">
            <summary>
            Applies the specified offset as current.
            </summary>
            <param name="offset">The desired offset.</param>
            <param name="duration">The duration of the animation used to apply the offset.</param>
            <param name="ease">The easing function that describes animation interpolation.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.UpdateWheel(System.Double,System.Boolean)">
            <summary>
            Applies the specified vertical offset, translates the visual items accordingly and updates the logical indexes.
            </summary>
            <param name="newOffset">The new vertical offset.</param>
            <param name="force">True to update the wheel even if the new offset equals the current one, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.ItemFromLogicalIndex(System.Int32)">
            <summary>
            Gets the visual item that represents the specified logical index.
            Will return null if the index is not currently realized (visualized).
            </summary>
            <param name="logicalIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.StopOffsetAnimation(System.Boolean)">
            <summary>
            Stops the vertical offset animation (if running).
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.UpdateVisualItemCount">
            <summary>
            Updates the count of the visual items, depending on the provided available length.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.BringIntoView(System.Int32)">
            <summary>
            Ensures that the visual item, associated with the specified logical index is currently displayed.
            </summary>
            <param name="logicalIndex"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.AnimateVerticalOffset(System.Double)">
            <summary>
            Animates the vertical offset to the specified value, starting from the current one.
            </summary>
            <param name="to">The final value of the animation.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.AnimateVerticalOffset(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Media.Animation.EasingFunctionBase,System.Double)">
            <summary>
            Animates the vertical offset to the specified value, starting from the current one.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="easing">The easing function that calculates animation steps.</param>
            <param name="to">The final value of the animation.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.BringIntoView(System.Int32,System.Boolean)">
            <summary>
            Ensures that the visual item, associated with the specified logical index is currently displayed.
            </summary>
            <param name="logicalIndex"></param>
            <param name="animate">True to perform animated scrolling, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.CalculateOffset(System.Int32,System.Boolean)">
            <summary>
            Calculates the vertical offset so that the first realized index becomes the specified one.
            </summary>
            <param name="logicalIndex">The desired logical index.</param>
            <param name="negative">True to calculate the offset in the negative direction, false to use the positive one.</param>
            <returns>The offset at which the index is completely visible.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.CalculateOffset(System.Int32)">
            <summary>
            Calculates the vertical offset so that the first realized index becomes the specified one.
            </summary>
            <param name="logicalIndex">The desired logical index.</param>
            <returns>The offset at which the index is completely visible.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.ScrollToIndex(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem,System.Int32)">
            <summary>
            Scrolls to the desired index, starting from the provided visual item.
            </summary>
            <param name="item">The visual item to start from.</param>
            <param name="to">The target index to scroll to.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.OnScrollCompleted(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState)">
            <summary>
            Notifies that a scroll operation has completed.
            </summary>
            <param name="previousState">The state the panel was in before the scrolling ended.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.ScrollState">
            <summary>
            Gets the current scrolling state of the panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.IsLoopingEnabled">
            <summary>
            Determines whether looping is enabled. That is to allow infinite scrolling of the current logical wheel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.CenteredItemSnapPosition">
            <summary>
            Defines the position of the centered item relatively to the viewport's starting edge
            if the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.IsCentered"/> property is set to true.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.SnapOffsetCorrection">
            <summary>
            Gets or sets a double value that represents the
            offset correction applied when the selected item is snapped.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.IsCentered">
            <summary>
            Determines whether the panel will center the currently selected item according to the
            centering options and the layout orientation.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.IsLoaded">
            <summary>
            Determines whether the panel is Loaded (present on the visual scene).
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.Owner">
            <summary>
            Gets the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/> instance that hosts this panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.LogicalCount">
            <summary>
            Gets the count of the logical items that form the wheel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.TopLogicalIndex">
            <summary>
            Gets or sets the top logical index that is currently realized (visible on the screen).
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel.VerticalOffset">
            <summary>
            Gets the current vertically scrolled amount (in pixels).
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState">
            <summary>
            Defines the possible scrolling states a LoopingPanel instance may enter.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState.NotScrolling">
            <summary>
            The panel is currently not scrolling.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState.Scrolling">
            <summary>
            The panel is scrolled due to a drag manipulation.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState.ScrollingToIndex">
            <summary>
            A logical index is brought into view via animated scrolling.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanelScrollState.SnapScrolling">
            <summary>
            The panel is scrolled to snap to the middle item.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList">
            <summary>
            Implements a light-weight implementation of a Selector control which is completely virtualized in both UI and Data terms.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OrientationProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsLoopingEnabledProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsLoopingEnabled"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SnapOffsetCorrectionProperty">
            <summary>
            Defines <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SnapOffsetCorrection"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CenteredItemSnapPositionProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CenteredItemSnapPosition"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsCenteredProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsCentered"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsExpandedProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsExpanded"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectedIndexProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemHeightProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemWidthProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemSpacingProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemSpacing"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemTemplateProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemTemplateSelectorProperty">
            <summary>
            Identifies the SpecialDayTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemStyleProperty">
            <summary>
            Defines the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemStyle"/> property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateSelection(System.Int32,Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason)">
            <summary>
            Applies the specified index as currently selected.
            </summary>
            <param name="newSelectedIndex">The desired selected index.</param>
            <param name="reason">The reason of the change.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectItem(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem,Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListSelectionChangeReason)">
            <summary>
            Selects the specified visual item.
            </summary>
            <param name="item">The item to be selected.</param>
            <param name="reason">The reason that caused the select request.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CreateVisualItem">
            <summary>
            Creates a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/> instance to be used by the hosted <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateVisualItem(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Associates the data at the specified logical index with the provided visual item instance.
            </summary>
            <param name="item">The visual item which data is to be updated.</param>
            <param name="logicalIndex">The logical index that describes the data.</param>
            <param name="force">True to re-evaluate the data event if the visual item is already associated with the specified logical index.</param>
            <param name="animate">True to update the visual state using transitions.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateItemVisualState(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem,Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams)">
            <summary>
            Updates the visual state of a single item.
            </summary>
            <param name="item">The <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/> instance which state is to be updated.</param>
            <param name="updateParams">The structure that encapsulates different update parameters such as Animate, EvaluateEnabled, etc.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnVisualItemTap(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem)">
            <summary>
            Handles a click from a child <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnVisualItemDoubleTap(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem)">
            <summary>
            Handles a Double-tap event from a child <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateLogicalCount(System.Boolean)">
            <summary>
            Updates the logical count of the items panel.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnInitialized">
            <summary>
            Called after template is applied and the control is loaded on the SL visual tree.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.InitData">
            <summary>
            Initializes the data.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.GetLogicalCount">
            <summary>
            Retrieves the logical count of the current data source (if any).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.RaiseSelectedIndexChanged">
            <summary>
            Raises the <see cref="E:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateData(System.Boolean)">
            <summary>
            Forces complete data re-evaluation of the currently visualized items.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateDataItem(Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListDataItem,Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem)">
            <summary>
            Allows to minimize the overhead of creating new instances whenever a logical index changes by formatting an existing data item instance.
            </summary>
            <param name="dataItem"></param>
            <param name="visualItem"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnIsExpandedChanged">
            <summary>
            Raises the <see cref="E:IsExpandedChanged"/> event and allows inheritors to provide additional logic upon IsExpanded property changed.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsItemSelected(System.Int32)">
            <summary>
            Determines whether the data item that resides at the specified logical index should be visualized with the Selected state.
            </summary>
            <param name="logicalIndex">The logical index that defines the data to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsItemEnabled(System.Int32)">
            <summary>
            Determines whether the logical item, representing the specified logical index should be enabled or not.
            </summary>
            <param name="logicalIndex">The logical index that defines the data to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CanChangeSelectedIndex(System.Int32)">
            <summary>
            Determines whether the currently selected index can be changed.
            Allows inheritors to optionally prevent the change under certain conditions.
            </summary>
            <param name="newIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectCurrentItem">
            <summary>
            Brings the currently selected index into view and selects the visual item that represents it.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.UpdateItemsVisualState(Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams)">
            <summary>
            Forces each visual item to update its state.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CenterCurrentItem(System.Boolean)">
            <summary>
            Centers the item at the currently selected index.
            </summary>
            <param name="animate"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CreateVisualItemInstance">
            <summary>
            Creates the core <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.LoadCore">
            <summary>
            Called within the handler of the <see cref="E:Loaded"/> event. Allows inheritors to provide their specific logic.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ApplyTemplateCore">
            <summary>
            Retrieves the control's template parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnTemplateApplied">
            <summary>
            Occurs when the <see cref="M:OnApplyTemplate"/> method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
            <summary>
            Called before the ManipulationStarted event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Called before the ManipulationDelta event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Called before the ManipulationCompleted event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Called before the Tapped event occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called before the GotFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called before the LostFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerPressed event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerReleased event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="E:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectedIndexChanged">
            <summary>
            Notifies for a change in the currently selected index.
            </summary>
        </member>
        <member name="E:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsExpandedChanged">
            <summary>
            Occurs when the value of the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsExpanded"/> property has changed.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SnapOffsetCorrection">
            <summary>
            Gets or sets a double value that is applied as an offset correction
            after the selected item has been snapped according to the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CenteredItemSnapPosition"/>.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.Orientation">
            <summary>
            Gets or sets the orientation of looping.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.CenteredItemSnapPosition">
            <summary>
            Defines the position of the centered item relatively to the viewport's starting edge
            if the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsCentered"/> property is set to true.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsCentered">
            <summary>
            Determines whether the list will vertically center the currently selected item.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsLoopingEnabled">
            <summary>
            Determines whether looping is enabled. That is to allow infinite scrolling of the current logical wheel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsExpanded">
            <summary>
            Determines whether the list is currently expanded. That is to put all the items except the currently selected one in the "Collapsed" visual state.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectedIndex">
            <summary>
            Gets or sets the index that is currently selected.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemWidth">
            <summary>
            Gets or sets the width of a single item within the hosted <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/> panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemHeight">
            <summary>
            Gets or sets the height of a single item within the hosted <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/> panel.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemSpacing">
            <summary>
            Gets or sets the spacing among visual items within the hosted <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.FirstRealizedIndex">
            <summary>
            Gets the first logical index that is realized within the hosted <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate to be applied to each visual item present within the selector.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemTemplateSelector">
            <summary>
            A template selector that used to provide a specific visualization for
            specific items.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.VerticalOffset">
            <summary>
            Gets the currently accumulated vertical offset.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.IsInitialized">
            <summary>
            Determines whether the list is loaded and has its template applied.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemStyle">
            <summary>
            Gets or sets the Style to be applied to each visual item present within the selector.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ScrollState">
            <summary>
            Gets the current scrolling state of the inner <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.AutoExpandCollapse">
            <summary>
            Determines whether the Tap event will toggle the IsExpanded property of the list.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.SelectionChangeReason">
            <summary>
            Gets the reason for a change in the SelectedIndex property.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList.ItemsPanel">
            <summary>
            Gets the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingPanel"/> instance that hosts the visual items.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItemSnapPosition">
            <summary>
            Defines the different snapping positions for the centered item
            supported by <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.RadLoopingList"/>.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItemSnapPosition.Middle">
            <summary>
            Positions the selected item in the center of the viewport.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItemSnapPosition.Near">
            <summary>
            Positions the selected item at the near side of the viewport.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItemSnapPosition.Far">
            <summary>
            Positions the selected item at the far side of the viewport.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams">
            <summary>
            Encapsulates the parameters needed to evaluate a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.LoopingListItem"/> visual state.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
            <param name="evaluateEnabled">True to evaluate the IsEnabled property of the visual item, false otherwise.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
            <param name="evaluateEnabled">True to evaluate the IsEnabled property of the visual item, false otherwise.</param>
            <param name="evaluateSelected">True to evaluate the IsSelected property of the visual item, false otherwise.</param>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.Animate">
            <summary>
            Determines whether VisualStateManager will use transitions upon visual state change.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.EvaluateEnabled">
            <summary>
            Determines whether the IsEnabled property will be evaluated.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.LoopingList.VisualStateUpdateParams.EvaluateSelected">
            <summary>
            Determines whether the IsSelected property will be evaluated.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationButton">
            <summary>
            Represents a templated button control used in a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/> for navigation.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationButton"/> class.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode">
            <summary>
            Specifies the different visual parts available within a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.Arrows">
            <summary>
            Left and right arrows are visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.Thumbnails">
            <summary>
            The ThumbnailsList part is visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.IndexLabel">
            <summary>
            The IndexControl part is visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.ArrowsAndThumbnails">
            <summary>
            Both arrows and thumbnails parts are visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.ArrowsAndIndex">
            <summary>
            Both arrows and index parts are visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.ThumbnailsAndIndex">
            <summary>
            Both thumbnails and index parts are visible.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationControlDisplayMode.All">
            <summary>
            All parts are visible.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl">
            <summary>
            A special control, that displays the CurrentIndex and ItemCount information in a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/>.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.SeparatorProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.Separator"/> dependency property.
            </summary>  
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountFormatProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexFormatProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountDisplayValueProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountDisplayValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexDisplayValueProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexDisplayValue"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl"/> class.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.Separator">
            <summary>
            Gets or sets the string that separates the CurrentIndex and ItemCount values. Defaults to " / ".
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountFormat">
            <summary>
             Gets or sets the format that defines how the item count part of the control is displayed.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexFormat">
            <summary>
            Gets or sets the format that defines how the current index part of the control is displayed.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.CurrentIndexDisplayValue">
            <summary>
            Gets the string representation of the current index.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationIndexLabelControl.ItemCountDisplayValue">
            <summary>
            Gets the string representation of the item count.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationItemIndicator">
            <summary>
            A special control, use to indicate item in a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/> when no suitable content is provided.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationItemIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationItemIndicator"/> class.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl">
            <summary>
            A List control, used to visualize thumbnail data of <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/>.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl.GetContainerForItemOverride">
            <summary>Creates or identifies the element that is used to display the given item.</summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is (or is eligible to be) its own container.
            </summary>
            <returns>True if the item is (or is eligible to be) its own container; otherwise, false.</returns>
            <param name="item">The item to check.</param>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl.PrepareContainerForItemOverride(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>Prepares the specified element to display the specified item.</summary>
            <param name="element">The element that's used to display the specified item.
            </param>
            <param name="item">The item to display.</param>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControlItem">
            <summary>
            Represents visual container, used within a <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControl"/> to visualize thumbnail items.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControlItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControlItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Pagination.PaginationListControlItem.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding
            layout pass) call ApplyTemplate. In simplest terms, this means the method is
            called just before a UI element displays in your app. Override this method to
            influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl">
            <summary>
            Represents a control that gives visual means for tracking the current position within a <see cref="T:Windows.UI.Xaml.Controls.Primitives.Selector"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.ListItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.ListItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.PageProviderProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.PageProvider"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.DisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.DisplayMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.LeftArrowTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.LeftArrowTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.RightArrowTemplateProperty">
            <summary>
            Identifies the <see cref="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.RightArrowTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.ApplyTemplateCore">
            <summary>
            Called when the Framework OnApplyTemplate is called. Inheritors should override this method should they have some custom template-related logic.
            This is done to ensure that the <see cref="P:IsTemplateApplied"/> property is properly initialized.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.OnTemplateApplied">
            <summary>
            Occurs when the OnApplyTemplate() method has been called and the template is already successfully applied.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.DisplayMode">
            <summary>
            Gets or sets a value indication which parts of the control are currently visible.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.ListItemTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the items within of the list control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.LeftArrowTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the left arrow of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.RightArrowTemplate">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.DataTemplate"/> instance that defines the appearance of the right arrow of the control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.PageProvider">
            <summary>
            Gets or sets the current <see cref="T:Windows.UI.Xaml.Controls.Primitives.Selector"/> instance targeted by this pagination control.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.LayoutRoot">
            <summary>
            Gets the PART_LayoutRoot visual of the control template. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.ThumbnailList">
            <summary>
            Gets the PART_ThumbnailList visual of the control template. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.IndexLabelControl">
            <summary>
            Gets the PART_IndexLabelControl visual of the control template. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.LeftArrowPresenter">
            <summary>
            Gets the PART_LeftArrow visual of the control template. Exposed for testing purposes.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.Primitives.RadPaginationControl.RightArrowPresenter">
            <summary>
            Gets the PART_RightArrow visual of the control template. Exposed for testing purposes.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.PlacementMode">
            <summary>
            Determines the position of an element within a bounding rectangle.
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.CenterCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.CenterLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.CenterRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.TopCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.BottomCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.UI.Xaml.Controls.PlacementMode.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.Theming.PaletteInitializer">
            <summary>
            Represents an empty type, used as an entry point in Telerik's Named Resources initialization.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.Theming.PaletteInitializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.UI.Xaml.Controls.Primitives.Theming.PaletteInitializer"/> class.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.Primitives.SolidColorBrushToColorConverter">
            <summary>
            Represents a custom converter that extracts the Color value from a SolidColorBrush instance.
            </summary>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.SolidColorBrushToColorConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Extracts the Color value from the passed SolidColorBrush instance.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
            <remarks>
            The converter expects a valid <see cref="T:Windows.UI.Xaml.Media.SolidColorBrush"/> instance and will raise <see cref="T:System.ArgumentException"/> in case the value parameter may not be cast to such a brush.
            </remarks>
        </member>
        <member name="M:Telerik.UI.Xaml.Controls.Primitives.SolidColorBrushToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Back convertion is not supported and a <see cref="T:System.NotImplementedException"/> will be raised.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.GlobalPalette">
            <summary>
            Represents the collection of named resources, applicable for all controls.
            </summary>
        </member>
        <member name="T:Telerik.UI.Xaml.Controls.StaticResourceProvider">
            <summary>
            Provides an abstraction for the ResourceDictionary used to store the StaticResources, used by all controls. Defaults to Application.Current.Resources.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.StaticResourceProvider.Resources">
            <summary>
            Gets or sets the <see cref="T:Windows.UI.Xaml.ResourceDictionary"/> that stores the named resources, used by all controls.
            </summary>
        </member>
        <member name="P:Telerik.UI.Xaml.Controls.StaticResourceProvider.RequestedTheme">
            <summary>
            Gets or sets the current application theme to be applied to all controls. Defaults to Application.Current.RequestedTheme.
            </summary>
        </member>
    </members>
</doc>
