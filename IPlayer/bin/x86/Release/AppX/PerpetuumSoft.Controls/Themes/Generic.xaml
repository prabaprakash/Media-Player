<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PerpetuumSoft.Controls"
    xmlns:licensing="using:PerpetuumSoft.Controls.Licensing" xmlns:system="using:System">

  <!-- Common Values -->

  <ResourceDictionary.ThemeDictionaries>
    <ResourceDictionary x:Key="Default">
      <SolidColorBrush x:Key="PerpetuumForegroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="PerpetuumBackgroundThemeBrush" Color="#FF000000" />
      <SolidColorBrush x:Key="PerpetuumBorderThemeBrush" Color="#CCFFFFFF" />
      <Thickness x:Key="PerpetuumBorderThemeThickness">2</Thickness>

      <SolidColorBrush x:Key="RatingBackroundThemeBrush" Color="#FF1D1D1D" />
      <SolidColorBrush x:Key="RatingBorderThemeBrush" Color="#99FFFFFF" />

      <SolidColorBrush x:Key="MenuBackground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuBorderBrush">#FF212121</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemBackground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemForeground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemHoverBackground">#FFDEDEDE</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemHoverForeground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemPressedBackground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemPressedForeground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuSeparatorFill">#FF707070</SolidColorBrush>

      <SolidColorBrush x:Key="TabItemSelected">#FF4C4C4C</SolidColorBrush>
      <SolidColorBrush x:Key="TabItemUnselected">#10000000</SolidColorBrush>
      <SolidColorBrush x:Key="TabItemDisable">#8CFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="PickerArrowForeground">#FFFFFFFF</SolidColorBrush>
    </ResourceDictionary>

    <ResourceDictionary x:Key="Light">
      <SolidColorBrush x:Key="PerpetuumForegroundThemeBrush" Color="#FF000000" />
      <SolidColorBrush x:Key="PerpetuumBackgroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="PerpetuumBorderThemeBrush" Color="#45000000" />
      <Thickness x:Key="PerpetuumBorderThemeThickness">2</Thickness>

      <SolidColorBrush x:Key="RatingBackroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="RatingBorderThemeBrush" Color="#45000000" />

      <SolidColorBrush x:Key="MenuBackground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuBorderBrush">#FF212121</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemBackground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemForeground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemHoverBackground">#FFDEDEDE</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemHoverForeground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemPressedBackground">#FF000000</SolidColorBrush>
      <SolidColorBrush x:Key="MenuItemPressedForeground">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="MenuSeparatorFill">#FF707070</SolidColorBrush>

      <SolidColorBrush x:Key="TabItemSelected">#FFFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="TabItemUnselected">#10000000</SolidColorBrush>
      <SolidColorBrush x:Key="TabItemDisable">#8CFFFFFF</SolidColorBrush>
      <SolidColorBrush x:Key="PickerArrowForeground">#FF000000</SolidColorBrush>
    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>

  <x:Double x:Key="RatingItemThemeSize">25</x:Double>
  <x:Double x:Key="RatingThemeItemCount">5</x:Double>
  <Thickness x:Key="RatingBorderThemeThickness">1</Thickness>
  <SolidColorBrush x:Key="RatingForegroundThemeBrush" Color="Yellow" />
  <SolidColorBrush x:Key="RatingHighlightThemeBrush" Color="Orange" />
  <x:Double x:Key="PerpetuumThemeFontSize">21</x:Double>

  <!-- Common Styles -->

  <Style TargetType="Rectangle" x:Name="FocusVisualWhiteRectangleThemeStyle">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Stroke" Value="{StaticResource FocusVisualWhiteStrokeThemeBrush}" />
    <Setter Property="StrokeEndLineCap" Value="Square" />
    <Setter Property="StrokeDashArray" Value="1,1" />
    <Setter Property="Opacity" Value="0" />
    <Setter Property="StrokeDashOffset" Value="1.5" />
    <Setter Property="Margin" Value="-2" />
  </Style>

  <Style TargetType="Rectangle" x:Name="FocusVisualBlackRectangleThemeStyle">
    <Setter Property="StrokeDashArray" Value="1" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Stroke" Value="{StaticResource FocusVisualBlackStrokeThemeBrush}" />
    <Setter Property="StrokeEndLineCap" Value="Square" />
    <Setter Property="StrokeDashArray" Value="1,1" />
    <Setter Property="Opacity" Value="0" />
    <Setter Property="StrokeDashOffset" Value="0.5" />
    <Setter Property="Margin" Value="-2" />
  </Style>

  <!-- Rating -->

  <Style TargetType="local:RatingItem">
    <Setter Property="Width" Value="{Binding Height}" />
    <Setter Property="Height" Value="{Binding Height}" />
    <Setter Property="BorderThickness" Value="{Binding BorderThickness}" />
    <Setter Property="Background" Value="{Binding Background}" />
    <Setter Property="Foreground" Value="{Binding Foreground}" />
    <Setter Property="BorderBrush" Value="{Binding BorderBrush}" />
    <Setter Property="Template" Value="{Binding ItemTemplate}" />
  </Style>

  <Style TargetType="local:Rating">
    <Setter Property="BorderThickness" Value="{StaticResource RatingBorderThemeThickness}" />
    <Setter Property="Background" Value="{StaticResource RatingBackroundThemeBrush}" />
    <Setter Property="Foreground" Value="{StaticResource RatingForegroundThemeBrush}" />
    <Setter Property="Highlight" Value="{StaticResource RatingHighlightThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource RatingBorderThemeBrush}" />
    <Setter Property="Height" Value="{StaticResource RatingItemThemeSize}" />
    <Setter Property="ItemCount" Value="{StaticResource RatingThemeItemCount}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Rating">
          <Grid x:Name="LayoutRoot">
            <Viewbox>
              <StackPanel x:Name="Items" Orientation="Horizontal" />
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="local:RatingItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="HighlightStates">
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HighightMask" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unhighlighted" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox>
              <Border Padding="2" Background="Transparent">
                <Border.Resources>
                  <ContentControl x:Key="StarData" Content="M 5.5,0.2 L 4,4 L 0,4 L 3,7 L 2,11 L 5.5,8.6 L 9,11 L 8,7 L 11,4 L 7,4 Z"/>
                  <local:RectMaskConverter x:Key="rc" />
                </Border.Resources>
                <Canvas Width="11" Height="11">
                  <Path 
                    Fill="{Binding Background}" 
                    Stroke="Transparent" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" />
                  <Path 
                    Fill="{Binding Rating.Foreground}" 
                    Stroke="Transparent" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}">
                    <Path.Clip>
                      <RectangleGeometry Rect="{Binding Value, Converter={StaticResource rc}, ConverterParameter=11}" />
                    </Path.Clip>
                  </Path>
                  <Path 
                    Fill="Transparent" 
                    Stroke="{Binding Rating.BorderBrush}" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" 
                    StrokeLineJoin="Round"/>
                  <Path 
                    Fill="{Binding Rating.Highlight}" 
                    Stroke="{Binding Rating.Highlight}" 
                    StrokeThickness="{Binding BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" 
                    StrokeLineJoin="Round"
                    Visibility="Collapsed"
                    x:Name="HighightMask"/>
                </Canvas>
              </Border>
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Color -->

  <Style TargetType="local:ColorList">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="470" />
    <Setter Property="Height" Value="320" />
    <Setter Property="ItemSize" Value="60" />
    <Setter Property="Color" Value="White" />
    <Setter Property="StandardColors">
      <Setter.Value>
        <local:ColorObservableCollection>
          <Color>#000000</Color>
          <Color>#7F7F7F</Color>
          <Color>#870014</Color>
          <Color>#EC1B23</Color>
          <Color>#FF7F27</Color>
          <Color>#FEF100</Color>
          <Color>#22B14C</Color>
          <Color>#00A1E7</Color>
          <Color>#414ACE</Color>
          <Color>#A44AA5</Color>
          <Color>#FFFFFF</Color>
          <Color>#C2C2C2</Color>
          <Color>#BA7B58</Color>
          <Color>#FFAFCA</Color>
          <Color>#FFC90E</Color>
          <Color>#EFE4B0</Color>
          <Color>#B4E51C</Color>
          <Color>#99D9EA</Color>
          <Color>#6F91BD</Color>
          <Color>#C8BFE7</Color>
        </local:ColorObservableCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorList">
          <Grid x:Name="LayoutRoot">
            <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
              <Border.Resources>
                <ContentControl x:Key="ItemSize" Content="{TemplateBinding ItemSize}" />
                <ContentControl x:Key="BorderBrush" Content="{TemplateBinding BorderBrush}" />
                <ContentControl x:Key="BorderThickness" Content="{TemplateBinding BorderThickness}" />
              </Border.Resources>
              <ListView 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                SelectedItem="{Binding Color, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                <ListView.ItemsPanel>
                  <ItemsPanelTemplate>
                    <WrapGrid Orientation="Horizontal" />
                  </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemTemplate>
                  <DataTemplate>
                    <Border Padding="4">
                      <Border 
                        BorderBrush="{Binding Content, Source={StaticResource BorderBrush}}" 
                        BorderThickness="{Binding Content, Source={StaticResource BorderThickness}}">
                        <Rectangle Width="{Binding Source={StaticResource ItemSize}, Path=Content}" Height="{Binding Source={StaticResource ItemSize}, Path=Content}">
                          <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding}" />
                          </Rectangle.Fill>
                        </Rectangle>
                      </Border>
                    </Border>
                  </DataTemplate>
                </ListView.ItemTemplate>
              </ListView>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorPlane">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorPlane">
          <Grid x:Name="LayoutRoot">
            <Rectangle Fill="{TemplateBinding ColorLine}" Stroke="{StaticResource PerpetuumBorderThemeBrush}"/>
            <Rectangle Fill="{TemplateBinding ColorOverlay}" Stroke="{StaticResource PerpetuumBorderThemeBrush}"/>
            <Canvas>
              <Grid x:Name="Pointer" Height="14" Width="14">
                <Ellipse Stroke="White"/>
                <Ellipse Stroke="Black" Margin="1"/>
              </Grid>
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorEditor">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorEditor">
          <Grid x:Name="LayoutRoot">
            <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
              <Grid x:Name="Root">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                  <local:ColorPlane Width="200" Height="200" Margin="10, 0"
                      XValue="{Binding Saturation, Mode=TwoWay}" YValue="{Binding Value, Mode=TwoWay}">
                    <local:ColorPlane.ColorLine>
                      <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="{Binding MaxColor}" Offset="1"/>
                      </LinearGradientBrush>
                    </local:ColorPlane.ColorLine>
                    <local:ColorPlane.ColorOverlay>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                      </LinearGradientBrush>
                    </local:ColorPlane.ColorOverlay>
                  </local:ColorPlane>

                  <local:ColorPlane Width="200" Height="30" Margin="5" XValue="{Binding HueNormalized, Mode=TwoWay}" SupportY="False">
                    <local:ColorPlane.ColorLine>
                      <LinearGradientBrush>
                        <GradientStop Offset="0.00" Color="#ffff0000"/>
                        <GradientStop Offset="0.17" Color="#ffffff00"/>
                        <GradientStop Offset="0.33" Color="#ff00ff00"/>
                        <GradientStop Offset="0.50" Color="#ff00ffff"/>
                        <GradientStop Offset="0.66" Color="#ff0000ff"/>
                        <GradientStop Offset="0.83" Color="#ffff00ff"/>
                        <GradientStop Offset="1.00" Color="#ffff0000"/>
                      </LinearGradientBrush>
                    </local:ColorPlane.ColorLine>
                  </local:ColorPlane>
                </StackPanel>

                <StackPanel Orientation="Vertical" Margin="0,10,10,0" Grid.Column="1">
                  <Rectangle Width="200" Height="85" Stroke="{StaticResource PerpetuumBorderThemeBrush}">
                    <Rectangle.Fill>
                      <SolidColorBrush Color="{Binding Color}"/>
                    </Rectangle.Fill>
                  </Rectangle>

                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Rectangle Fill="Red" Stroke="Red" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="0"/>
                    <Slider Value="{Binding Red, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="0" Padding="2"/>
                    <Rectangle Fill="Green" Stroke="Green" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="1"/>
                    <Slider Value="{Binding Green, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="1" Padding="2"/>
                    <Rectangle Fill="Blue" Stroke="Blue" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="2"/>
                    <Slider Value="{Binding Blue, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="2" Padding="2"/>
                  </Grid>
                </StackPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorPicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="200" />
    <Setter Property="Height" Value="30" />
    <Setter Property="PopupBrush" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="Color" Value="White" />
    <Setter Property="ColorListItemSize" Value="60" />
    <Setter Property="ColorListStandardColors">
      <Setter.Value>
        <local:ColorObservableCollection>
          <Color>#000000</Color>
          <Color>#7F7F7F</Color>
          <Color>#870014</Color>
          <Color>#EC1B23</Color>
          <Color>#FF7F27</Color>
          <Color>#FEF100</Color>
          <Color>#22B14C</Color>
          <Color>#3BA6F4</Color>
          <Color>#414ACE</Color>
          <Color>#A44AA5</Color>
          <Color>#FFFFFF</Color>
          <Color>#C2C2C2</Color>
          <Color>#BA7B58</Color>
          <Color>#FFAFCA</Color>
          <Color>#FFC90E</Color>
          <Color>#EFE4B0</Color>
          <Color>#B4E51C</Color>
          <Color>#99D9EA</Color>
          <Color>#6F91BD</Color>
          <Color>#C8BFE7</Color>
        </local:ColorObservableCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorPicker">
          <Grid x:Name="LayoutRoot">
            <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>

                <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />
                <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />

                <Grid Margin="5">
                  <Grid.Background>
                    <SolidColorBrush Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Grid.Background>
                </Grid>

                <TextBlock
                  Text="&#57361;"
                  Grid.Column="1"
                  IsHitTestVisible="False"
                  Margin="0,0,6,4"
                  Foreground="{StaticResource PickerArrowForeground}"
                  FontWeight="Bold"
                  FontSize="{StaticResource ComboBoxArrowThemeFontSize}"
                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- Date & Time -->

  <Style TargetType="local:TimePicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="ComboBoxStyle">
      <Setter.Value>
        <Style TargetType="ComboBox">
          <Setter Property="Width" Value="110" />
          <Setter Property="Height" Value="100" />
          <Setter Property="FontFamily" Value="Segoe UI" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                <Border Width="110" Height="100" Background="Transparent" Padding="10">
                  <Border.Resources>
                    <local:IntegerConverter x:Key="ic" />
                  </Border.Resources>
                  <Viewbox>
                    <TextBlock Text="{Binding Converter={StaticResource ic}, ConverterParameter=2}"/>
                  </Viewbox>
                </Border>
              </DataTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ComboBox">
                <Grid>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal" />
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                       Storyboard.TargetProperty="Fill">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                      <VisualState x:Name="Focused">
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                          <DoubleAnimation Storyboard.TargetName="Highlight"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="FocusedPressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                       Storyboard.TargetProperty="Fill">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Unfocused" />
                      <VisualState x:Name="PointerFocused" />
                      <VisualState x:Name="FocusedDropDown">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DropDownStates">
                      <VisualState x:Name="Opened">
                        <Storyboard>
                          <SplitOpenThemeAnimation
                                          OpenedTargetName="PopupBorder"
                                          ContentTargetName="ScrollViewer"
                                          ClosedTargetName="ContentPresenter"
                                          ContentTranslationOffset="0"
                                          OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                                          OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                                          ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Closed">
                        <Storyboard>
                          <SplitCloseThemeAnimation
                                          OpenedTargetName="PopupBorder"
                                          ContentTargetName="ScrollViewer"
                                          ClosedTargetName="ContentPresenter"
                                          ContentTranslationOffset="40"
                                          OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                                          ContentTranslationDirection="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectedItemDirection}"
                                          OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                                          ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                  <Rectangle x:Name="PressedBackground"
                                   Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                  <Border x:Name="HighlightBackground"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}"
                                BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                  <Rectangle x:Name="Highlight"
                                   Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                  <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <Popup x:Name="Popup">
                    <Border x:Name="PopupBorder"
                                    Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}"
                                    BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}"
                                    BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}"
                                    HorizontalAlignment="Stretch">
                      <ScrollViewer x:Name="ScrollViewer" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}"
                                              VerticalSnapPointsType="OptionalSingle"
                                              VerticalSnapPointsAlignment="Near"
                                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                              BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                              ZoomMode="Disabled">
                        <ItemsPresenter/>
                      </ScrollViewer>
                    </Border>
                  </Popup>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TimePicker">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <local:IntegerConverter x:Key="ic" />
            </Grid.Resources>
            <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="HourComboBox" Style="{TemplateBinding ComboBoxStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" />
                <Border Height="100">
                  <TextBlock Text=":" FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <ComboBox x:Name="MinuteComboBox" Style="{TemplateBinding ComboBoxStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" />
              </StackPanel>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Calendar">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="500" />
    <Setter Property="Height" Value="400" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Calendar">
          <Grid x:Name="LayoutRoot">
            <Border x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
              <Border.Resources>
                <Style x:Key="BaseListViewStyle" TargetType="ListView">
                  <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                  <Setter Property="RenderTransform">
                    <Setter.Value>
                      <ScaleTransform />
                    </Setter.Value>
                  </Setter>
                </Style>
                <Style x:Key="YearListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                  <Setter Property="ItemTemplate">
                    <Setter.Value>
                      <DataTemplate>
                        <Grid Width="100" Height="100" x:Name="LayoutGrid">
                          <TextBlock Text="{Binding Path=Date.Year}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                      </DataTemplate>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="ItemsPanel">
                    <Setter.Value>
                      <ItemsPanelTemplate>
                        <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="5" />
                      </ItemsPanelTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
                <Style x:Key="MonthListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                  <Setter Property="ItemTemplate">
                    <Setter.Value>
                      <DataTemplate>
                        <Grid Width="50" Height="50" Margin="10">
                          <Grid.Resources>
                            <local:DateTimeToMonthNameConverter x:Key="dnc" />
                          </Grid.Resources>
                          <TextBlock Text="{Binding Date, Converter={StaticResource dnc}}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                      </DataTemplate>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="ItemsPanel">
                    <Setter.Value>
                      <ItemsPanelTemplate>
                        <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="4" />
                      </ItemsPanelTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
                <Style x:Key="DayListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                  <Setter Property="ItemTemplate">
                    <Setter.Value>
                      <DataTemplate>
                        <Grid Width="50" Height="50" Margin="10">
                          <Grid.Resources>
                            <local:BooleanToVisibilityConverter x:Key="ivc" Invert="True"/>
                          </Grid.Resources>
                          <Grid Background="#DDDDDD" Visibility="{Binding Valid, Converter={StaticResource ivc}}" Margin="-10"/>
                          <TextBlock Text="{Binding Path=Date.Day}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                      </DataTemplate>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="ItemsPanel">
                    <Setter.Value>
                      <ItemsPanelTemplate>
                        <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="7" />
                      </ItemsPanelTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
                <Style x:Key="DayOfWeekListViewStyle" TargetType="ListView">
                  <Setter Property="SelectionMode" Value="None" />
                  <Setter Property="ItemTemplate">
                    <Setter.Value>
                      <DataTemplate>
                        <Grid Width="50" Height="50" Margin="10">
                          <TextBlock Text="{Binding}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                      </DataTemplate>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="ItemsPanel">
                    <Setter.Value>
                      <ItemsPanelTemplate>
                        <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="7" />
                      </ItemsPanelTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
                <Style TargetType="SemanticZoom">
                  <Setter Property="Margin" Value="0" />
                  <Setter Property="Padding" Value="0" />

                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="SemanticZoom">
                        <Grid>
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SemanticZoomStates">
                              <VisualState x:Name="ZoomInView">
                                <Storyboard>
                                  <FadeOutThemeAnimation TargetName="ZoomedOutPresenter" />
                                  <FadeInThemeAnimation TargetName="ZoomedInPresenter" />
                                </Storyboard>
                              </VisualState>
                              <VisualState x:Name="ZoomOutView">
                                <Storyboard>
                                  <FadeOutThemeAnimation TargetName="ZoomedInPresenter" />
                                  <FadeInThemeAnimation TargetName="ZoomedOutPresenter" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Border
                              RenderTransformOrigin="0, 0"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.RenderTransform>
                              <CompositeTransform x:Name="ManipulatedElementTransform" />
                            </Border.RenderTransform>
                            <Grid Margin="{TemplateBinding Padding}">
                              <Viewbox Stretch="Fill">
                                <ContentPresenter
                                      x:Name="ZoomedInPresenter"
                                      RenderTransformOrigin="0.5, 0.5"
                                      Visibility="Collapsed"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding ZoomedInView}">
                                  <ContentPresenter.RenderTransform>
                                    <CompositeTransform x:Name="ZoomedInTransform" />
                                  </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                              </Viewbox>
                              <Viewbox Stretch="Fill">
                                <ContentPresenter
                                      x:Name="ZoomedOutPresenter" 
                                      RenderTransformOrigin="0.5, 0.5"
                                      Content="{TemplateBinding ZoomedOutView}"
                                      IsHitTestVisible="False"
                                      Visibility="Collapsed">
                                  <ContentPresenter.RenderTransform>
                                    <CompositeTransform x:Name="ZoomedOutTransform" />
                                  </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                              </Viewbox>
                            </Grid>
                          </Border>
                        </Grid>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Border.Resources>

              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="70"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Button x:Name="PrevButton" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE112;" FontSize="30"/>
                  </Button>
                  <Border x:Name="HeaderBorder" Grid.Column="1" HorizontalAlignment="Stretch"  VerticalAlignment="Center" Background="Transparent">
                    <Viewbox>
                      <TextBlock x:Name="HeaderBlock" FontSize="56" Margin="50,5" FontFamily="Segoe UI Light" HorizontalAlignment="Center" />
                    </Viewbox>
                  </Border>
                  <Button x:Name="NextButton" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2">
                    <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE111;" FontSize="30"/>
                  </Button>
                </Grid>

                <Grid Grid.Row="1">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Viewbox>
                      <ListView x:Name="DayOfWeekListView" Style="{StaticResource DayOfWeekListViewStyle}" />
                    </Viewbox>

                    <Viewbox Grid.Row="1" Stretch="Fill">
                      <SemanticZoom x:Name="LowSemanticZoom">
                        <SemanticZoom.ZoomedInView>
                          <ListView x:Name="DayListView" Style="{StaticResource DayListViewStyle}" />
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                          <local:SemanticZoomViewContainer>
                            <Viewbox>
                              <SemanticZoom x:Name="HighSemanticZoom">
                                <SemanticZoom.ZoomedInView>
                                  <ListView x:Name="MonthListView" Style="{StaticResource MonthListViewStyle}" />
                                </SemanticZoom.ZoomedInView>
                                <SemanticZoom.ZoomedOutView>
                                  <ListView x:Name="YearListView" Style="{StaticResource YearListViewStyle}" />
                                </SemanticZoom.ZoomedOutView>
                              </SemanticZoom>
                            </Viewbox>
                          </local:SemanticZoomViewContainer>
                        </SemanticZoom.ZoomedOutView>
                      </SemanticZoom>
                    </Viewbox>
                  </Grid>
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:DatePicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="200" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Background" Value="#CCFFFFFF" />
    <Setter Property="PopupBrush" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="DateFormat" >
      <Setter.Value>
        {0:d}
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DatePicker">
          <Grid x:Name="LayoutRoot">
            <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>

                <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />
                <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />

                <TextBlock 
                  Margin="5,0,0,0"
                  FontSize="20"
                  Foreground="Black"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Left"              
                  Text="{Binding DateString, RelativeSource={RelativeSource TemplatedParent}}"/>

                <TextBlock
                  Text="&#57361;"
                  Grid.Column="1"
                  IsHitTestVisible="False"
                  Margin="0,0,6,4"
                  Foreground="{StaticResource PickerArrowForeground}"
                  FontWeight="Bold"
                  FontSize="{StaticResource ComboBoxArrowThemeFontSize}"
                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Expander -->

  <Style TargetType="local:Expander">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Expander">
          <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.Resources>
              <DataTemplate x:Name="ButtonCollapsedTemplate">
                <Viewbox Width="50" Height="50">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE095;" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                      <RotateTransform Angle="90" />
                    </TextBlock.RenderTransform>
                  </TextBlock>
                </Viewbox>
              </DataTemplate>
              <DataTemplate x:Name="ButtonExpandedTemplate">
                <Viewbox Width="50" Height="50">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE095;" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                      <RotateTransform Angle="270" />
                    </TextBlock.RenderTransform>
                  </TextBlock>
                </Viewbox>
              </DataTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <PopOutThemeAnimation TargetName="ExpandSite" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility" BeginTime="0:0:0.15">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <PopInThemeAnimation TargetName="ExpandSite" FromVerticalOffset="-200" FromHorizontalOffset="0" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Button" Storyboard.TargetProperty="ContentTemplate">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonExpandedTemplate}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFocusStates">
                <VisualState x:Name="HeaderFocused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HeaderUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Padding="{TemplateBinding Padding}" x:Name="ExpanderBlock">
                  <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter ContentTemplate="{StaticResource ButtonCollapsedTemplate}" x:Name="Button" />
                    <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="1" />
                    <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="1"/>

                    <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" VerticalAlignment="Center"/>
                  </Grid>
                </Border>
                <Border 
                    x:Name="ExpandSite"
                    Grid.Row="1">
                  <ContentControl                                     
                      Content="{TemplateBinding Content}" 
                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                      FontFamily="{TemplateBinding FontFamily}" 
                      FontSize="{TemplateBinding FontSize}" 
                      FontStretch="{TemplateBinding FontStretch}" 
                      FontStyle="{TemplateBinding FontStyle}" 
                      FontWeight="{TemplateBinding FontWeight}" 
                      Foreground="{TemplateBinding Foreground}" 
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                      VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                      Margin="{TemplateBinding Padding}">
                  </ContentControl>
                </Border>
              </Grid>
            </Border>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="3" Grid.RowSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Layout -->

  <Style TargetType="local:Flyout">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="PopupMargin" Value="0,12,0,12" />
    <Setter Property="MinHeight" Value="54" />
    <Setter Property="MinWidth" Value="70" />
    <Setter Property="MaxHeight" Value="758" />
    <Setter Property="MaxWidth" Value="510" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Flyout">
          <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2" Margin="{TemplateBinding PopupMargin}">
            <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Margin}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBoxes -->

  <Style TargetType="local:NumericUpDown">
    <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}" />
    <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
    <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    <Setter Property="MaxWidth" Value="300" />
    <Setter Property="MaxHeight" Value="45" />
    <Setter Property="Minimum" Value="0" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="Increment" Value="1" />
    <Setter Property="Value" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Control">
          <Grid x:Name="LayoutRoot">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <local:MaskedTextBox 
                     x:Name="TextBox" 
                     Background="{TemplateBinding Background}"
                     Foreground="{TemplateBinding Foreground}" 
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     FontFamily="{TemplateBinding FontFamily}"
                     FontStyle="{TemplateBinding FontStyle}"
                     FontSize="{TemplateBinding FontSize}"
                     FontStretch="{TemplateBinding FontStretch}"
                     FontWeight="{TemplateBinding FontWeight}"
                     Padding="{TemplateBinding Padding}"
                     Margin="5" />
              <Button x:Name="DecButton" Grid.Column="1">
                <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE102;" RenderTransformOrigin="0.5,0.5">
                  <TextBlock.RenderTransform>
                    <RotateTransform Angle="90"/>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Button>
              <Button x:Name="IncButton"  Grid.Column="2">
                <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE102;" RenderTransformOrigin="0.5,0.5">
                  <TextBlock.RenderTransform>
                    <RotateTransform Angle="270"/>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Button>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TextBoxButton">
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextBoxButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                                               Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                                               Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                                                               Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                                               Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                                               Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                                                               Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0"
                                                                                 Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0"
                                                                                 Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BorderElement"
                                                        BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="BackgroundElement"
                                                        Background="{StaticResource TextBoxButtonBackgroundThemeBrush}"
                                                        Margin="{TemplateBinding BorderThickness}">
              <TextBlock x:Name="GlyphElement"
                                                               Foreground="{StaticResource TextBoxButtonForegroundThemeBrush}"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               Text="{TemplateBinding Text}"
                                                               FontFamily="{StaticResource SymbolThemeFontFamily}"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:MaskedTextBox">
    <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}" />
    <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    <Setter Property="ShowDeleteButton" Value="True" />    
    <Setter Property="ErrorStyle">
      <Setter.Value>
        <Style TargetType="ScrollViewer">
          <Setter Property="Foreground" Value="Red" />
          <Setter Property="ToolTipService.ToolTip" Value="Error" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MaskedTextBox">
          <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                     Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                     Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                     Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Duration="0"
                                                       To="{StaticResource TextControlBackgroundThemeOpacity}" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Duration="0"
                                                       To="{StaticResource TextControlBorderThemeOpacity}" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Duration="0"
                                                       To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Duration="0"
                                                       To="{StaticResource TextControlPointerOverBorderThemeOpacity}" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightItemsLeftPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightItemsRightPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Style">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Invalid" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.Resources>
                <local:BooleanToVisibilityConverter x:Key="bvc" />
                <local:MaskedTextBoxItemsConverter x:Key="avc" />
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="3"/>
              <Border x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="3"/>
              <ScrollViewer x:Name="ContentElement" Grid.Column="1"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                Margin="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                IsTabStop="False"
                Style="{TemplateBinding ErrorStyle}"
                ZoomMode="Disabled" />

              <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="4">
                <StackPanel x:Name="PermanentlyItemsLeftPanel" Orientation="Horizontal">
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='LeftPermanently'}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </StackPanel>
                <StackPanel x:Name="HighlightItemsLeftPanel" Orientation="Horizontal" Visibility="Collapsed">
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='LeftHighlight'}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </StackPanel>
              </StackPanel>


              <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="4">
                <StackPanel x:Name="HighlightItemsRightPanel" Orientation="Horizontal" Visibility="Collapsed">
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='RightHighlight'}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                  <Border Visibility="{Binding ShowDeleteButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bvc}}" >
                    <local:TextBoxButton x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" FontSize="{TemplateBinding FontSize}" Text="&#xE0A4;"/>
                  </Border>
                </StackPanel>
                <StackPanel x:Name="PermanentlyItemsRightPanel" Orientation="Horizontal">
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='RightPermanently'}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </StackPanel>
              </StackPanel>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Plain Menu -->

  <Style TargetType="local:PlainMenu">
    <Setter Property="Foreground" Value="{StaticResource MenuItemForeground}" />
    <Setter Property="Background" Value="{StaticResource MenuBackground}" />
    <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainMenu">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <local:ExistToVisibilityConverter x:Key="ec" />
              <Storyboard x:Key="OpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.025" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="CloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.025" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid>
              <Border 
                  x:Name="ItemsContainer" 
                  RenderTransformOrigin="0.5,0.5"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                <Border.RenderTransform>
                  <ScaleTransform ScaleX="1" />
                </Border.RenderTransform>
                <ItemsControl TabNavigation="Cycle" IsTabStop="False" Margin="2,3">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>

                  <TextBlock HorizontalAlignment="Center" FontSize="20" Text="{TemplateBinding Caption}" Visibility="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}}" Margin="0,5,0,0" IsHoldingEnabled="True"/>
                  <local:PlainItem x:Name="BackItem" Label="&#xE0A6;" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="40" Style="{TemplateBinding BackItemStyle}"/>
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </ItemsControl>
              </Border>

              <Border x:Name="ChildMenuContainer" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainItem">
    <Setter Property="Height" Value="40" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainItem">
          <Grid HorizontalAlignment="Stretch">
            <Grid.Resources>
              <local:EqualToVisibilityConverter x:Key="ec" />
              <local:ExistToVisibilityConverter x:Key="exc" />
              <local:BooleanToVisibilityConverter x:Key="bc" />
              <Style TargetType="Viewbox">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </Grid.Resources>
            <Border HorizontalAlignment="Stretch">
              <Button x:Name="Button" HorizontalAlignment="Stretch" Padding="0" IsEnabled="{TemplateBinding IsEnabled}"
                      Background="{StaticResource MenuItemBackground}" Foreground="{StaticResource MenuItemForeground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      MinHeight="40">
                <Button.Template>
                  <ControlTemplate TargetType="Button">
                    <Grid>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                          <VisualState x:Name="Normal" />
                          <VisualState x:Name="PointerOver">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemHoverBackground}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemHoverForeground}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Pressed">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemPressedBackground}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemPressedForeground}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Disabled">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                          <VisualState x:Name="Focused">
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                              <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unfocused" />
                          <VisualState x:Name="PointerFocused" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center" />
                      </Border>
                      <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="1.5" />
                      <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="0.5" />
                    </Grid>
                  </ControlTemplate>
                </Button.Template>

                <Grid HorizontalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="40" />
                  </Grid.ColumnDefinitions>

                  <Grid Grid.Column="0" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bc}}">
                    <Viewbox>
                      <TextBlock Text="&#xE10B;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=None}" />
                    </Viewbox>
                    <Viewbox>
                      <TextBlock Text="&#xE10B;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=CheckBox}" />
                    </Viewbox>
                    <Viewbox>
                      <TextBlock Text="&#xE236;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=RadioButton}"/>
                    </Viewbox>
                  </Grid>

                  <Grid Grid.Column="1">
                    <TextBlock 
                      Text="{TemplateBinding Label}" 
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"                               
                      FontSize="{TemplateBinding FontSize}"                                
                      FontFamily="{TemplateBinding FontFamily}" 
                      FontStretch="{TemplateBinding FontStretch}" 
                      FontStyle="{TemplateBinding FontStyle}" 
                      FontWeight="{TemplateBinding FontWeight}"
                      Margin="0,0,15,0"/>
                  </Grid>

                  <Grid Grid.Column="2">
                    <Image Source="{TemplateBinding Image}" Width="20" Height="20" Stretch="Uniform" HorizontalAlignment="Right" />
                    <Border Width="20" Height="20" HorizontalAlignment="Right">
                      <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                  </Grid>

                  <Grid Grid.Column="3">
                    <Viewbox>
                      <TextBlock Text="&#xE102;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Submenu, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource exc}}"/>
                    </Viewbox>
                  </Grid>
                </Grid>
              </Button>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainItemSeparator">
    <Setter Property="Mode" Value="None" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Height" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainItemSeparator">
          <Border Padding="20,4" Background="Transparent">
            <Rectangle Fill="{StaticResource MenuSeparatorFill}" HorizontalAlignment="Stretch"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Radial Menu-->

  <Style TargetType="local:RadialItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialItem">
          <Grid x:Name="LayoutRoot"  Height="278" Width="278" RenderTransformOrigin="0.5,0.5">
            <Grid.Resources>
              <local:BooleanToVisibilityConverter x:Key="bvc" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0" To="0.5" Storyboard.TargetName="ContentBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HoverStates">
                <VisualState x:Name="Unhover" />
                <VisualState x:Name="HoverBody">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="BodyHoverPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="RingHoverPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ModeStates">
                <VisualState x:Name="None" />
                <VisualState x:Name="Submenu">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="RingActivePath" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="ArrowPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="BodyHoverPath" Stroke="{Binding ParentMenu.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="2" Opacity="0" StrokeLineJoin="Round" />

            <Path x:Name="CheckedPath" Stroke="{Binding ParentMenu.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="1" StrokeLineJoin="Round" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bvc}}"/>

            <Path x:Name="RingActivePath" Fill="{Binding ParentMenu.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" />
            <Path x:Name="RingHoverPath" Fill="{Binding ParentMenu.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" />

            <Path x:Name="ArrowPath" Fill="White" Opacity="0" />

            <Canvas>
              <Grid MinWidth="0" Width="26" Height="24" x:Name="ContentBlock">
                <Image x:Name="Image" Height="19" Width="20" Stretch="Uniform" IsHitTestVisible="false" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{TemplateBinding Image}" />
                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Border Background="#88FFFFFF" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,3,0,0" Visibility="Visible" >
                  <TextBlock Foreground="#FF707070" FontFamily="Segoe UI Semilight" FontSize="8" Text="{TemplateBinding ValueText}" />
                </Border>
                <Rectangle Height="5" Width="20" Margin="0,0,0,2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Visible" Fill="{TemplateBinding ValueBrush}" />
              </Grid>

              <TextBlock x:Name="LabelBlock" Text="{TemplateBinding Label}" Foreground="#FF707070" FontFamily="Segoe UI Semilight" FontSize="10" Height="28" Width="47" TextWrapping="Wrap" TextAlignment="Center" />
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialMenu">
    <Setter Property="BodyBrush" Value="White" />
    <Setter Property="RingBackgroundBrush" Value="#BFE1FC" />
    <Setter Property="RingActiveBrush" Value="#7CC9FF" />
    <Setter Property="RingHoverBrush" Value="#3BA6F4" />
    <Setter Property="Width" Value="278" />
    <Setter Property="Height" Value="318" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialMenu">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Storyboard x:Key="RootOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="RootCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="IndicatorStates">
                <VisualState x:Name="IndicatorNormal" />
                <VisualState x:Name="IndicatorDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBack">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBackDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IndicatorHoverStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="IndicatorHoverActive" GeneratedDuration="0:0:0.3">
                    <Storyboard>
                      <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="IndicatorHoverNone" />
                <VisualState x:Name="IndicatorHoverActive" >
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.RowDefinitions>
              <RowDefinition Height="40" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid x:Name="ToolTipContainer" Background="Transparent">
              <Border x:Name="ToolTipBorder" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" BorderThickness="2" BorderBrush="#808080" Visibility="Collapsed" Padding="10,2" Height="35">
                <TextBlock x:Name="ToolTipTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#808080" FontSize="12"/>
              </Border>
            </Grid>

            <Grid Grid.Row="1" >
              <!-- Items -->
              <Grid x:Name="ItemsBlock" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0" />
                </Grid.RenderTransform>

                <Ellipse Fill="{TemplateBinding RingBackgroundBrush}" />
                <Ellipse x:Name="BodyEllipse" Fill="{TemplateBinding BodyBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <Grid />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>

              <!-- Indicator -->
              <Grid x:Name="IndicatorGroupBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Width="46" Height="46">
                <Ellipse Name="IndicatorHoverBlock" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" Opacity="0" />

                <Grid Name="IndicatorBackBlock" Height="46" Width="46" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Viewbox>
                    <Grid Height="48" Width="48" >
                      <Grid Margin="0,-17,0,0">
                        <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE0A6;" Foreground="{TemplateBinding RingActiveBrush}"/>
                      </Grid>
                    </Grid>
                  </Viewbox>
                </Grid>

                <Grid Name="IndicatorCurrentBlock">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Border Height="38" Width="38" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid>
                      <Image Height="38" Width="38" Stretch="Uniform" Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" />
                      <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                  </Border>
                </Grid>
              </Grid>

              <!-- TouchMask -->
              <Border Name="TouchMask" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="True" />
            </Grid>

            <Border x:Name="ChildMenuContainer" Grid.RowSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialSlider">
    <Setter Property="BodyBrush" Value="White" />
    <Setter Property="RingBackgroundBrush" Value="#BFE1FC" />
    <Setter Property="RingActiveBrush" Value="#7CC9FF" />
    <Setter Property="RingHoverBrush" Value="#3BA6F4" />
    <Setter Property="Width" Value="278" />
    <Setter Property="Height" Value="318" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialSlider">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Storyboard x:Key="RootOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="RootCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="SliderBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Style TargetType="Path" x:Key="PointerBlockStyle">
                <Setter Property="Width" Value="1" />
                <Setter Property="Height" Value="49" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="64" />
              </Style>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="IndicatorStates">
                <VisualState x:Name="IndicatorNormal" />
                <VisualState x:Name="IndicatorDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBack">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBackDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IndicatorHoverStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="IndicatorHoverActive" GeneratedDuration="0:0:0.3">
                    <Storyboard>
                      <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="IndicatorHoverNone" />
                <VisualState x:Name="IndicatorHoverActive" >
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.3" To="0.3" Storyboard.TargetName="ControlsContainer" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverPointer">
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="PointerHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.RowDefinitions>
              <RowDefinition Height="40" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid x:Name="ToolTipContainer" Background="Transparent">
              <Border x:Name="ToolTipBorder" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" BorderThickness="2" BorderBrush="#808080" Visibility="Collapsed" Padding="10,2" Height="35">
                <TextBlock x:Name="ToolTipTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#808080" FontSize="12"/>
              </Border>
            </Grid>

            <Grid Grid.Row="1" >
              <!-- Slider -->
              <Grid x:Name="SliderBlock" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0" />
                </Grid.RenderTransform>

                <Ellipse Fill="{TemplateBinding BodyBrush}" />

                <Grid x:Name="ControlsContainer" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <Viewbox>
                    <Grid>
                      <ContentPresenter Height="150" Width="150" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <ContentPresenter.Resources>
                          <DataTemplate x:Name="NotchTemplate">
                            <Canvas Height="150" Width="150">
                              <Path Fill="{Binding RingActiveBrush}" Data="M 142,74 L 150,75 L 142,76 Z"/>
                            </Canvas>
                          </DataTemplate>
                        </ContentPresenter.Resources>
                        <ContentPresenter.Content>
                          <Canvas Height="150" Width="150">
                            <Ellipse Canvas.Left="10" Canvas.Top="10" Height="130" Width="130" Fill="{TemplateBinding BodyBrush}" Stroke="{TemplateBinding RingActiveBrush}" StrokeThickness="1" />
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="0" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="45" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="90" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="135" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="180" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="225" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="270" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5">
                              <ContentPresenter.RenderTransform>
                                <RotateTransform Angle="315" />
                              </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                          </Canvas>
                        </ContentPresenter.Content>
                      </ContentPresenter>
                      <Path x:Name="PointerBlock" Fill="{TemplateBinding RingActiveBrush}" Style="{StaticResource PointerBlockStyle}" Data="M 0,49 L 0.5,0 L 1,49 L 0,49 Z">
                        <Path.RenderTransform>
                          <RotateTransform  CenterX="1" CenterY="69"/>
                        </Path.RenderTransform>
                      </Path>
                      <Path x:Name="PointerHoverBlock" Stroke="{TemplateBinding RingHoverBrush}" Style="{StaticResource PointerBlockStyle}" Data="M 0.5,49 L 0.5,15" StrokeDashArray="2,2" Opacity="0">
                        <Path.RenderTransform>
                          <RotateTransform CenterX="1" CenterY="69"/>
                        </Path.RenderTransform>
                      </Path>
                      <Canvas x:Name="LabelContainer" Height="266" Width="266" />
                    </Grid>
                  </Viewbox>
                </Grid>
              </Grid>

              <!-- Indicator -->
              <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="46" Height="46">
                <Ellipse Name="IndicatorHoverBlock" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" Opacity="0" />

                <Grid Name="IndicatorBackBlock" Height="46" Width="46" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Viewbox>
                    <Grid Height="48" Width="48" >
                      <Grid Margin="0,-17,0,0">
                        <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE0A6;" Foreground="{TemplateBinding RingActiveBrush}"/>
                      </Grid>
                    </Grid>
                  </Viewbox>
                </Grid>

                <Grid Name="IndicatorCurrentBlock">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Border Height="38" Width="38" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid>
                      <Image Height="38" Width="38" Stretch="Uniform" Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" />
                      <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                  </Border>
                </Grid>
              </Grid>

              <!-- TouchMask -->
              <Border Name="TouchMask" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="True" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialColorPicker">
    <Setter Property="BodyBrush" Value="White" />
    <Setter Property="RingBackgroundBrush" Value="#BFE1FC" />
    <Setter Property="RingActiveBrush" Value="#7CC9FF" />
    <Setter Property="RingHoverBrush" Value="#3BA6F4" />
    <Setter Property="Width" Value="278" />
    <Setter Property="Height" Value="318" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialColorPicker">
          <Grid x:Name="LayoutRoot">
            <Grid.Resources>
              <Storyboard x:Key="RootOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="RootCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuOpenStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SubmenuCloseStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ItemsBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <local:ColorToBrushConverter x:Key="cbc"/>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="IndicatorStates">
                <VisualState x:Name="IndicatorNormal" />
                <VisualState x:Name="IndicatorDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBack">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBackDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorCurrentBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IndicatorHoverStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="IndicatorHoverActive" GeneratedDuration="0:0:0.3">
                    <Storyboard>
                      <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="IndicatorHoverNone" />
                <VisualState x:Name="IndicatorHoverActive" >
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="PickerStates">
                <VisualState x:Name="Primary">
                  <Storyboard>
                    <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetName="SecondaryColorItems" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation To="0" Duration="0:0:0.5" Storyboard.TargetName="SecondaryMaskEllipse" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ColorItems">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ColorItems">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Secondary">
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0:0:0.5" Storyboard.TargetName="SecondaryMaskEllipse" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation To="1" Duration="0:0:0.5" Storyboard.TargetName="SecondaryColorItems" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ColorItems">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ColorItems">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.5">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.RowDefinitions>
              <RowDefinition Height="40" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid x:Name="ToolTipContainer" Background="Transparent">
              <Border x:Name="ToolTipBorder" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" BorderThickness="2" BorderBrush="#808080" Visibility="Collapsed" Padding="10,2" Height="35">
                <TextBlock x:Name="ToolTipTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#808080" FontSize="12"/>
              </Border>
            </Grid>

            <Grid Grid.Row="1" >
              <Grid x:Name="ItemsBlock" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0" />
                </Grid.RenderTransform>

                <Ellipse Fill="{TemplateBinding RingBackgroundBrush}" />
                <Ellipse x:Name="BodyEllipse" Fill="{TemplateBinding BodyBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" />

                <!-- Items -->
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <Grid />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </Grid>

                <!-- SecondaryColorItem -->
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                  <ItemsControl x:Name="SecondaryColorItems">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <Grid />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </Grid>

                <!-- ColorItem -->
                <Grid x:Name="ColorItems" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                  <Grid.RenderTransform>
                    <ScaleTransform />
                  </Grid.RenderTransform>
                  <Ellipse x:Name="SecondaryMaskEllipse" Fill="{TemplateBinding BodyBrush}" Stroke="White" StrokeThickness="2" Opacity="0" />
                  <ItemsControl ItemsSource="{Binding ColorItems, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <Grid />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </Grid>
              </Grid>

              <!-- Indicator -->
              <Grid x:Name="IndicatorGroupBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Width="46" Height="46">
                <Ellipse Name="IndicatorHoverBlock" StrokeThickness="2" Stroke="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cbc}}" Fill="{TemplateBinding BodyBrush}" Opacity="0" />

                <Grid Name="IndicatorBackBlock" Height="46" Width="46" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Viewbox>
                    <Grid Height="48" Width="48" >
                      <Grid Margin="0,-17,0,0">
                        <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE0A6;" Foreground="{TemplateBinding RingActiveBrush}"/>
                      </Grid>
                    </Grid>
                  </Viewbox>
                </Grid>

                <Grid Name="IndicatorCurrentBlock">
                  <Ellipse Height="40" Width="40" StrokeThickness="2" Stroke="{TemplateBinding RingActiveBrush}" Fill="{TemplateBinding BodyBrush}" />
                  <Border Height="38" Width="38" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid>
                      <Image Height="38" Width="38" Stretch="Uniform" Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" />
                      <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                  </Border>
                </Grid>

                <Canvas>
                  <Rectangle Width="18" Height="4" Canvas.Left="14" Canvas.Top="34" Fill="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cbc}}" />
                </Canvas>
              </Grid>

              <!-- TouchMask -->
              <Border Name="TouchMask" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="True" />
            </Grid>

            <Border x:Name="ChildMenuContainer" Grid.RowSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialColorPickerItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialColorPickerItem">
          <Grid x:Name="LayoutRoot" Height="278" Width="278" RenderTransformOrigin="0.5,0.5">
            <Grid.Resources>
              <local:HighlightBrushConverter x:Key="hbc" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups >
              <VisualStateGroup x:Name="HoverStates">
                <VisualState x:Name="Unhover" />
                <VisualState x:Name="HoverBody">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="BodyHoverPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="RingHoverPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ModeStates">
                <VisualState x:Name="None" />
                <VisualState x:Name="Submenu">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="ArrowPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OnlyBody">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="RingPath" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="RingHoverPath" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="BodyPath" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            <Path x:Name="BodyHoverPath" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hbc}}" StrokeThickness="3" Opacity="0" />
            <Path x:Name="ArcPath" Stroke="White" StrokeThickness="2" />
            <Path x:Name="RingPath" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            <Path x:Name="RingHoverPath" Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hbc}}" Opacity="0" />
            <Path x:Name="ArrowPath" Fill="White" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TreeView">
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel>
            <StackPanel.ChildrenTransitions>
              <TransitionCollection>
                <AddDeleteThemeTransition/>
                <ReorderThemeTransition/>
                <RepositionThemeTransition/>
              </TransitionCollection>
            </StackPanel.ChildrenTransitions>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TreeView">
          <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="0">
              <Border                              
                              Padding="{TemplateBinding Padding}"
                              Background="{TemplateBinding Background}"
                              Margin="1">
                <ScrollViewer
                                  x:Name="ScrollViewer"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"
                  ZoomMode="Disabled"
                                  Background="{x:Null}"
                                  BorderBrush="Transparent"
                                  BorderThickness="0"
                                  IsTabStop="False"
                                  TabNavigation="Once">
                  <Border Background="Transparent">
                    <ItemsPresenter Margin="5" />
                  </Border>
                </ScrollViewer>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TreeViewItem">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="Margin" Value="0 1 0 0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TreeViewItem">
          <Grid x:Name="LayoutRoot" Background="{x:Null}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="Header"
                                          Storyboard.TargetProperty="Foreground"
                                          Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <SolidColorBrush Color="#FF999999" />
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation
                                          Storyboard.TargetName="Selection"
                                          Storyboard.TargetProperty="Opacity"
                                          Duration="0"
                                          To=".75" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <DoubleAnimation
                                          Storyboard.TargetName="Selection"
                                          Storyboard.TargetProperty="Opacity"
                                          Duration="0"
                                          To=".2" />
                    <ColorAnimation
                                          Storyboard.TargetName="SelectionFill"
                                          Storyboard.TargetProperty="Color"
                                          Duration="0"
                                          To="#FF999999" />
                    <ColorAnimation
                                          Storyboard.TargetName="SelectionStroke"
                                          Storyboard.TargetProperty="Color"
                                          Duration="0"
                                          To="#FF333333" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HasItemsStates">
                <VisualState x:Name="HasItems" />
                <VisualState x:Name="NoItems">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="ExpanderButton"
                                          Storyboard.TargetProperty="Visibility"
                                          Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <PopOutThemeAnimation TargetName="ItemsHost" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0" BeginTime="0:0:0.15">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <PopInThemeAnimation TargetName="ItemsHost" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates" >
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="Validation"
                                          Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="Validation"
                                          Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames
                                          Storyboard.TargetName="ValidationToolTip"
                                          Storyboard.TargetProperty="IsOpen">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="True" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="15" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ToggleButton
                          x:Name="ExpanderButton"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          IsTabStop="False"
                          TabNavigation="Once">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <Grid x:Name="Root" Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="PointerOver" />
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Checked" >
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CheckedPressed">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CheckedPointerOver">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CheckedDisabled">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid HorizontalAlignment="Right" Margin="-4 1 4 2">
                      <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Text="&#x25B7;" x:Name="UncheckedVisual" VerticalAlignment="Center" HorizontalAlignment="Right" />
                      <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="20" Text="&#x25E2;" x:Name="CheckedVisual" VerticalAlignment="Center" HorizontalAlignment="Right" Opacity="0" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Rectangle
                          x:Name="Selection"
                          Grid.Column="1"
                          Opacity="0"
                          StrokeThickness="1"
                          IsHitTestVisible="False"
                          RadiusX="2"
                          RadiusY="2">
              <Rectangle.Fill>
                <SolidColorBrush x:Name="SelectionFill" Color="#FFBADDE9" />
              </Rectangle.Fill>
              <Rectangle.Stroke>
                <SolidColorBrush x:Name="SelectionStroke" Color="#FF6DBDD1" />
              </Rectangle.Stroke>
            </Rectangle>
            <Button
                          x:Name="Header"
                          Grid.Column="1"
                          ClickMode="Hover"
                          Background="{TemplateBinding Background}"
                          Foreground="{TemplateBinding Foreground}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"                          
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          IsTabStop="False"
                          TabNavigation="Once">
              <Button.Template>
                <ControlTemplate TargetType="Button">
                  <Grid Background="{TemplateBinding Background}">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation
                                                          Storyboard.TargetName="Hover"
                                                          Storyboard.TargetProperty="Opacity"
                                                          Duration="0"
                                                          To=".5" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation
                                                          Storyboard.TargetName="Content"
                                                          Storyboard.TargetProperty="Opacity"
                                                          Duration="0"
                                                          To=".55" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Rectangle
                                          x:Name="Hover"
                                          Opacity="0"
                                          Fill="#FFBADDE9"
                                          Stroke="#FF6DBDD1"
                                          StrokeThickness="1"
                                          IsHitTestVisible="False"
                                          RadiusX="2"
                                          RadiusY="2" />
                    <ContentPresenter
                                          x:Name="Content"                                          
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}" />
                  </Grid>
                </ControlTemplate>
              </Button.Template>
              <Button.Content>
                <ContentPresenter
                                  Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}" />
              </Button.Content>
            </Button>

            <Border
                          x:Name="Validation"
                          Grid.Column="1"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="#FFDB000C"
                          CornerRadius="2"
                          Visibility="Collapsed">
              <Grid
                              Width="10"
                              Height="10"
                              HorizontalAlignment="Right"
                              Margin="0,-4,-4,0"
                              VerticalAlignment="Top"
                              Background="Transparent">
                <Path Margin="-1,3,0,0" Fill="#FFDC000C" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z" />
                <Path Margin="-1,3,0,0" Fill="#FFFFFFFF" Data="M 0,0 L2,0 L 8,6 L8,8" />
              </Grid>
            </Border>

            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Breadcrumbs">
    <Setter Property="IsItemClickEnabled" Value="True" />
    <Setter Property="Margin" Value="-20,0,0,0" />
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="/" />
            <Rectangle Width="15" Opacity="0" />
            <ContentPresenter Content="{Binding}" />
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TabControl">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TabControl">
          <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualTop" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualBottom" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualLeft" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualRight" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- Top -->
            <Grid x:Name="TemplateTop" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>

              <local:TabPanel x:Name="TabPanelTop" Canvas.ZIndex="1" Margin="10,0,0,0" />

              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" MinHeight="10" MinWidth="10" Margin="0,-1,0,0">
                <ContentPresenter x:Name="ContentTop" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
              </Border>
              <Border x:Name="DisabledVisualTop" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="{StaticResource TabItemDisable}" Grid.Row="1" />
            </Grid>

            <!-- Bottom -->
            <Grid x:Name="TemplateBottom" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <local:TabPanel x:Name="TabPanelBottom" Canvas.ZIndex="1" Grid.Row="1" Margin="10,0,0,0" />

              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="10" MinWidth="10" Margin="0,0,0,-1">
                <ContentPresenter x:Name="ContentBottom" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
              </Border>
              <Border x:Name="DisabledVisualBottom" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Left -->
            <Grid x:Name="TemplateLeft" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <local:TabPanel x:Name="TabPanelLeft" Canvas.ZIndex="1" Margin="0,10,0,0" />

              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" MinHeight="10" MinWidth="10" Margin="-1,0,0,0">
                <ContentPresenter x:Name="ContentLeft" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
              </Border>
              <Border x:Name="DisabledVisualLeft" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="{StaticResource TabItemDisable}" Grid.Column="1" />
            </Grid>

            <!-- Right -->
            <Grid x:Name="TemplateRight" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <local:TabPanel x:Name="TabPanelRight" Grid.Column="1" Canvas.ZIndex="1" Margin="0,10,0,0" />

              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="10" MinWidth="10" Margin="0,0,-1,0">
                <ContentPresenter x:Name="ContentRight" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}" />
              </Border>
              <Border x:Name="DisabledVisualRight" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="{StaticResource TabItemDisable}" Margin="0" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TabItem">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Padding" Value="6,2,6,2"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="MinWidth" Value="5"/>
    <Setter Property="MinHeight" Value="5"/>
    <Setter Property="FontSize" Value="{StaticResource PerpetuumThemeFontSize}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TabItem">
          <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition To="PointerOver" GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualTopUnSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualBottomSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualBottomUnSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualLeftSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualLeftUnSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualRightSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualRightUnSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteTop" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackTop" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteBottom" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackBottom" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteLeft" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackLeft" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteRight" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackRight" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- Top/Selected -->
            <Grid x:Name="TemplateTopSelected" Visibility="Collapsed" Canvas.ZIndex="1">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}">
                <Border BorderThickness="1">
                  <Grid>
                    <Rectangle Fill="{StaticResource TabItemSelected}" Margin="-1,0,-1,-2" />
                    <ContentControl 
                      x:Name="HeaderTopSelected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}"/>
                  </Grid>
                </Border>
              </Border>

              <Rectangle x:Name="FocusVisualWhiteTop" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />
              <Rectangle x:Name="FocusVisualBlackTop" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />

              <Border x:Name="DisabledVisualTopSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Top/Unselected -->
            <Grid x:Name="TemplateTopUnselected" Visibility="Collapsed">
              <Border x:Name="BorderTop" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                <Border Background="{StaticResource TabItemUnselected}">
                  <Grid>
                    <ContentControl 
                      x:Name="HeaderTopUnselected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>
              <Border x:Name="DisabledVisualTopUnSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Bottom/Selected -->
            <Grid x:Name="TemplateBottomSelected" Visibility="Collapsed" Canvas.ZIndex="1">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1"  Background="{TemplateBinding Background}">
                <Border BorderThickness="1">
                  <Grid>
                    <Rectangle Fill="{StaticResource TabItemSelected}" Margin="-1,-2,-1,0" />
                    <ContentControl 
                      x:Name="HeaderBottomSelected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>

              <Rectangle x:Name="FocusVisualWhiteBottom" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />
              <Rectangle x:Name="FocusVisualBlackBottom" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />

              <Border x:Name="DisabledVisualBottomSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Bottom/Unselected -->
            <Grid x:Name="TemplateBottomUnselected" Visibility="Collapsed">
              <Border x:Name="BorderBottom" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Background="{TemplateBinding Background}">
                <Border Background="{StaticResource TabItemUnselected}" >
                  <Grid>
                    <ContentControl 
                      x:Name="HeaderBottomUnselected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>
              <Border x:Name="DisabledVisualBottomUnSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}"  />
            </Grid>

            <!-- Left/Selected -->
            <Grid x:Name="TemplateLeftSelected" Visibility="Collapsed" Canvas.ZIndex="1">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,1" Background="{TemplateBinding Background}" >
                <Border BorderThickness="1">
                  <Grid>
                    <Rectangle Fill="{StaticResource TabItemSelected}" Margin="0,-1,-2,-1" />
                    <ContentControl 
                      x:Name="HeaderLeftSelected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>

              <Rectangle x:Name="FocusVisualWhiteLeft" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />
              <Rectangle x:Name="FocusVisualBlackLeft" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />

              <Border x:Name="DisabledVisualLeftSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Left/Unselected -->
            <Grid x:Name="TemplateLeftUnselected" Visibility="Collapsed">
              <Border x:Name="BorderLeft" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Background="{TemplateBinding Background}">
                <Border Background="{StaticResource TabItemUnselected}">
                  <Grid>
                    <ContentControl 
                      x:Name="HeaderLeftUnselected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>
              <Border x:Name="DisabledVisualLeftUnSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Right/Selected -->
            <Grid x:Name="TemplateRightSelected" Visibility="Collapsed" Canvas.ZIndex="1">
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,1" Background="{TemplateBinding Background}">
                <Border BorderThickness="1">
                  <Grid>
                    <Rectangle Fill="{StaticResource TabItemSelected}" Margin="-2,-1,0,-1" />
                    <ContentControl 
                      x:Name="HeaderRightSelected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>

              <Rectangle x:Name="FocusVisualWhiteRight" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />
              <Rectangle x:Name="FocusVisualBlackRight" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="2" />

              <Border x:Name="DisabledVisualRightSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>

            <!-- Right/Unselected -->
            <Grid x:Name="TemplateRightUnselected" Visibility="Collapsed">
              <Border x:Name="BorderRight" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                <Border Background="{StaticResource TabItemUnselected}">
                  <Grid>
                    <ContentControl 
                      x:Name="HeaderRightUnselected"
                      IsTabStop="False"
                      Foreground="{TemplateBinding Foreground}" 
                      FontSize="{TemplateBinding FontSize}"
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                      Margin="{TemplateBinding Padding}" />
                  </Grid>
                </Border>
              </Border>
              <Border x:Name="DisabledVisualRightUnSelected" IsHitTestVisible="false" Opacity="0" Background="{StaticResource TabItemDisable}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style TargetType="local:RangeSlider">
    <Setter Property="Background" Value="{StaticResource SliderTrackBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SliderBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource SliderBorderThemeThickness}" />
    <Setter Property="Foreground" Value="{StaticResource SliderTrackDecreaseBackgroundThemeBrush}" />
    <Setter Property="ManipulationMode" Value="None" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RangeSlider">
          <Grid x:Name="LayoutRoot" Margin="{TemplateBinding Padding}">
            <Grid.Resources>
              <Style TargetType="Thumb" x:Key="SliderThumbStyle">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource SliderThumbBorderThemeBrush}" />
                <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundThemeBrush}" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                      <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMiddleRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>


                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMiddleRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalBorder"
                                                                       Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMiddleRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalInlineTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>


                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalBorder"
                                                                       Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMiddleRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalInlineTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightTickBar"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMiddleRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
                                                                       Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMinThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalMaxThumb"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteHorizontal" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackHorizontal" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhiteVertical" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlackVertical" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalTemplate" Background="Transparent">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="17" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="32" />
              </Grid.RowDefinitions>

              <Rectangle x:Name="HorizontalTrackRect"
                                       Fill="{TemplateBinding Background}"
                                       Grid.Row="1"
                                       Grid.ColumnSpan="3" />
              <Rectangle x:Name="HorizontalDecreaseRect" 
                                       Opacity="0"
                                       Grid.Row="1" />
              <Rectangle x:Name="HorizontalMiddleRect"
                                       Fill="{TemplateBinding Foreground}"
                                       Grid.Column="1"
                                       Grid.Row="1" />
              <TickBar x:Name="TopTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                     Height="{StaticResource SliderOutsideTickBarThemeHeight}"
                                     VerticalAlignment="Bottom"
                                     Margin="0,0,0,2"
                                     Grid.ColumnSpan="3" />
              <TickBar x:Name="HorizontalInlineTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}"
                                     Height="{StaticResource SliderTrackThemeHeight}"
                                     Grid.Row="1"
                                     Grid.ColumnSpan="3" />
              <TickBar x:Name="BottomTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                     Height="{StaticResource SliderOutsideTickBarThemeHeight}"
                                     VerticalAlignment="Top"
                                     Margin="0,2,0,0"
                                     Grid.Row="2"
                                     Grid.ColumnSpan="3" />
              <Rectangle x:Name="HorizontalBorder"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Grid.Row="1"
                                       Grid.ColumnSpan="3" />
              <Canvas Grid.Row="1" Grid.ColumnSpan="3" Height="{StaticResource SliderTrackThemeHeight}">
                <Thumb x:Name="HorizontalMinThumb"
                                   Background="{StaticResource SliderThumbBackgroundThemeBrush}"
                                   Style="{StaticResource SliderThumbStyle}"
                                   DataContext="{TemplateBinding MinValue}"
                                   Height="{StaticResource SliderTrackThemeHeight}"
                                   Width="{StaticResource SliderTrackThemeHeight}" />
                <Thumb x:Name="HorizontalMaxThumb"
                                   Background="{StaticResource SliderThumbBackgroundThemeBrush}"
                                   Style="{StaticResource SliderThumbStyle}"
                                   DataContext="{TemplateBinding MaxValue}"
                                   Height="{StaticResource SliderTrackThemeHeight}"
                                   Width="{StaticResource SliderTrackThemeHeight}" />
              </Canvas>
              <Rectangle x:Name="FocusVisualWhiteHorizontal"
                                       IsHitTestVisible="False"
                                       Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       Grid.RowSpan="3"
                                       Grid.ColumnSpan="3" />
              <Rectangle x:Name="FocusVisualBlackHorizontal"
                                       IsHitTestVisible="False"
                                       Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       Grid.RowSpan="3"
                                       Grid.ColumnSpan="3" />
            </Grid>

            <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Background="Transparent">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="17" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="17" />
              </Grid.ColumnDefinitions>

              <Rectangle x:Name="VerticalTrackRect"
                                       Fill="{TemplateBinding Background}"
                                       Grid.Column="1"
                                       Grid.RowSpan="3" />
              <Rectangle x:Name="VerticalDecreaseRect" 
                                       Opacity="0"
                                       Grid.Column="1" />
              <Rectangle x:Name="VerticalMiddleRect"
                                       Fill="{TemplateBinding Foreground}"
                                       Grid.Row="1"
                                       Grid.Column="1" />
              <TickBar x:Name="LeftTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                     Width="{StaticResource SliderOutsideTickBarThemeHeight}"
                                     HorizontalAlignment="Right"
                                     Margin="0,0,2,0"
                                     Grid.RowSpan="3" />
              <TickBar x:Name="VerticalInlineTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}"
                                     Width="{StaticResource SliderTrackThemeHeight}"
                                     Grid.Column="1"
                                     Grid.RowSpan="3" />
              <TickBar x:Name="RightTickBar"
                                     Visibility="Collapsed"
                                     Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                     Width="{StaticResource SliderOutsideTickBarThemeHeight}"
                                     HorizontalAlignment="Left"
                                     Margin="2,0,0,0"
                                     Grid.Column="2"
                                     Grid.RowSpan="3" />
              <Rectangle x:Name="VerticalBorder"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Grid.Column="1"
                                       Grid.RowSpan="3" />
              <Canvas Grid.Column="1" Grid.RowSpan="3" Width="{StaticResource SliderTrackThemeHeight}">
                <Thumb x:Name="VerticalMinThumb"
                                   Background="{StaticResource SliderThumbBackgroundThemeBrush}"
                                   Style="{StaticResource SliderThumbStyle}"
                                   DataContext="{TemplateBinding MinValue}"
                                   Height="{StaticResource SliderTrackThemeHeight}"
                                   Width="{StaticResource SliderTrackThemeHeight}" />
                <Thumb x:Name="VerticalMaxThumb"
                                   Background="{StaticResource SliderThumbBackgroundThemeBrush}"
                                   Style="{StaticResource SliderThumbStyle}"
                                   DataContext="{TemplateBinding MaxValue}"
                                   Height="{StaticResource SliderTrackThemeHeight}"
                                   Width="{StaticResource SliderTrackThemeHeight}" />
              </Canvas>
              <Rectangle x:Name="FocusVisualWhiteVertical"
                                       IsHitTestVisible="False"
                                       Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       Grid.ColumnSpan="3"
                                       Grid.RowSpan="3" />
              <Rectangle x:Name="FocusVisualBlackVertical"
                                       IsHitTestVisible="False"
                                       Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       Grid.ColumnSpan="3"
                                       Grid.RowSpan="3" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:LayoutTransformer">
    <Setter Property="Foreground" Value="#FF000000"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:LayoutTransformer">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="Control" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Accordion">
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="TabNavigation" Value="Once" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel VerticalAlignment="Top"  />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>

